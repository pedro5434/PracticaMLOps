2024-10-20 15:41:11,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-20 15:41:11,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-20 15:41:11,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-20 15:41:11,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-20 15:41:15,278:INFO:PyCaret ClassificationExperiment
2024-10-20 15:41:15,278:INFO:Logging name: clf-default-name
2024-10-20 15:41:15,287:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-20 15:41:15,287:INFO:version 3.3.2
2024-10-20 15:41:15,287:INFO:Initializing setup()
2024-10-20 15:41:15,287:INFO:self.USI: ab3e
2024-10-20 15:41:15,287:INFO:self._variable_keys: {'pipeline', 'y_train', 'seed', 'fold_generator', 'data', 'fix_imbalance', 'exp_id', 'USI', 'gpu_param', 'idx', 'memory', 'gpu_n_jobs_param', '_ml_usecase', 'y', 'target_param', 'logging_param', 'y_test', 'fold_shuffle_param', 'html_param', 'exp_name_log', '_available_plots', 'X_test', 'fold_groups_param', 'n_jobs_param', 'X_train', 'is_multiclass', 'log_plots_param', 'X'}
2024-10-20 15:41:15,287:INFO:Checking environment
2024-10-20 15:41:15,287:INFO:python_version: 3.11.8
2024-10-20 15:41:15,287:INFO:python_build: ('tags/v3.11.8:db85d51', 'Feb  6 2024 22:03:32')
2024-10-20 15:41:15,287:INFO:machine: AMD64
2024-10-20 15:41:15,287:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-20 15:41:15,287:INFO:Memory: svmem(total=17053163520, available=8803540992, percent=48.4, used=8249622528, free=8803540992)
2024-10-20 15:41:15,287:INFO:Physical Core: 2
2024-10-20 15:41:15,287:INFO:Logical Core: 4
2024-10-20 15:41:15,287:INFO:Checking libraries
2024-10-20 15:41:15,287:INFO:System:
2024-10-20 15:41:15,287:INFO:    python: 3.11.8 (tags/v3.11.8:db85d51, Feb  6 2024, 22:03:32) [MSC v.1937 64 bit (AMD64)]
2024-10-20 15:41:15,287:INFO:executable: c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\python.exe
2024-10-20 15:41:15,287:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-20 15:41:15,287:INFO:PyCaret required dependencies:
2024-10-20 15:41:15,589:INFO:                 pip: 24.0
2024-10-20 15:41:15,589:INFO:          setuptools: 65.5.0
2024-10-20 15:41:15,589:INFO:             pycaret: 3.3.2
2024-10-20 15:41:15,589:INFO:             IPython: 8.28.0
2024-10-20 15:41:15,589:INFO:          ipywidgets: 8.1.5
2024-10-20 15:41:15,589:INFO:                tqdm: 4.66.5
2024-10-20 15:41:15,590:INFO:               numpy: 1.26.4
2024-10-20 15:41:15,590:INFO:              pandas: 2.1.4
2024-10-20 15:41:15,590:INFO:              jinja2: 3.1.4
2024-10-20 15:41:15,590:INFO:               scipy: 1.11.4
2024-10-20 15:41:15,590:INFO:              joblib: 1.3.2
2024-10-20 15:41:15,590:INFO:             sklearn: 1.4.2
2024-10-20 15:41:15,590:INFO:                pyod: 2.0.2
2024-10-20 15:41:15,590:INFO:            imblearn: 0.12.4
2024-10-20 15:41:15,590:INFO:   category_encoders: 2.6.4
2024-10-20 15:41:15,590:INFO:            lightgbm: 4.5.0
2024-10-20 15:41:15,590:INFO:               numba: 0.60.0
2024-10-20 15:41:15,590:INFO:            requests: 2.32.3
2024-10-20 15:41:15,590:INFO:          matplotlib: 3.7.5
2024-10-20 15:41:15,590:INFO:          scikitplot: 0.3.7
2024-10-20 15:41:15,591:INFO:         yellowbrick: 1.5
2024-10-20 15:41:15,591:INFO:              plotly: 5.24.1
2024-10-20 15:41:15,591:INFO:    plotly-resampler: Not installed
2024-10-20 15:41:15,591:INFO:             kaleido: 0.2.1
2024-10-20 15:41:15,591:INFO:           schemdraw: 0.15
2024-10-20 15:41:15,591:INFO:         statsmodels: 0.14.4
2024-10-20 15:41:15,591:INFO:              sktime: 0.26.0
2024-10-20 15:41:15,591:INFO:               tbats: 1.1.3
2024-10-20 15:41:15,591:INFO:            pmdarima: 2.0.4
2024-10-20 15:41:15,591:INFO:              psutil: 6.1.0
2024-10-20 15:41:15,592:INFO:          markupsafe: 3.0.2
2024-10-20 15:41:15,592:INFO:             pickle5: Not installed
2024-10-20 15:41:15,592:INFO:         cloudpickle: 3.1.0
2024-10-20 15:41:15,592:INFO:         deprecation: 2.1.0
2024-10-20 15:41:15,592:INFO:              xxhash: 3.5.0
2024-10-20 15:41:15,593:INFO:           wurlitzer: Not installed
2024-10-20 15:41:15,593:INFO:PyCaret optional dependencies:
2024-10-20 15:41:16,286:INFO:                shap: 0.44.1
2024-10-20 15:41:16,286:INFO:           interpret: 0.6.4
2024-10-20 15:41:16,286:INFO:                umap: 0.5.6
2024-10-20 15:41:16,286:INFO:     ydata_profiling: 4.11.0
2024-10-20 15:41:16,286:INFO:  explainerdashboard: 0.4.7
2024-10-20 15:41:16,286:INFO:             autoviz: Not installed
2024-10-20 15:41:16,286:INFO:           fairlearn: 0.7.0
2024-10-20 15:41:16,286:INFO:          deepchecks: Not installed
2024-10-20 15:41:16,286:INFO:             xgboost: Not installed
2024-10-20 15:41:16,286:INFO:            catboost: Not installed
2024-10-20 15:41:16,286:INFO:              kmodes: Not installed
2024-10-20 15:41:16,286:INFO:             mlxtend: Not installed
2024-10-20 15:41:16,286:INFO:       statsforecast: Not installed
2024-10-20 15:41:16,286:INFO:        tune_sklearn: Not installed
2024-10-20 15:41:16,286:INFO:                 ray: Not installed
2024-10-20 15:41:16,291:INFO:            hyperopt: 0.2.7
2024-10-20 15:41:16,291:INFO:              optuna: 4.0.0
2024-10-20 15:41:16,291:INFO:               skopt: 0.10.2
2024-10-20 15:41:16,291:INFO:              mlflow: 2.17.0
2024-10-20 15:41:16,291:INFO:              gradio: Not installed
2024-10-20 15:41:16,291:INFO:             fastapi: 0.115.2
2024-10-20 15:41:16,291:INFO:             uvicorn: 0.32.0
2024-10-20 15:41:16,291:INFO:              m2cgen: Not installed
2024-10-20 15:41:16,291:INFO:           evidently: Not installed
2024-10-20 15:41:16,291:INFO:               fugue: Not installed
2024-10-20 15:41:16,291:INFO:           streamlit: Not installed
2024-10-20 15:41:16,291:INFO:             prophet: Not installed
2024-10-20 15:41:16,291:INFO:None
2024-10-20 15:41:16,291:INFO:Set up data.
2024-10-20 15:41:16,436:INFO:Set up folding strategy.
2024-10-20 15:41:16,436:INFO:Set up train/test split.
2024-10-20 15:41:16,612:INFO:Set up index.
2024-10-20 15:41:16,618:INFO:Assigning column types.
2024-10-20 15:41:16,682:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-20 15:41:16,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 15:41:16,773:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 15:41:16,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:16,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:16,908:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 15:41:16,908:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 15:41:16,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:16,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:16,965:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-20 15:41:17,040:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 15:41:17,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:17,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:17,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 15:41:17,211:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:17,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:17,216:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-20 15:41:17,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:17,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:17,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:17,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:17,406:INFO:Preparing preprocessing pipeline...
2024-10-20 15:41:17,421:INFO:Set up simple imputation.
2024-10-20 15:41:17,452:INFO:Set up encoding of ordinal features.
2024-10-20 15:41:17,467:INFO:Set up encoding of categorical features.
2024-10-20 15:41:18,356:INFO:Finished creating preprocessing pipeline.
2024-10-20 15:41:18,376:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 15:41:18,376:INFO:Creating final display dataframe.
2024-10-20 15:41:19,717:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Exited
2                   Target type            Binary
3           Original data shape      (165034, 14)
4        Transformed data shape      (165034, 15)
5   Transformed train set shape      (115523, 15)
6    Transformed test set shape       (49511, 15)
7               Ignore features                 1
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              ab3e
2024-10-20 15:41:19,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:19,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:19,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:19,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 15:41:19,953:INFO:setup() successfully completed in 4.67s...............
2024-10-20 15:41:38,293:INFO:Initializing compare_models()
2024-10-20 15:41:38,294:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-20 15:41:38,294:INFO:Checking exceptions
2024-10-20 15:41:38,359:INFO:Preparing display monitor
2024-10-20 15:41:38,402:INFO:Initializing Logistic Regression
2024-10-20 15:41:38,402:INFO:Total runtime is 0.0 minutes
2024-10-20 15:41:38,412:INFO:SubProcess create_model() called ==================================
2024-10-20 15:41:38,413:INFO:Initializing create_model()
2024-10-20 15:41:38,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:41:38,414:INFO:Checking exceptions
2024-10-20 15:41:38,414:INFO:Importing libraries
2024-10-20 15:41:38,414:INFO:Copying training dataset
2024-10-20 15:41:38,582:INFO:Defining folds
2024-10-20 15:41:38,582:INFO:Declaring metric variables
2024-10-20 15:41:38,585:INFO:Importing untrained model
2024-10-20 15:41:38,590:INFO:Logistic Regression Imported successfully
2024-10-20 15:41:38,597:INFO:Starting cross validation
2024-10-20 15:41:38,606:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:42:11,333:INFO:Calculating mean and std
2024-10-20 15:42:11,333:INFO:Creating metrics dataframe
2024-10-20 15:42:11,340:INFO:Uploading results into container
2024-10-20 15:42:11,343:INFO:Uploading model into container now
2024-10-20 15:42:11,343:INFO:_master_model_container: 1
2024-10-20 15:42:11,343:INFO:_display_container: 2
2024-10-20 15:42:11,343:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-20 15:42:11,343:INFO:create_model() successfully completed......................................
2024-10-20 15:42:11,516:INFO:SubProcess create_model() end ==================================
2024-10-20 15:42:11,516:INFO:Creating metrics dataframe
2024-10-20 15:42:11,531:INFO:Initializing K Neighbors Classifier
2024-10-20 15:42:11,531:INFO:Total runtime is 0.552152148882548 minutes
2024-10-20 15:42:11,536:INFO:SubProcess create_model() called ==================================
2024-10-20 15:42:11,536:INFO:Initializing create_model()
2024-10-20 15:42:11,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:42:11,536:INFO:Checking exceptions
2024-10-20 15:42:11,536:INFO:Importing libraries
2024-10-20 15:42:11,536:INFO:Copying training dataset
2024-10-20 15:42:11,671:INFO:Defining folds
2024-10-20 15:42:11,671:INFO:Declaring metric variables
2024-10-20 15:42:11,678:INFO:Importing untrained model
2024-10-20 15:42:11,687:INFO:K Neighbors Classifier Imported successfully
2024-10-20 15:42:11,703:INFO:Starting cross validation
2024-10-20 15:42:11,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:42:31,819:INFO:Calculating mean and std
2024-10-20 15:42:31,819:INFO:Creating metrics dataframe
2024-10-20 15:42:31,823:INFO:Uploading results into container
2024-10-20 15:42:31,823:INFO:Uploading model into container now
2024-10-20 15:42:31,823:INFO:_master_model_container: 2
2024-10-20 15:42:31,828:INFO:_display_container: 2
2024-10-20 15:42:31,828:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-20 15:42:31,828:INFO:create_model() successfully completed......................................
2024-10-20 15:42:31,982:INFO:SubProcess create_model() end ==================================
2024-10-20 15:42:31,982:INFO:Creating metrics dataframe
2024-10-20 15:42:31,998:INFO:Initializing Naive Bayes
2024-10-20 15:42:31,998:INFO:Total runtime is 0.893265426158905 minutes
2024-10-20 15:42:32,003:INFO:SubProcess create_model() called ==================================
2024-10-20 15:42:32,003:INFO:Initializing create_model()
2024-10-20 15:42:32,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:42:32,003:INFO:Checking exceptions
2024-10-20 15:42:32,003:INFO:Importing libraries
2024-10-20 15:42:32,003:INFO:Copying training dataset
2024-10-20 15:42:32,136:INFO:Defining folds
2024-10-20 15:42:32,136:INFO:Declaring metric variables
2024-10-20 15:42:32,148:INFO:Importing untrained model
2024-10-20 15:42:32,153:INFO:Naive Bayes Imported successfully
2024-10-20 15:42:32,168:INFO:Starting cross validation
2024-10-20 15:42:32,181:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:42:38,050:INFO:Calculating mean and std
2024-10-20 15:42:38,056:INFO:Creating metrics dataframe
2024-10-20 15:42:38,076:INFO:Uploading results into container
2024-10-20 15:42:38,078:INFO:Uploading model into container now
2024-10-20 15:42:38,079:INFO:_master_model_container: 3
2024-10-20 15:42:38,079:INFO:_display_container: 2
2024-10-20 15:42:38,079:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-20 15:42:38,079:INFO:create_model() successfully completed......................................
2024-10-20 15:42:38,259:INFO:SubProcess create_model() end ==================================
2024-10-20 15:42:38,260:INFO:Creating metrics dataframe
2024-10-20 15:42:38,275:INFO:Initializing Decision Tree Classifier
2024-10-20 15:42:38,276:INFO:Total runtime is 0.9978958249092102 minutes
2024-10-20 15:42:38,284:INFO:SubProcess create_model() called ==================================
2024-10-20 15:42:38,284:INFO:Initializing create_model()
2024-10-20 15:42:38,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:42:38,284:INFO:Checking exceptions
2024-10-20 15:42:38,284:INFO:Importing libraries
2024-10-20 15:42:38,284:INFO:Copying training dataset
2024-10-20 15:42:38,458:INFO:Defining folds
2024-10-20 15:42:38,458:INFO:Declaring metric variables
2024-10-20 15:42:38,463:INFO:Importing untrained model
2024-10-20 15:42:38,476:INFO:Decision Tree Classifier Imported successfully
2024-10-20 15:42:38,495:INFO:Starting cross validation
2024-10-20 15:42:38,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:42:51,887:INFO:Calculating mean and std
2024-10-20 15:42:51,887:INFO:Creating metrics dataframe
2024-10-20 15:42:51,893:INFO:Uploading results into container
2024-10-20 15:42:51,893:INFO:Uploading model into container now
2024-10-20 15:42:51,893:INFO:_master_model_container: 4
2024-10-20 15:42:51,893:INFO:_display_container: 2
2024-10-20 15:42:51,893:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-20 15:42:51,893:INFO:create_model() successfully completed......................................
2024-10-20 15:42:52,007:INFO:SubProcess create_model() end ==================================
2024-10-20 15:42:52,007:INFO:Creating metrics dataframe
2024-10-20 15:42:52,021:INFO:Initializing SVM - Linear Kernel
2024-10-20 15:42:52,021:INFO:Total runtime is 1.226989754041036 minutes
2024-10-20 15:42:52,029:INFO:SubProcess create_model() called ==================================
2024-10-20 15:42:52,030:INFO:Initializing create_model()
2024-10-20 15:42:52,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:42:52,030:INFO:Checking exceptions
2024-10-20 15:42:52,030:INFO:Importing libraries
2024-10-20 15:42:52,030:INFO:Copying training dataset
2024-10-20 15:42:52,134:INFO:Defining folds
2024-10-20 15:42:52,134:INFO:Declaring metric variables
2024-10-20 15:42:52,141:INFO:Importing untrained model
2024-10-20 15:42:52,151:INFO:SVM - Linear Kernel Imported successfully
2024-10-20 15:42:52,159:INFO:Starting cross validation
2024-10-20 15:42:52,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:43:04,141:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:43:04,175:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:43:14,591:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:43:16,541:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:43:16,892:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:43:18,339:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:43:24,621:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:43:27,191:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:43:27,224:INFO:Calculating mean and std
2024-10-20 15:43:27,224:INFO:Creating metrics dataframe
2024-10-20 15:43:27,233:INFO:Uploading results into container
2024-10-20 15:43:27,234:INFO:Uploading model into container now
2024-10-20 15:43:27,234:INFO:_master_model_container: 5
2024-10-20 15:43:27,234:INFO:_display_container: 2
2024-10-20 15:43:27,238:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-20 15:43:27,238:INFO:create_model() successfully completed......................................
2024-10-20 15:43:27,398:INFO:SubProcess create_model() end ==================================
2024-10-20 15:43:27,398:INFO:Creating metrics dataframe
2024-10-20 15:43:27,408:INFO:Initializing Ridge Classifier
2024-10-20 15:43:27,408:INFO:Total runtime is 1.8167734146118164 minutes
2024-10-20 15:43:27,417:INFO:SubProcess create_model() called ==================================
2024-10-20 15:43:27,417:INFO:Initializing create_model()
2024-10-20 15:43:27,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:43:27,417:INFO:Checking exceptions
2024-10-20 15:43:27,417:INFO:Importing libraries
2024-10-20 15:43:27,417:INFO:Copying training dataset
2024-10-20 15:43:27,531:INFO:Defining folds
2024-10-20 15:43:27,531:INFO:Declaring metric variables
2024-10-20 15:43:27,541:INFO:Importing untrained model
2024-10-20 15:43:27,550:INFO:Ridge Classifier Imported successfully
2024-10-20 15:43:27,566:INFO:Starting cross validation
2024-10-20 15:43:27,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:43:33,016:INFO:Calculating mean and std
2024-10-20 15:43:33,016:INFO:Creating metrics dataframe
2024-10-20 15:43:33,024:INFO:Uploading results into container
2024-10-20 15:43:33,024:INFO:Uploading model into container now
2024-10-20 15:43:33,024:INFO:_master_model_container: 6
2024-10-20 15:43:33,024:INFO:_display_container: 2
2024-10-20 15:43:33,024:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-20 15:43:33,024:INFO:create_model() successfully completed......................................
2024-10-20 15:43:33,251:INFO:SubProcess create_model() end ==================================
2024-10-20 15:43:33,251:INFO:Creating metrics dataframe
2024-10-20 15:43:33,261:INFO:Initializing Random Forest Classifier
2024-10-20 15:43:33,261:INFO:Total runtime is 1.914314834276835 minutes
2024-10-20 15:43:33,271:INFO:SubProcess create_model() called ==================================
2024-10-20 15:43:33,271:INFO:Initializing create_model()
2024-10-20 15:43:33,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:43:33,271:INFO:Checking exceptions
2024-10-20 15:43:33,271:INFO:Importing libraries
2024-10-20 15:43:33,271:INFO:Copying training dataset
2024-10-20 15:43:33,371:INFO:Defining folds
2024-10-20 15:43:33,371:INFO:Declaring metric variables
2024-10-20 15:43:33,377:INFO:Importing untrained model
2024-10-20 15:43:33,389:INFO:Random Forest Classifier Imported successfully
2024-10-20 15:43:33,404:INFO:Starting cross validation
2024-10-20 15:43:33,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:45:50,488:INFO:Calculating mean and std
2024-10-20 15:45:50,488:INFO:Creating metrics dataframe
2024-10-20 15:45:50,497:INFO:Uploading results into container
2024-10-20 15:45:50,497:INFO:Uploading model into container now
2024-10-20 15:45:50,497:INFO:_master_model_container: 7
2024-10-20 15:45:50,499:INFO:_display_container: 2
2024-10-20 15:45:50,500:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 15:45:50,501:INFO:create_model() successfully completed......................................
2024-10-20 15:45:50,700:INFO:SubProcess create_model() end ==================================
2024-10-20 15:45:50,701:INFO:Creating metrics dataframe
2024-10-20 15:45:50,721:INFO:Initializing Quadratic Discriminant Analysis
2024-10-20 15:45:50,721:INFO:Total runtime is 4.205311421553294 minutes
2024-10-20 15:45:50,730:INFO:SubProcess create_model() called ==================================
2024-10-20 15:45:50,730:INFO:Initializing create_model()
2024-10-20 15:45:50,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:45:50,731:INFO:Checking exceptions
2024-10-20 15:45:50,731:INFO:Importing libraries
2024-10-20 15:45:50,731:INFO:Copying training dataset
2024-10-20 15:45:50,873:INFO:Defining folds
2024-10-20 15:45:50,878:INFO:Declaring metric variables
2024-10-20 15:45:50,883:INFO:Importing untrained model
2024-10-20 15:45:50,893:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-20 15:45:50,906:INFO:Starting cross validation
2024-10-20 15:45:50,906:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:45:53,285:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:53,337:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:53,342:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:53,463:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:55,757:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:55,855:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:55,952:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:56,019:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:57,744:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:57,835:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 15:45:58,193:INFO:Calculating mean and std
2024-10-20 15:45:58,197:INFO:Creating metrics dataframe
2024-10-20 15:45:58,201:INFO:Uploading results into container
2024-10-20 15:45:58,202:INFO:Uploading model into container now
2024-10-20 15:45:58,203:INFO:_master_model_container: 8
2024-10-20 15:45:58,204:INFO:_display_container: 2
2024-10-20 15:45:58,204:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-20 15:45:58,204:INFO:create_model() successfully completed......................................
2024-10-20 15:45:58,427:INFO:SubProcess create_model() end ==================================
2024-10-20 15:45:58,427:INFO:Creating metrics dataframe
2024-10-20 15:45:58,450:INFO:Initializing Ada Boost Classifier
2024-10-20 15:45:58,452:INFO:Total runtime is 4.3341311017672215 minutes
2024-10-20 15:45:58,457:INFO:SubProcess create_model() called ==================================
2024-10-20 15:45:58,457:INFO:Initializing create_model()
2024-10-20 15:45:58,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:45:58,457:INFO:Checking exceptions
2024-10-20 15:45:58,457:INFO:Importing libraries
2024-10-20 15:45:58,462:INFO:Copying training dataset
2024-10-20 15:45:58,649:INFO:Defining folds
2024-10-20 15:45:58,649:INFO:Declaring metric variables
2024-10-20 15:45:58,661:INFO:Importing untrained model
2024-10-20 15:45:58,669:INFO:Ada Boost Classifier Imported successfully
2024-10-20 15:45:58,696:INFO:Starting cross validation
2024-10-20 15:45:58,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:46:00,746:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:00,746:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:00,810:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:00,892:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:15,554:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:15,680:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:15,710:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:15,918:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:28,680:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:28,730:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 15:46:36,530:INFO:Calculating mean and std
2024-10-20 15:46:36,530:INFO:Creating metrics dataframe
2024-10-20 15:46:36,535:INFO:Uploading results into container
2024-10-20 15:46:36,536:INFO:Uploading model into container now
2024-10-20 15:46:36,540:INFO:_master_model_container: 9
2024-10-20 15:46:36,540:INFO:_display_container: 2
2024-10-20 15:46:36,540:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-20 15:46:36,540:INFO:create_model() successfully completed......................................
2024-10-20 15:46:36,648:INFO:SubProcess create_model() end ==================================
2024-10-20 15:46:36,653:INFO:Creating metrics dataframe
2024-10-20 15:46:36,663:INFO:Initializing Gradient Boosting Classifier
2024-10-20 15:46:36,663:INFO:Total runtime is 4.971020213762919 minutes
2024-10-20 15:46:36,668:INFO:SubProcess create_model() called ==================================
2024-10-20 15:46:36,668:INFO:Initializing create_model()
2024-10-20 15:46:36,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:46:36,668:INFO:Checking exceptions
2024-10-20 15:46:36,668:INFO:Importing libraries
2024-10-20 15:46:36,668:INFO:Copying training dataset
2024-10-20 15:46:36,763:INFO:Defining folds
2024-10-20 15:46:36,763:INFO:Declaring metric variables
2024-10-20 15:46:36,774:INFO:Importing untrained model
2024-10-20 15:46:36,779:INFO:Gradient Boosting Classifier Imported successfully
2024-10-20 15:46:36,789:INFO:Starting cross validation
2024-10-20 15:46:36,794:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:49:09,560:INFO:Calculating mean and std
2024-10-20 15:49:09,560:INFO:Creating metrics dataframe
2024-10-20 15:49:09,568:INFO:Uploading results into container
2024-10-20 15:49:09,569:INFO:Uploading model into container now
2024-10-20 15:49:09,573:INFO:_master_model_container: 10
2024-10-20 15:49:09,574:INFO:_display_container: 2
2024-10-20 15:49:09,576:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-20 15:49:09,576:INFO:create_model() successfully completed......................................
2024-10-20 15:49:09,723:INFO:SubProcess create_model() end ==================================
2024-10-20 15:49:09,723:INFO:Creating metrics dataframe
2024-10-20 15:49:09,738:INFO:Initializing Linear Discriminant Analysis
2024-10-20 15:49:09,738:INFO:Total runtime is 7.5222768386205034 minutes
2024-10-20 15:49:09,738:INFO:SubProcess create_model() called ==================================
2024-10-20 15:49:09,738:INFO:Initializing create_model()
2024-10-20 15:49:09,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:49:09,743:INFO:Checking exceptions
2024-10-20 15:49:09,743:INFO:Importing libraries
2024-10-20 15:49:09,743:INFO:Copying training dataset
2024-10-20 15:49:09,848:INFO:Defining folds
2024-10-20 15:49:09,848:INFO:Declaring metric variables
2024-10-20 15:49:09,852:INFO:Importing untrained model
2024-10-20 15:49:09,861:INFO:Linear Discriminant Analysis Imported successfully
2024-10-20 15:49:09,873:INFO:Starting cross validation
2024-10-20 15:49:09,878:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:49:16,818:INFO:Calculating mean and std
2024-10-20 15:49:16,820:INFO:Creating metrics dataframe
2024-10-20 15:49:16,822:INFO:Uploading results into container
2024-10-20 15:49:16,823:INFO:Uploading model into container now
2024-10-20 15:49:16,823:INFO:_master_model_container: 11
2024-10-20 15:49:16,823:INFO:_display_container: 2
2024-10-20 15:49:16,823:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-20 15:49:16,826:INFO:create_model() successfully completed......................................
2024-10-20 15:49:16,975:INFO:SubProcess create_model() end ==================================
2024-10-20 15:49:16,975:INFO:Creating metrics dataframe
2024-10-20 15:49:16,989:INFO:Initializing Extra Trees Classifier
2024-10-20 15:49:16,989:INFO:Total runtime is 7.643122029304504 minutes
2024-10-20 15:49:16,998:INFO:SubProcess create_model() called ==================================
2024-10-20 15:49:16,998:INFO:Initializing create_model()
2024-10-20 15:49:16,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:49:16,998:INFO:Checking exceptions
2024-10-20 15:49:16,998:INFO:Importing libraries
2024-10-20 15:49:16,998:INFO:Copying training dataset
2024-10-20 15:49:17,136:INFO:Defining folds
2024-10-20 15:49:17,136:INFO:Declaring metric variables
2024-10-20 15:49:17,149:INFO:Importing untrained model
2024-10-20 15:49:17,151:INFO:Extra Trees Classifier Imported successfully
2024-10-20 15:49:17,171:INFO:Starting cross validation
2024-10-20 15:49:17,171:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:50:51,562:INFO:Calculating mean and std
2024-10-20 15:50:51,579:INFO:Creating metrics dataframe
2024-10-20 15:50:51,584:INFO:Uploading results into container
2024-10-20 15:50:51,584:INFO:Uploading model into container now
2024-10-20 15:50:51,584:INFO:_master_model_container: 12
2024-10-20 15:50:51,584:INFO:_display_container: 2
2024-10-20 15:50:51,588:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-20 15:50:51,588:INFO:create_model() successfully completed......................................
2024-10-20 15:50:51,766:INFO:SubProcess create_model() end ==================================
2024-10-20 15:50:51,768:INFO:Creating metrics dataframe
2024-10-20 15:50:51,795:INFO:Initializing Light Gradient Boosting Machine
2024-10-20 15:50:51,795:INFO:Total runtime is 9.223211705684662 minutes
2024-10-20 15:50:51,805:INFO:SubProcess create_model() called ==================================
2024-10-20 15:50:51,805:INFO:Initializing create_model()
2024-10-20 15:50:51,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:50:51,805:INFO:Checking exceptions
2024-10-20 15:50:51,805:INFO:Importing libraries
2024-10-20 15:50:51,805:INFO:Copying training dataset
2024-10-20 15:50:51,973:INFO:Defining folds
2024-10-20 15:50:51,975:INFO:Declaring metric variables
2024-10-20 15:50:51,980:INFO:Importing untrained model
2024-10-20 15:50:51,990:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-20 15:50:52,012:INFO:Starting cross validation
2024-10-20 15:50:52,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:51:08,390:INFO:Calculating mean and std
2024-10-20 15:51:08,392:INFO:Creating metrics dataframe
2024-10-20 15:51:08,398:INFO:Uploading results into container
2024-10-20 15:51:08,400:INFO:Uploading model into container now
2024-10-20 15:51:08,402:INFO:_master_model_container: 13
2024-10-20 15:51:08,402:INFO:_display_container: 2
2024-10-20 15:51:08,405:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-20 15:51:08,406:INFO:create_model() successfully completed......................................
2024-10-20 15:51:08,580:INFO:SubProcess create_model() end ==================================
2024-10-20 15:51:08,580:INFO:Creating metrics dataframe
2024-10-20 15:51:08,611:INFO:Initializing Dummy Classifier
2024-10-20 15:51:08,611:INFO:Total runtime is 9.503487233320872 minutes
2024-10-20 15:51:08,618:INFO:SubProcess create_model() called ==================================
2024-10-20 15:51:08,618:INFO:Initializing create_model()
2024-10-20 15:51:08,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAD4DE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:51:08,618:INFO:Checking exceptions
2024-10-20 15:51:08,618:INFO:Importing libraries
2024-10-20 15:51:08,618:INFO:Copying training dataset
2024-10-20 15:51:08,811:INFO:Defining folds
2024-10-20 15:51:08,811:INFO:Declaring metric variables
2024-10-20 15:51:08,824:INFO:Importing untrained model
2024-10-20 15:51:08,830:INFO:Dummy Classifier Imported successfully
2024-10-20 15:51:08,846:INFO:Starting cross validation
2024-10-20 15:51:08,856:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 15:51:10,496:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:10,561:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:10,583:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:10,627:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:12,305:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:12,335:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:12,370:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:12,414:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:13,489:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:13,510:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 15:51:13,540:INFO:Calculating mean and std
2024-10-20 15:51:13,542:INFO:Creating metrics dataframe
2024-10-20 15:51:13,547:INFO:Uploading results into container
2024-10-20 15:51:13,550:INFO:Uploading model into container now
2024-10-20 15:51:13,551:INFO:_master_model_container: 14
2024-10-20 15:51:13,551:INFO:_display_container: 2
2024-10-20 15:51:13,552:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-20 15:51:13,553:INFO:create_model() successfully completed......................................
2024-10-20 15:51:13,742:INFO:SubProcess create_model() end ==================================
2024-10-20 15:51:13,742:INFO:Creating metrics dataframe
2024-10-20 15:51:13,774:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-20 15:51:13,798:INFO:Initializing create_model()
2024-10-20 15:51:13,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C9C782250>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 15:51:13,801:INFO:Checking exceptions
2024-10-20 15:51:13,805:INFO:Importing libraries
2024-10-20 15:51:13,805:INFO:Copying training dataset
2024-10-20 15:51:14,059:INFO:Defining folds
2024-10-20 15:51:14,060:INFO:Declaring metric variables
2024-10-20 15:51:14,060:INFO:Importing untrained model
2024-10-20 15:51:14,060:INFO:Declaring custom model
2024-10-20 15:51:14,062:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-20 15:51:14,067:INFO:Cross validation set to False
2024-10-20 15:51:14,067:INFO:Fitting Model
2024-10-20 15:51:15,320:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-20 15:51:15,341:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.020383 seconds.
2024-10-20 15:51:15,341:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-10-20 15:51:15,341:INFO:[LightGBM] [Info] Total Bins 1368
2024-10-20 15:51:15,341:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 14
2024-10-20 15:51:15,346:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-20 15:51:15,346:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-20 15:51:16,867:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-20 15:51:16,867:INFO:create_model() successfully completed......................................
2024-10-20 15:51:17,090:INFO:_master_model_container: 14
2024-10-20 15:51:17,090:INFO:_display_container: 2
2024-10-20 15:51:17,091:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-20 15:51:17,091:INFO:compare_models() successfully completed......................................
2024-10-20 16:00:49,346:INFO:PyCaret ClassificationExperiment
2024-10-20 16:00:49,346:INFO:Logging name: clf-default-name
2024-10-20 16:00:49,346:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-20 16:00:49,346:INFO:version 3.3.2
2024-10-20 16:00:49,346:INFO:Initializing setup()
2024-10-20 16:00:49,346:INFO:self.USI: 3917
2024-10-20 16:00:49,346:INFO:self._variable_keys: {'pipeline', 'y_train', 'seed', 'fold_generator', 'data', 'fix_imbalance', 'exp_id', 'USI', 'gpu_param', 'idx', 'memory', 'gpu_n_jobs_param', '_ml_usecase', 'y', 'target_param', 'logging_param', 'y_test', 'fold_shuffle_param', 'html_param', 'exp_name_log', '_available_plots', 'X_test', 'fold_groups_param', 'n_jobs_param', 'X_train', 'is_multiclass', 'log_plots_param', 'X'}
2024-10-20 16:00:49,346:INFO:Checking environment
2024-10-20 16:00:49,346:INFO:python_version: 3.11.8
2024-10-20 16:00:49,346:INFO:python_build: ('tags/v3.11.8:db85d51', 'Feb  6 2024 22:03:32')
2024-10-20 16:00:49,346:INFO:machine: AMD64
2024-10-20 16:00:49,346:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-20 16:00:49,346:INFO:Memory: svmem(total=17053163520, available=8975925248, percent=47.4, used=8077238272, free=8975925248)
2024-10-20 16:00:49,346:INFO:Physical Core: 2
2024-10-20 16:00:49,351:INFO:Logical Core: 4
2024-10-20 16:00:49,351:INFO:Checking libraries
2024-10-20 16:00:49,351:INFO:System:
2024-10-20 16:00:49,351:INFO:    python: 3.11.8 (tags/v3.11.8:db85d51, Feb  6 2024, 22:03:32) [MSC v.1937 64 bit (AMD64)]
2024-10-20 16:00:49,351:INFO:executable: c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\python.exe
2024-10-20 16:00:49,351:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-20 16:00:49,351:INFO:PyCaret required dependencies:
2024-10-20 16:00:49,351:INFO:                 pip: 24.0
2024-10-20 16:00:49,351:INFO:          setuptools: 65.5.0
2024-10-20 16:00:49,351:INFO:             pycaret: 3.3.2
2024-10-20 16:00:49,351:INFO:             IPython: 8.28.0
2024-10-20 16:00:49,351:INFO:          ipywidgets: 8.1.5
2024-10-20 16:00:49,351:INFO:                tqdm: 4.66.5
2024-10-20 16:00:49,351:INFO:               numpy: 1.26.4
2024-10-20 16:00:49,351:INFO:              pandas: 2.1.4
2024-10-20 16:00:49,351:INFO:              jinja2: 3.1.4
2024-10-20 16:00:49,351:INFO:               scipy: 1.11.4
2024-10-20 16:00:49,351:INFO:              joblib: 1.3.2
2024-10-20 16:00:49,351:INFO:             sklearn: 1.4.2
2024-10-20 16:00:49,351:INFO:                pyod: 2.0.2
2024-10-20 16:00:49,351:INFO:            imblearn: 0.12.4
2024-10-20 16:00:49,351:INFO:   category_encoders: 2.6.4
2024-10-20 16:00:49,351:INFO:            lightgbm: 4.5.0
2024-10-20 16:00:49,351:INFO:               numba: 0.60.0
2024-10-20 16:00:49,351:INFO:            requests: 2.32.3
2024-10-20 16:00:49,351:INFO:          matplotlib: 3.7.5
2024-10-20 16:00:49,351:INFO:          scikitplot: 0.3.7
2024-10-20 16:00:49,351:INFO:         yellowbrick: 1.5
2024-10-20 16:00:49,351:INFO:              plotly: 5.24.1
2024-10-20 16:00:49,351:INFO:    plotly-resampler: Not installed
2024-10-20 16:00:49,351:INFO:             kaleido: 0.2.1
2024-10-20 16:00:49,351:INFO:           schemdraw: 0.15
2024-10-20 16:00:49,356:INFO:         statsmodels: 0.14.4
2024-10-20 16:00:49,356:INFO:              sktime: 0.26.0
2024-10-20 16:00:49,356:INFO:               tbats: 1.1.3
2024-10-20 16:00:49,356:INFO:            pmdarima: 2.0.4
2024-10-20 16:00:49,356:INFO:              psutil: 6.1.0
2024-10-20 16:00:49,356:INFO:          markupsafe: 3.0.2
2024-10-20 16:00:49,356:INFO:             pickle5: Not installed
2024-10-20 16:00:49,356:INFO:         cloudpickle: 3.1.0
2024-10-20 16:00:49,356:INFO:         deprecation: 2.1.0
2024-10-20 16:00:49,356:INFO:              xxhash: 3.5.0
2024-10-20 16:00:49,356:INFO:           wurlitzer: Not installed
2024-10-20 16:00:49,356:INFO:PyCaret optional dependencies:
2024-10-20 16:00:49,356:INFO:                shap: 0.44.1
2024-10-20 16:00:49,356:INFO:           interpret: 0.6.4
2024-10-20 16:00:49,356:INFO:                umap: 0.5.6
2024-10-20 16:00:49,356:INFO:     ydata_profiling: 4.11.0
2024-10-20 16:00:49,356:INFO:  explainerdashboard: 0.4.7
2024-10-20 16:00:49,356:INFO:             autoviz: Not installed
2024-10-20 16:00:49,356:INFO:           fairlearn: 0.7.0
2024-10-20 16:00:49,356:INFO:          deepchecks: Not installed
2024-10-20 16:00:49,356:INFO:             xgboost: Not installed
2024-10-20 16:00:49,356:INFO:            catboost: Not installed
2024-10-20 16:00:49,356:INFO:              kmodes: Not installed
2024-10-20 16:00:49,356:INFO:             mlxtend: Not installed
2024-10-20 16:00:49,356:INFO:       statsforecast: Not installed
2024-10-20 16:00:49,356:INFO:        tune_sklearn: Not installed
2024-10-20 16:00:49,356:INFO:                 ray: Not installed
2024-10-20 16:00:49,356:INFO:            hyperopt: 0.2.7
2024-10-20 16:00:49,356:INFO:              optuna: 4.0.0
2024-10-20 16:00:49,356:INFO:               skopt: 0.10.2
2024-10-20 16:00:49,356:INFO:              mlflow: 2.17.0
2024-10-20 16:00:49,356:INFO:              gradio: Not installed
2024-10-20 16:00:49,356:INFO:             fastapi: 0.115.2
2024-10-20 16:00:49,356:INFO:             uvicorn: 0.32.0
2024-10-20 16:00:49,356:INFO:              m2cgen: Not installed
2024-10-20 16:00:49,356:INFO:           evidently: Not installed
2024-10-20 16:00:49,356:INFO:               fugue: Not installed
2024-10-20 16:00:49,356:INFO:           streamlit: Not installed
2024-10-20 16:00:49,356:INFO:             prophet: Not installed
2024-10-20 16:00:49,356:INFO:None
2024-10-20 16:00:49,356:INFO:Set up data.
2024-10-20 16:00:49,600:INFO:Set up folding strategy.
2024-10-20 16:00:49,600:INFO:Set up train/test split.
2024-10-20 16:00:49,746:INFO:Set up index.
2024-10-20 16:00:49,756:INFO:Assigning column types.
2024-10-20 16:00:49,835:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-20 16:00:49,936:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 16:00:49,941:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:00:49,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:49,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 16:00:50,073:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:00:50,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,110:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-20 16:00:50,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:00:50,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,271:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:00:50,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,309:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-20 16:00:50,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,520:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:50,520:INFO:Preparing preprocessing pipeline...
2024-10-20 16:00:50,531:INFO:Set up simple imputation.
2024-10-20 16:00:50,559:INFO:Set up encoding of ordinal features.
2024-10-20 16:00:50,576:INFO:Set up encoding of categorical features.
2024-10-20 16:00:51,338:INFO:Finished creating preprocessing pipeline.
2024-10-20 16:00:51,373:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 16:00:51,373:INFO:Creating final display dataframe.
2024-10-20 16:00:51,736:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Exited
2                   Target type            Binary
3           Original data shape      (165034, 14)
4        Transformed data shape      (165034, 15)
5   Transformed train set shape      (115523, 15)
6    Transformed test set shape       (49511, 15)
7               Ignore features                 1
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              3917
2024-10-20 16:00:51,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:51,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:52,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:52,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:00:52,030:INFO:setup() successfully completed in 2.69s...............
2024-10-20 16:01:49,155:INFO:PyCaret ClassificationExperiment
2024-10-20 16:01:49,155:INFO:Logging name: experiment_final
2024-10-20 16:01:49,155:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-20 16:01:49,155:INFO:version 3.3.2
2024-10-20 16:01:49,155:INFO:Initializing setup()
2024-10-20 16:01:49,155:INFO:self.USI: 12d6
2024-10-20 16:01:49,155:INFO:self._variable_keys: {'pipeline', 'y_train', 'seed', 'fold_generator', 'data', 'fix_imbalance', 'exp_id', 'USI', 'gpu_param', 'idx', 'memory', 'gpu_n_jobs_param', '_ml_usecase', 'y', 'target_param', 'logging_param', 'y_test', 'fold_shuffle_param', 'html_param', 'exp_name_log', '_available_plots', 'X_test', 'fold_groups_param', 'n_jobs_param', 'X_train', 'is_multiclass', 'log_plots_param', 'X'}
2024-10-20 16:01:49,155:INFO:Checking environment
2024-10-20 16:01:49,155:INFO:python_version: 3.11.8
2024-10-20 16:01:49,155:INFO:python_build: ('tags/v3.11.8:db85d51', 'Feb  6 2024 22:03:32')
2024-10-20 16:01:49,155:INFO:machine: AMD64
2024-10-20 16:01:49,155:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-20 16:01:49,160:INFO:Memory: svmem(total=17053163520, available=8891318272, percent=47.9, used=8161845248, free=8891318272)
2024-10-20 16:01:49,160:INFO:Physical Core: 2
2024-10-20 16:01:49,160:INFO:Logical Core: 4
2024-10-20 16:01:49,160:INFO:Checking libraries
2024-10-20 16:01:49,160:INFO:System:
2024-10-20 16:01:49,160:INFO:    python: 3.11.8 (tags/v3.11.8:db85d51, Feb  6 2024, 22:03:32) [MSC v.1937 64 bit (AMD64)]
2024-10-20 16:01:49,160:INFO:executable: c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\python.exe
2024-10-20 16:01:49,160:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-20 16:01:49,160:INFO:PyCaret required dependencies:
2024-10-20 16:01:49,160:INFO:                 pip: 24.0
2024-10-20 16:01:49,160:INFO:          setuptools: 65.5.0
2024-10-20 16:01:49,160:INFO:             pycaret: 3.3.2
2024-10-20 16:01:49,160:INFO:             IPython: 8.28.0
2024-10-20 16:01:49,160:INFO:          ipywidgets: 8.1.5
2024-10-20 16:01:49,160:INFO:                tqdm: 4.66.5
2024-10-20 16:01:49,160:INFO:               numpy: 1.26.4
2024-10-20 16:01:49,160:INFO:              pandas: 2.1.4
2024-10-20 16:01:49,160:INFO:              jinja2: 3.1.4
2024-10-20 16:01:49,160:INFO:               scipy: 1.11.4
2024-10-20 16:01:49,160:INFO:              joblib: 1.3.2
2024-10-20 16:01:49,160:INFO:             sklearn: 1.4.2
2024-10-20 16:01:49,160:INFO:                pyod: 2.0.2
2024-10-20 16:01:49,160:INFO:            imblearn: 0.12.4
2024-10-20 16:01:49,160:INFO:   category_encoders: 2.6.4
2024-10-20 16:01:49,160:INFO:            lightgbm: 4.5.0
2024-10-20 16:01:49,160:INFO:               numba: 0.60.0
2024-10-20 16:01:49,160:INFO:            requests: 2.32.3
2024-10-20 16:01:49,160:INFO:          matplotlib: 3.7.5
2024-10-20 16:01:49,160:INFO:          scikitplot: 0.3.7
2024-10-20 16:01:49,160:INFO:         yellowbrick: 1.5
2024-10-20 16:01:49,160:INFO:              plotly: 5.24.1
2024-10-20 16:01:49,160:INFO:    plotly-resampler: Not installed
2024-10-20 16:01:49,160:INFO:             kaleido: 0.2.1
2024-10-20 16:01:49,160:INFO:           schemdraw: 0.15
2024-10-20 16:01:49,160:INFO:         statsmodels: 0.14.4
2024-10-20 16:01:49,160:INFO:              sktime: 0.26.0
2024-10-20 16:01:49,160:INFO:               tbats: 1.1.3
2024-10-20 16:01:49,160:INFO:            pmdarima: 2.0.4
2024-10-20 16:01:49,160:INFO:              psutil: 6.1.0
2024-10-20 16:01:49,160:INFO:          markupsafe: 3.0.2
2024-10-20 16:01:49,160:INFO:             pickle5: Not installed
2024-10-20 16:01:49,160:INFO:         cloudpickle: 3.1.0
2024-10-20 16:01:49,165:INFO:         deprecation: 2.1.0
2024-10-20 16:01:49,165:INFO:              xxhash: 3.5.0
2024-10-20 16:01:49,165:INFO:           wurlitzer: Not installed
2024-10-20 16:01:49,165:INFO:PyCaret optional dependencies:
2024-10-20 16:01:49,165:INFO:                shap: 0.44.1
2024-10-20 16:01:49,165:INFO:           interpret: 0.6.4
2024-10-20 16:01:49,165:INFO:                umap: 0.5.6
2024-10-20 16:01:49,165:INFO:     ydata_profiling: 4.11.0
2024-10-20 16:01:49,165:INFO:  explainerdashboard: 0.4.7
2024-10-20 16:01:49,165:INFO:             autoviz: Not installed
2024-10-20 16:01:49,165:INFO:           fairlearn: 0.7.0
2024-10-20 16:01:49,165:INFO:          deepchecks: Not installed
2024-10-20 16:01:49,165:INFO:             xgboost: Not installed
2024-10-20 16:01:49,165:INFO:            catboost: Not installed
2024-10-20 16:01:49,165:INFO:              kmodes: Not installed
2024-10-20 16:01:49,165:INFO:             mlxtend: Not installed
2024-10-20 16:01:49,165:INFO:       statsforecast: Not installed
2024-10-20 16:01:49,165:INFO:        tune_sklearn: Not installed
2024-10-20 16:01:49,165:INFO:                 ray: Not installed
2024-10-20 16:01:49,165:INFO:            hyperopt: 0.2.7
2024-10-20 16:01:49,165:INFO:              optuna: 4.0.0
2024-10-20 16:01:49,165:INFO:               skopt: 0.10.2
2024-10-20 16:01:49,165:INFO:              mlflow: 2.17.0
2024-10-20 16:01:49,165:INFO:              gradio: Not installed
2024-10-20 16:01:49,165:INFO:             fastapi: 0.115.2
2024-10-20 16:01:49,165:INFO:             uvicorn: 0.32.0
2024-10-20 16:01:49,165:INFO:              m2cgen: Not installed
2024-10-20 16:01:49,165:INFO:           evidently: Not installed
2024-10-20 16:01:49,165:INFO:               fugue: Not installed
2024-10-20 16:01:49,165:INFO:           streamlit: Not installed
2024-10-20 16:01:49,165:INFO:             prophet: Not installed
2024-10-20 16:01:49,165:INFO:None
2024-10-20 16:01:49,165:INFO:Set up data.
2024-10-20 16:01:49,322:INFO:Set up folding strategy.
2024-10-20 16:01:49,322:INFO:Set up train/test split.
2024-10-20 16:01:49,479:INFO:Set up index.
2024-10-20 16:01:49,485:INFO:Assigning column types.
2024-10-20 16:01:49,547:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-20 16:01:49,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 16:01:49,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:01:49,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:49,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:49,747:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 16:01:49,747:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:01:49,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:49,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:49,782:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-20 16:01:49,838:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:01:49,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:49,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:49,927:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:01:49,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:49,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:49,962:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-20 16:01:50,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:50,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:50,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:50,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:50,324:INFO:Preparing preprocessing pipeline...
2024-10-20 16:01:50,329:INFO:Set up simple imputation.
2024-10-20 16:01:50,371:INFO:Set up encoding of ordinal features.
2024-10-20 16:01:50,386:INFO:Set up encoding of categorical features.
2024-10-20 16:01:51,053:INFO:Finished creating preprocessing pipeline.
2024-10-20 16:01:51,088:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 16:01:51,088:INFO:Creating final display dataframe.
2024-10-20 16:01:51,748:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Exited
2                   Target type            Binary
3           Original data shape      (165034, 14)
4        Transformed data shape      (165034, 15)
5   Transformed train set shape      (115523, 15)
6    Transformed test set shape       (49511, 15)
7               Ignore features                 1
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment      MlflowLogger
21              Experiment Name  experiment_final
22                          USI              12d6
2024-10-20 16:01:51,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:51,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:52,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:52,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:01:52,128:INFO:Logging experiment in loggers
2024-10-20 16:01:52,923:INFO:SubProcess save_model() called ==================================
2024-10-20 16:01:52,984:INFO:Initializing save_model()
2024-10-20 16:01:52,984:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\PEDROV~1\AppData\Local\Temp\tmpag3qy2pg\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-20 16:01:52,984:INFO:Adding model into prep_pipe
2024-10-20 16:01:52,985:WARNING:Only Model saved as it was a pipeline.
2024-10-20 16:01:52,996:INFO:C:\Users\PEDROV~1\AppData\Local\Temp\tmpag3qy2pg\Transformation Pipeline.pkl saved in current working directory
2024-10-20 16:01:53,018:INFO:Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 16:01:53,018:INFO:save_model() successfully completed......................................
2024-10-20 16:01:53,163:INFO:SubProcess save_model() end ==================================
2024-10-20 16:01:53,386:INFO:setup() successfully completed in 2.98s...............
2024-10-20 16:01:59,962:INFO:Initializing compare_models()
2024-10-20 16:01:59,962:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-20 16:01:59,962:INFO:Checking exceptions
2024-10-20 16:02:00,030:INFO:Preparing display monitor
2024-10-20 16:02:00,076:INFO:Initializing Logistic Regression
2024-10-20 16:02:00,076:INFO:Total runtime is 0.0 minutes
2024-10-20 16:02:00,089:INFO:SubProcess create_model() called ==================================
2024-10-20 16:02:00,089:INFO:Initializing create_model()
2024-10-20 16:02:00,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:02:00,090:INFO:Checking exceptions
2024-10-20 16:02:00,090:INFO:Importing libraries
2024-10-20 16:02:00,090:INFO:Copying training dataset
2024-10-20 16:02:00,227:INFO:Defining folds
2024-10-20 16:02:00,228:INFO:Declaring metric variables
2024-10-20 16:02:00,231:INFO:Importing untrained model
2024-10-20 16:02:00,237:INFO:Logistic Regression Imported successfully
2024-10-20 16:02:00,247:INFO:Starting cross validation
2024-10-20 16:02:00,252:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:02:33,805:INFO:Calculating mean and std
2024-10-20 16:02:33,809:INFO:Creating metrics dataframe
2024-10-20 16:02:33,809:INFO:Uploading results into container
2024-10-20 16:02:33,814:INFO:Uploading model into container now
2024-10-20 16:02:33,814:INFO:_master_model_container: 1
2024-10-20 16:02:33,814:INFO:_display_container: 2
2024-10-20 16:02:33,819:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-20 16:02:33,820:INFO:create_model() successfully completed......................................
2024-10-20 16:02:33,949:INFO:SubProcess create_model() end ==================================
2024-10-20 16:02:33,949:INFO:Creating metrics dataframe
2024-10-20 16:02:33,959:INFO:Initializing K Neighbors Classifier
2024-10-20 16:02:33,959:INFO:Total runtime is 0.5647178769111634 minutes
2024-10-20 16:02:33,968:INFO:SubProcess create_model() called ==================================
2024-10-20 16:02:33,968:INFO:Initializing create_model()
2024-10-20 16:02:33,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:02:33,969:INFO:Checking exceptions
2024-10-20 16:02:33,969:INFO:Importing libraries
2024-10-20 16:02:33,969:INFO:Copying training dataset
2024-10-20 16:02:34,093:INFO:Defining folds
2024-10-20 16:02:34,093:INFO:Declaring metric variables
2024-10-20 16:02:34,104:INFO:Importing untrained model
2024-10-20 16:02:34,109:INFO:K Neighbors Classifier Imported successfully
2024-10-20 16:02:34,124:INFO:Starting cross validation
2024-10-20 16:02:34,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:02:54,160:INFO:Calculating mean and std
2024-10-20 16:02:54,164:INFO:Creating metrics dataframe
2024-10-20 16:02:54,172:INFO:Uploading results into container
2024-10-20 16:02:54,173:INFO:Uploading model into container now
2024-10-20 16:02:54,173:INFO:_master_model_container: 2
2024-10-20 16:02:54,173:INFO:_display_container: 2
2024-10-20 16:02:54,175:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-20 16:02:54,175:INFO:create_model() successfully completed......................................
2024-10-20 16:02:54,348:INFO:SubProcess create_model() end ==================================
2024-10-20 16:02:54,348:INFO:Creating metrics dataframe
2024-10-20 16:02:54,360:INFO:Initializing Naive Bayes
2024-10-20 16:02:54,360:INFO:Total runtime is 0.904736864566803 minutes
2024-10-20 16:02:54,370:INFO:SubProcess create_model() called ==================================
2024-10-20 16:02:54,370:INFO:Initializing create_model()
2024-10-20 16:02:54,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:02:54,370:INFO:Checking exceptions
2024-10-20 16:02:54,370:INFO:Importing libraries
2024-10-20 16:02:54,370:INFO:Copying training dataset
2024-10-20 16:02:54,556:INFO:Defining folds
2024-10-20 16:02:54,556:INFO:Declaring metric variables
2024-10-20 16:02:54,566:INFO:Importing untrained model
2024-10-20 16:02:54,571:INFO:Naive Bayes Imported successfully
2024-10-20 16:02:54,586:INFO:Starting cross validation
2024-10-20 16:02:54,591:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:03:00,890:INFO:Calculating mean and std
2024-10-20 16:03:00,895:INFO:Creating metrics dataframe
2024-10-20 16:03:00,904:INFO:Uploading results into container
2024-10-20 16:03:00,908:INFO:Uploading model into container now
2024-10-20 16:03:00,909:INFO:_master_model_container: 3
2024-10-20 16:03:00,909:INFO:_display_container: 2
2024-10-20 16:03:00,911:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-20 16:03:00,911:INFO:create_model() successfully completed......................................
2024-10-20 16:03:01,111:INFO:SubProcess create_model() end ==================================
2024-10-20 16:03:01,113:INFO:Creating metrics dataframe
2024-10-20 16:03:01,134:INFO:Initializing Decision Tree Classifier
2024-10-20 16:03:01,134:INFO:Total runtime is 1.0176308790842692 minutes
2024-10-20 16:03:01,144:INFO:SubProcess create_model() called ==================================
2024-10-20 16:03:01,146:INFO:Initializing create_model()
2024-10-20 16:03:01,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:03:01,146:INFO:Checking exceptions
2024-10-20 16:03:01,146:INFO:Importing libraries
2024-10-20 16:03:01,146:INFO:Copying training dataset
2024-10-20 16:03:01,331:INFO:Defining folds
2024-10-20 16:03:01,331:INFO:Declaring metric variables
2024-10-20 16:03:01,344:INFO:Importing untrained model
2024-10-20 16:03:01,351:INFO:Decision Tree Classifier Imported successfully
2024-10-20 16:03:01,378:INFO:Starting cross validation
2024-10-20 16:03:01,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:03:16,090:INFO:Calculating mean and std
2024-10-20 16:03:16,090:INFO:Creating metrics dataframe
2024-10-20 16:03:16,097:INFO:Uploading results into container
2024-10-20 16:03:16,100:INFO:Uploading model into container now
2024-10-20 16:03:16,102:INFO:_master_model_container: 4
2024-10-20 16:03:16,102:INFO:_display_container: 2
2024-10-20 16:03:16,103:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-20 16:03:16,103:INFO:create_model() successfully completed......................................
2024-10-20 16:03:16,286:INFO:SubProcess create_model() end ==================================
2024-10-20 16:03:16,286:INFO:Creating metrics dataframe
2024-10-20 16:03:16,351:INFO:Initializing SVM - Linear Kernel
2024-10-20 16:03:16,351:INFO:Total runtime is 1.2712504069010415 minutes
2024-10-20 16:03:16,366:INFO:SubProcess create_model() called ==================================
2024-10-20 16:03:16,366:INFO:Initializing create_model()
2024-10-20 16:03:16,366:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:03:16,371:INFO:Checking exceptions
2024-10-20 16:03:16,372:INFO:Importing libraries
2024-10-20 16:03:16,373:INFO:Copying training dataset
2024-10-20 16:03:16,576:INFO:Defining folds
2024-10-20 16:03:16,576:INFO:Declaring metric variables
2024-10-20 16:03:16,595:INFO:Importing untrained model
2024-10-20 16:03:16,616:INFO:SVM - Linear Kernel Imported successfully
2024-10-20 16:03:16,651:INFO:Starting cross validation
2024-10-20 16:03:16,660:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:03:31,104:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:03:31,119:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:03:42,170:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:03:44,159:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:03:44,586:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:03:45,563:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:03:52,089:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:03:54,630:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:03:54,650:INFO:Calculating mean and std
2024-10-20 16:03:54,652:INFO:Creating metrics dataframe
2024-10-20 16:03:54,657:INFO:Uploading results into container
2024-10-20 16:03:54,658:INFO:Uploading model into container now
2024-10-20 16:03:54,659:INFO:_master_model_container: 5
2024-10-20 16:03:54,660:INFO:_display_container: 2
2024-10-20 16:03:54,662:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-20 16:03:54,662:INFO:create_model() successfully completed......................................
2024-10-20 16:03:54,877:INFO:SubProcess create_model() end ==================================
2024-10-20 16:03:54,877:INFO:Creating metrics dataframe
2024-10-20 16:03:54,896:INFO:Initializing Ridge Classifier
2024-10-20 16:03:54,896:INFO:Total runtime is 1.9136646270751951 minutes
2024-10-20 16:03:54,908:INFO:SubProcess create_model() called ==================================
2024-10-20 16:03:54,908:INFO:Initializing create_model()
2024-10-20 16:03:54,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:03:54,909:INFO:Checking exceptions
2024-10-20 16:03:54,909:INFO:Importing libraries
2024-10-20 16:03:54,910:INFO:Copying training dataset
2024-10-20 16:03:55,119:INFO:Defining folds
2024-10-20 16:03:55,120:INFO:Declaring metric variables
2024-10-20 16:03:55,134:INFO:Importing untrained model
2024-10-20 16:03:55,151:INFO:Ridge Classifier Imported successfully
2024-10-20 16:03:55,173:INFO:Starting cross validation
2024-10-20 16:03:55,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:04:01,250:INFO:Calculating mean and std
2024-10-20 16:04:01,252:INFO:Creating metrics dataframe
2024-10-20 16:04:01,255:INFO:Uploading results into container
2024-10-20 16:04:01,256:INFO:Uploading model into container now
2024-10-20 16:04:01,257:INFO:_master_model_container: 6
2024-10-20 16:04:01,257:INFO:_display_container: 2
2024-10-20 16:04:01,260:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-20 16:04:01,260:INFO:create_model() successfully completed......................................
2024-10-20 16:04:01,448:INFO:SubProcess create_model() end ==================================
2024-10-20 16:04:01,448:INFO:Creating metrics dataframe
2024-10-20 16:04:01,457:INFO:Initializing Random Forest Classifier
2024-10-20 16:04:01,458:INFO:Total runtime is 2.0230236570040385 minutes
2024-10-20 16:04:01,463:INFO:SubProcess create_model() called ==================================
2024-10-20 16:04:01,463:INFO:Initializing create_model()
2024-10-20 16:04:01,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:04:01,467:INFO:Checking exceptions
2024-10-20 16:04:01,467:INFO:Importing libraries
2024-10-20 16:04:01,467:INFO:Copying training dataset
2024-10-20 16:04:01,579:INFO:Defining folds
2024-10-20 16:04:01,579:INFO:Declaring metric variables
2024-10-20 16:04:01,590:INFO:Importing untrained model
2024-10-20 16:04:01,596:INFO:Random Forest Classifier Imported successfully
2024-10-20 16:04:01,609:INFO:Starting cross validation
2024-10-20 16:04:01,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:06:24,213:INFO:Calculating mean and std
2024-10-20 16:06:24,217:INFO:Creating metrics dataframe
2024-10-20 16:06:24,230:INFO:Uploading results into container
2024-10-20 16:06:24,231:INFO:Uploading model into container now
2024-10-20 16:06:24,232:INFO:_master_model_container: 7
2024-10-20 16:06:24,233:INFO:_display_container: 2
2024-10-20 16:06:24,233:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 16:06:24,234:INFO:create_model() successfully completed......................................
2024-10-20 16:06:24,479:INFO:SubProcess create_model() end ==================================
2024-10-20 16:06:24,480:INFO:Creating metrics dataframe
2024-10-20 16:06:24,507:INFO:Initializing Quadratic Discriminant Analysis
2024-10-20 16:06:24,509:INFO:Total runtime is 4.4072137435277305 minutes
2024-10-20 16:06:24,520:INFO:SubProcess create_model() called ==================================
2024-10-20 16:06:24,520:INFO:Initializing create_model()
2024-10-20 16:06:24,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:06:24,521:INFO:Checking exceptions
2024-10-20 16:06:24,521:INFO:Importing libraries
2024-10-20 16:06:24,521:INFO:Copying training dataset
2024-10-20 16:06:24,717:INFO:Defining folds
2024-10-20 16:06:24,717:INFO:Declaring metric variables
2024-10-20 16:06:24,727:INFO:Importing untrained model
2024-10-20 16:06:24,738:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-20 16:06:24,756:INFO:Starting cross validation
2024-10-20 16:06:24,763:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:06:27,212:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:27,230:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:27,393:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:27,551:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:30,139:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:30,308:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:30,417:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:30,512:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:32,029:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:32,184:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:06:32,429:INFO:Calculating mean and std
2024-10-20 16:06:32,431:INFO:Creating metrics dataframe
2024-10-20 16:06:32,439:INFO:Uploading results into container
2024-10-20 16:06:32,440:INFO:Uploading model into container now
2024-10-20 16:06:32,441:INFO:_master_model_container: 8
2024-10-20 16:06:32,441:INFO:_display_container: 2
2024-10-20 16:06:32,442:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-20 16:06:32,442:INFO:create_model() successfully completed......................................
2024-10-20 16:06:32,625:INFO:SubProcess create_model() end ==================================
2024-10-20 16:06:32,625:INFO:Creating metrics dataframe
2024-10-20 16:06:32,645:INFO:Initializing Ada Boost Classifier
2024-10-20 16:06:32,646:INFO:Total runtime is 4.542841680844625 minutes
2024-10-20 16:06:32,658:INFO:SubProcess create_model() called ==================================
2024-10-20 16:06:32,659:INFO:Initializing create_model()
2024-10-20 16:06:32,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:06:32,660:INFO:Checking exceptions
2024-10-20 16:06:32,660:INFO:Importing libraries
2024-10-20 16:06:32,660:INFO:Copying training dataset
2024-10-20 16:06:32,877:INFO:Defining folds
2024-10-20 16:06:32,878:INFO:Declaring metric variables
2024-10-20 16:06:32,897:INFO:Importing untrained model
2024-10-20 16:06:32,911:INFO:Ada Boost Classifier Imported successfully
2024-10-20 16:06:32,937:INFO:Starting cross validation
2024-10-20 16:06:32,942:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:06:34,890:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:06:34,927:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:06:35,055:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:06:35,095:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:06:56,191:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:06:56,349:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:06:56,467:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:06:56,648:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:07:18,102:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:07:18,351:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:07:33,449:INFO:Calculating mean and std
2024-10-20 16:07:33,452:INFO:Creating metrics dataframe
2024-10-20 16:07:33,463:INFO:Uploading results into container
2024-10-20 16:07:33,465:INFO:Uploading model into container now
2024-10-20 16:07:33,466:INFO:_master_model_container: 9
2024-10-20 16:07:33,466:INFO:_display_container: 2
2024-10-20 16:07:33,467:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-20 16:07:33,467:INFO:create_model() successfully completed......................................
2024-10-20 16:07:33,844:INFO:SubProcess create_model() end ==================================
2024-10-20 16:07:33,844:INFO:Creating metrics dataframe
2024-10-20 16:07:33,885:INFO:Initializing Gradient Boosting Classifier
2024-10-20 16:07:33,886:INFO:Total runtime is 5.563492600123088 minutes
2024-10-20 16:07:33,901:INFO:SubProcess create_model() called ==================================
2024-10-20 16:07:33,902:INFO:Initializing create_model()
2024-10-20 16:07:33,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:07:33,902:INFO:Checking exceptions
2024-10-20 16:07:33,902:INFO:Importing libraries
2024-10-20 16:07:33,903:INFO:Copying training dataset
2024-10-20 16:07:34,117:INFO:Defining folds
2024-10-20 16:07:34,118:INFO:Declaring metric variables
2024-10-20 16:07:34,129:INFO:Importing untrained model
2024-10-20 16:07:34,151:INFO:Gradient Boosting Classifier Imported successfully
2024-10-20 16:07:34,184:INFO:Starting cross validation
2024-10-20 16:07:34,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:10:30,281:INFO:Calculating mean and std
2024-10-20 16:10:30,285:INFO:Creating metrics dataframe
2024-10-20 16:10:30,313:INFO:Uploading results into container
2024-10-20 16:10:30,314:INFO:Uploading model into container now
2024-10-20 16:10:30,315:INFO:_master_model_container: 10
2024-10-20 16:10:30,315:INFO:_display_container: 2
2024-10-20 16:10:30,319:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-20 16:10:30,319:INFO:create_model() successfully completed......................................
2024-10-20 16:10:30,457:INFO:SubProcess create_model() end ==================================
2024-10-20 16:10:30,457:INFO:Creating metrics dataframe
2024-10-20 16:10:30,471:INFO:Initializing Linear Discriminant Analysis
2024-10-20 16:10:30,471:INFO:Total runtime is 8.506591904163361 minutes
2024-10-20 16:10:30,477:INFO:SubProcess create_model() called ==================================
2024-10-20 16:10:30,477:INFO:Initializing create_model()
2024-10-20 16:10:30,477:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:10:30,477:INFO:Checking exceptions
2024-10-20 16:10:30,478:INFO:Importing libraries
2024-10-20 16:10:30,478:INFO:Copying training dataset
2024-10-20 16:10:30,597:INFO:Defining folds
2024-10-20 16:10:30,598:INFO:Declaring metric variables
2024-10-20 16:10:30,607:INFO:Importing untrained model
2024-10-20 16:10:30,613:INFO:Linear Discriminant Analysis Imported successfully
2024-10-20 16:10:30,626:INFO:Starting cross validation
2024-10-20 16:10:30,628:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:10:36,633:INFO:Calculating mean and std
2024-10-20 16:10:36,635:INFO:Creating metrics dataframe
2024-10-20 16:10:36,637:INFO:Uploading results into container
2024-10-20 16:10:36,637:INFO:Uploading model into container now
2024-10-20 16:10:36,638:INFO:_master_model_container: 11
2024-10-20 16:10:36,638:INFO:_display_container: 2
2024-10-20 16:10:36,640:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-20 16:10:36,640:INFO:create_model() successfully completed......................................
2024-10-20 16:10:36,780:INFO:SubProcess create_model() end ==================================
2024-10-20 16:10:36,780:INFO:Creating metrics dataframe
2024-10-20 16:10:36,793:INFO:Initializing Extra Trees Classifier
2024-10-20 16:10:36,793:INFO:Total runtime is 8.611948935190837 minutes
2024-10-20 16:10:36,801:INFO:SubProcess create_model() called ==================================
2024-10-20 16:10:36,801:INFO:Initializing create_model()
2024-10-20 16:10:36,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:10:36,802:INFO:Checking exceptions
2024-10-20 16:10:36,802:INFO:Importing libraries
2024-10-20 16:10:36,802:INFO:Copying training dataset
2024-10-20 16:10:36,917:INFO:Defining folds
2024-10-20 16:10:36,917:INFO:Declaring metric variables
2024-10-20 16:10:36,925:INFO:Importing untrained model
2024-10-20 16:10:36,936:INFO:Extra Trees Classifier Imported successfully
2024-10-20 16:10:36,950:INFO:Starting cross validation
2024-10-20 16:10:36,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:12:18,219:INFO:Calculating mean and std
2024-10-20 16:12:18,222:INFO:Creating metrics dataframe
2024-10-20 16:12:18,226:INFO:Uploading results into container
2024-10-20 16:12:18,230:INFO:Uploading model into container now
2024-10-20 16:12:18,230:INFO:_master_model_container: 12
2024-10-20 16:12:18,231:INFO:_display_container: 2
2024-10-20 16:12:18,231:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-20 16:12:18,232:INFO:create_model() successfully completed......................................
2024-10-20 16:12:18,411:INFO:SubProcess create_model() end ==================================
2024-10-20 16:12:18,412:INFO:Creating metrics dataframe
2024-10-20 16:12:18,440:INFO:Initializing Light Gradient Boosting Machine
2024-10-20 16:12:18,440:INFO:Total runtime is 10.306073836485545 minutes
2024-10-20 16:12:18,450:INFO:SubProcess create_model() called ==================================
2024-10-20 16:12:18,451:INFO:Initializing create_model()
2024-10-20 16:12:18,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:12:18,451:INFO:Checking exceptions
2024-10-20 16:12:18,452:INFO:Importing libraries
2024-10-20 16:12:18,452:INFO:Copying training dataset
2024-10-20 16:12:18,625:INFO:Defining folds
2024-10-20 16:12:18,626:INFO:Declaring metric variables
2024-10-20 16:12:18,637:INFO:Importing untrained model
2024-10-20 16:12:18,651:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-20 16:12:18,672:INFO:Starting cross validation
2024-10-20 16:12:18,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:12:36,866:INFO:Calculating mean and std
2024-10-20 16:12:36,868:INFO:Creating metrics dataframe
2024-10-20 16:12:36,874:INFO:Uploading results into container
2024-10-20 16:12:36,877:INFO:Uploading model into container now
2024-10-20 16:12:36,879:INFO:_master_model_container: 13
2024-10-20 16:12:36,880:INFO:_display_container: 2
2024-10-20 16:12:36,881:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-20 16:12:36,881:INFO:create_model() successfully completed......................................
2024-10-20 16:12:37,080:INFO:SubProcess create_model() end ==================================
2024-10-20 16:12:37,080:INFO:Creating metrics dataframe
2024-10-20 16:12:37,108:INFO:Initializing Dummy Classifier
2024-10-20 16:12:37,108:INFO:Total runtime is 10.61720310052236 minutes
2024-10-20 16:12:37,119:INFO:SubProcess create_model() called ==================================
2024-10-20 16:12:37,119:INFO:Initializing create_model()
2024-10-20 16:12:37,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CADDE6C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:12:37,120:INFO:Checking exceptions
2024-10-20 16:12:37,120:INFO:Importing libraries
2024-10-20 16:12:37,120:INFO:Copying training dataset
2024-10-20 16:12:37,274:INFO:Defining folds
2024-10-20 16:12:37,274:INFO:Declaring metric variables
2024-10-20 16:12:37,287:INFO:Importing untrained model
2024-10-20 16:12:37,298:INFO:Dummy Classifier Imported successfully
2024-10-20 16:12:37,315:INFO:Starting cross validation
2024-10-20 16:12:37,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:12:38,935:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:39,061:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:39,139:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:39,182:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:40,648:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:40,795:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:40,811:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:40,853:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:41,877:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:41,938:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:12:41,969:INFO:Calculating mean and std
2024-10-20 16:12:41,974:INFO:Creating metrics dataframe
2024-10-20 16:12:41,980:INFO:Uploading results into container
2024-10-20 16:12:41,981:INFO:Uploading model into container now
2024-10-20 16:12:41,982:INFO:_master_model_container: 14
2024-10-20 16:12:41,982:INFO:_display_container: 2
2024-10-20 16:12:41,982:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-20 16:12:41,982:INFO:create_model() successfully completed......................................
2024-10-20 16:12:42,158:INFO:SubProcess create_model() end ==================================
2024-10-20 16:12:42,158:INFO:Creating metrics dataframe
2024-10-20 16:12:42,186:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-20 16:12:42,216:INFO:Initializing create_model()
2024-10-20 16:12:42,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:12:42,217:INFO:Checking exceptions
2024-10-20 16:12:42,222:INFO:Importing libraries
2024-10-20 16:12:42,223:INFO:Copying training dataset
2024-10-20 16:12:42,347:INFO:Defining folds
2024-10-20 16:12:42,348:INFO:Declaring metric variables
2024-10-20 16:12:42,348:INFO:Importing untrained model
2024-10-20 16:12:42,348:INFO:Declaring custom model
2024-10-20 16:12:42,349:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-20 16:12:42,350:INFO:Cross validation set to False
2024-10-20 16:12:42,350:INFO:Fitting Model
2024-10-20 16:12:43,122:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-20 16:12:43,146:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.021139 seconds.
2024-10-20 16:12:43,146:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-10-20 16:12:43,146:INFO:[LightGBM] [Info] Total Bins 1368
2024-10-20 16:12:43,147:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 14
2024-10-20 16:12:43,149:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-20 16:12:43,150:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-20 16:12:44,302:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-20 16:12:44,303:INFO:create_model() successfully completed......................................
2024-10-20 16:12:44,478:INFO:Creating Dashboard logs
2024-10-20 16:12:44,484:INFO:Model: Light Gradient Boosting Machine
2024-10-20 16:12:44,643:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-20 16:12:45,016:INFO:Initializing predict_model()
2024-10-20 16:12:45,016:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017CADF322A0>)
2024-10-20 16:12:45,017:INFO:Checking exceptions
2024-10-20 16:12:45,017:INFO:Preloading libraries
2024-10-20 16:12:48,196:INFO:Creating Dashboard logs
2024-10-20 16:12:48,202:INFO:Model: Gradient Boosting Classifier
2024-10-20 16:12:48,282:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-20 16:12:49,087:INFO:Creating Dashboard logs
2024-10-20 16:12:49,094:INFO:Model: Random Forest Classifier
2024-10-20 16:12:49,222:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 16:12:49,988:INFO:Creating Dashboard logs
2024-10-20 16:12:49,992:INFO:Model: Ada Boost Classifier
2024-10-20 16:12:50,072:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-10-20 16:12:50,882:INFO:Creating Dashboard logs
2024-10-20 16:12:50,887:INFO:Model: Extra Trees Classifier
2024-10-20 16:12:50,992:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 16:12:51,849:INFO:Creating Dashboard logs
2024-10-20 16:12:51,853:INFO:Model: Linear Discriminant Analysis
2024-10-20 16:12:51,956:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-10-20 16:12:52,569:INFO:Creating Dashboard logs
2024-10-20 16:12:52,572:INFO:Model: Ridge Classifier
2024-10-20 16:12:52,723:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-20 16:12:53,757:INFO:Creating Dashboard logs
2024-10-20 16:12:53,763:INFO:Model: Decision Tree Classifier
2024-10-20 16:12:53,842:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-20 16:12:54,503:INFO:Creating Dashboard logs
2024-10-20 16:12:54,507:INFO:Model: Logistic Regression
2024-10-20 16:12:54,586:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-10-20 16:12:55,380:INFO:Creating Dashboard logs
2024-10-20 16:12:55,385:INFO:Model: Naive Bayes
2024-10-20 16:12:55,471:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-10-20 16:12:56,108:INFO:Creating Dashboard logs
2024-10-20 16:12:56,116:INFO:Model: Dummy Classifier
2024-10-20 16:12:56,248:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-10-20 16:12:56,965:INFO:Creating Dashboard logs
2024-10-20 16:12:56,968:INFO:Model: Quadratic Discriminant Analysis
2024-10-20 16:12:57,048:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-10-20 16:12:57,802:INFO:Creating Dashboard logs
2024-10-20 16:12:57,807:INFO:Model: K Neighbors Classifier
2024-10-20 16:12:57,888:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-20 16:12:58,611:INFO:Creating Dashboard logs
2024-10-20 16:12:58,615:INFO:Model: SVM - Linear Kernel
2024-10-20 16:12:58,719:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-20 16:12:59,451:INFO:_master_model_container: 14
2024-10-20 16:12:59,452:INFO:_display_container: 2
2024-10-20 16:12:59,452:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-20 16:12:59,453:INFO:compare_models() successfully completed......................................
2024-10-20 16:15:45,835:INFO:Initializing create_model()
2024-10-20 16:15:45,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:15:45,836:INFO:Checking exceptions
2024-10-20 16:15:45,866:INFO:Importing libraries
2024-10-20 16:15:45,867:INFO:Copying training dataset
2024-10-20 16:15:46,181:INFO:Defining folds
2024-10-20 16:15:46,181:INFO:Declaring metric variables
2024-10-20 16:15:46,187:INFO:Importing untrained model
2024-10-20 16:15:46,196:INFO:Random Forest Classifier Imported successfully
2024-10-20 16:15:46,211:INFO:Starting cross validation
2024-10-20 16:15:46,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:18:04,592:INFO:Calculating mean and std
2024-10-20 16:18:04,595:INFO:Creating metrics dataframe
2024-10-20 16:18:04,615:INFO:Finalizing model
2024-10-20 16:18:21,829:INFO:Creating Dashboard logs
2024-10-20 16:18:21,834:INFO:Model: Random Forest Classifier
2024-10-20 16:18:21,945:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 16:18:22,272:INFO:Initializing predict_model()
2024-10-20 16:18:22,272:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017CADE6C180>)
2024-10-20 16:18:22,272:INFO:Checking exceptions
2024-10-20 16:18:22,272:INFO:Preloading libraries
2024-10-20 16:18:27,160:INFO:Uploading results into container
2024-10-20 16:18:27,161:INFO:Uploading model into container now
2024-10-20 16:18:27,188:INFO:_master_model_container: 15
2024-10-20 16:18:27,188:INFO:_display_container: 3
2024-10-20 16:18:27,190:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 16:18:27,191:INFO:create_model() successfully completed......................................
2024-10-20 16:18:54,567:INFO:Initializing tune_model()
2024-10-20 16:18:54,567:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20], 'min_samples_split': [2]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-20 16:18:54,567:INFO:Checking exceptions
2024-10-20 16:18:54,636:INFO:Copying training dataset
2024-10-20 16:18:54,766:INFO:Checking base model
2024-10-20 16:18:54,766:INFO:Base model : Random Forest Classifier
2024-10-20 16:18:54,796:INFO:Declaring metric variables
2024-10-20 16:18:54,803:INFO:Defining Hyperparameters
2024-10-20 16:18:55,051:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20], 'actual_estimator__min_samples_split': [2]}
2024-10-20 16:18:55,052:INFO:Tuning with n_jobs=-1
2024-10-20 16:18:55,052:INFO:Initializing GridSearchCV
2024-10-20 16:22:13,986:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__min_samples_split': 2, 'actual_estimator__n_estimators': 100}
2024-10-20 16:22:14,000:INFO:Hyperparameter search completed
2024-10-20 16:22:14,001:INFO:SubProcess create_model() called ==================================
2024-10-20 16:22:14,004:INFO:Initializing create_model()
2024-10-20 16:22:14,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017CAB7BE5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2024-10-20 16:22:14,004:INFO:Checking exceptions
2024-10-20 16:22:14,004:INFO:Importing libraries
2024-10-20 16:22:14,005:INFO:Copying training dataset
2024-10-20 16:22:14,183:INFO:Defining folds
2024-10-20 16:22:14,183:INFO:Declaring metric variables
2024-10-20 16:22:14,192:INFO:Importing untrained model
2024-10-20 16:22:14,193:INFO:Declaring custom model
2024-10-20 16:22:14,206:INFO:Random Forest Classifier Imported successfully
2024-10-20 16:22:14,224:INFO:Starting cross validation
2024-10-20 16:22:14,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:23:28,513:INFO:Calculating mean and std
2024-10-20 16:23:28,517:INFO:Creating metrics dataframe
2024-10-20 16:23:28,530:INFO:Finalizing model
2024-10-20 16:23:37,908:INFO:Uploading results into container
2024-10-20 16:23:37,909:INFO:Uploading model into container now
2024-10-20 16:23:37,911:INFO:_master_model_container: 16
2024-10-20 16:23:37,911:INFO:_display_container: 4
2024-10-20 16:23:37,913:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 16:23:37,914:INFO:create_model() successfully completed......................................
2024-10-20 16:23:38,106:INFO:SubProcess create_model() end ==================================
2024-10-20 16:23:38,106:INFO:choose_better activated
2024-10-20 16:23:38,113:INFO:SubProcess create_model() called ==================================
2024-10-20 16:23:38,114:INFO:Initializing create_model()
2024-10-20 16:23:38,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:23:38,115:INFO:Checking exceptions
2024-10-20 16:23:38,118:INFO:Importing libraries
2024-10-20 16:23:38,119:INFO:Copying training dataset
2024-10-20 16:23:38,243:INFO:Defining folds
2024-10-20 16:23:38,243:INFO:Declaring metric variables
2024-10-20 16:23:38,244:INFO:Importing untrained model
2024-10-20 16:23:38,244:INFO:Declaring custom model
2024-10-20 16:23:38,247:INFO:Random Forest Classifier Imported successfully
2024-10-20 16:23:38,248:INFO:Starting cross validation
2024-10-20 16:23:38,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:25:53,110:INFO:Calculating mean and std
2024-10-20 16:25:53,112:INFO:Creating metrics dataframe
2024-10-20 16:25:53,120:INFO:Finalizing model
2024-10-20 16:26:09,946:INFO:Uploading results into container
2024-10-20 16:26:09,950:INFO:Uploading model into container now
2024-10-20 16:26:09,951:INFO:_master_model_container: 17
2024-10-20 16:26:09,952:INFO:_display_container: 5
2024-10-20 16:26:09,952:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 16:26:09,953:INFO:create_model() successfully completed......................................
2024-10-20 16:26:10,194:INFO:SubProcess create_model() end ==================================
2024-10-20 16:26:10,195:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8638
2024-10-20 16:26:10,195:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.865
2024-10-20 16:26:10,196:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-10-20 16:26:10,196:INFO:choose_better completed
2024-10-20 16:26:10,196:INFO:Creating Dashboard logs
2024-10-20 16:26:10,205:INFO:Model: Random Forest Classifier
2024-10-20 16:26:10,318:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 10, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 16:26:10,659:INFO:Initializing predict_model()
2024-10-20 16:26:10,659:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017CADE6C680>)
2024-10-20 16:26:10,660:INFO:Checking exceptions
2024-10-20 16:26:10,660:INFO:Preloading libraries
2024-10-20 16:26:12,956:INFO:_master_model_container: 17
2024-10-20 16:26:12,956:INFO:_display_container: 4
2024-10-20 16:26:12,956:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 16:26:12,956:INFO:tune_model() successfully completed......................................
2024-10-20 16:28:49,780:INFO:Initializing tune_model()
2024-10-20 16:28:49,780:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CAD4754D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=50, custom_grid={'n_estimators': [100, 200, 300, 400, 500], 'max_depth': [10, 20, 30, 40, 50], 'min_samples_split': [2, 5, 10, 15, 20]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-20 16:28:49,780:INFO:Checking exceptions
2024-10-20 16:28:49,843:INFO:Copying training dataset
2024-10-20 16:28:50,032:INFO:Checking base model
2024-10-20 16:28:50,033:INFO:Base model : Random Forest Classifier
2024-10-20 16:28:50,039:INFO:Declaring metric variables
2024-10-20 16:28:50,048:INFO:Defining Hyperparameters
2024-10-20 16:28:50,212:INFO:custom_grid: {'actual_estimator__n_estimators': [100, 200, 300, 400, 500], 'actual_estimator__max_depth': [10, 20, 30, 40, 50], 'actual_estimator__min_samples_split': [2, 5, 10, 15, 20]}
2024-10-20 16:28:50,212:INFO:Tuning with n_jobs=-1
2024-10-20 16:28:50,212:INFO:Initializing RandomizedSearchCV
2024-10-20 16:43:17,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-20 16:43:17,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-20 16:43:17,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-20 16:43:17,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-20 16:43:18,178:INFO:PyCaret ClassificationExperiment
2024-10-20 16:43:18,178:INFO:Logging name: experiment_final
2024-10-20 16:43:18,178:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-20 16:43:18,178:INFO:version 3.3.2
2024-10-20 16:43:18,178:INFO:Initializing setup()
2024-10-20 16:43:18,178:INFO:self.USI: 2cd2
2024-10-20 16:43:18,179:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'gpu_param', 'logging_param', 'exp_name_log', 'X_test', 'fix_imbalance', 'y', 'X', 'html_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y_train', 'data', 'seed', 'X_train', 'y_test', 'fold_groups_param', 'pipeline', 'USI', 'exp_id', 'log_plots_param', 'gpu_n_jobs_param', 'target_param', 'fold_shuffle_param', 'idx', 'memory'}
2024-10-20 16:43:18,179:INFO:Checking environment
2024-10-20 16:43:18,179:INFO:python_version: 3.11.8
2024-10-20 16:43:18,179:INFO:python_build: ('tags/v3.11.8:db85d51', 'Feb  6 2024 22:03:32')
2024-10-20 16:43:18,179:INFO:machine: AMD64
2024-10-20 16:43:18,179:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-20 16:43:18,181:INFO:Memory: svmem(total=17053163520, available=8709042176, percent=48.9, used=8344121344, free=8709042176)
2024-10-20 16:43:18,182:INFO:Physical Core: 2
2024-10-20 16:43:18,182:INFO:Logical Core: 4
2024-10-20 16:43:18,182:INFO:Checking libraries
2024-10-20 16:43:18,182:INFO:System:
2024-10-20 16:43:18,182:INFO:    python: 3.11.8 (tags/v3.11.8:db85d51, Feb  6 2024, 22:03:32) [MSC v.1937 64 bit (AMD64)]
2024-10-20 16:43:18,182:INFO:executable: c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\python.exe
2024-10-20 16:43:18,182:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-20 16:43:18,182:INFO:PyCaret required dependencies:
2024-10-20 16:43:18,413:INFO:                 pip: 24.0
2024-10-20 16:43:18,413:INFO:          setuptools: 65.5.0
2024-10-20 16:43:18,413:INFO:             pycaret: 3.3.2
2024-10-20 16:43:18,413:INFO:             IPython: 8.28.0
2024-10-20 16:43:18,413:INFO:          ipywidgets: 8.1.5
2024-10-20 16:43:18,413:INFO:                tqdm: 4.66.5
2024-10-20 16:43:18,413:INFO:               numpy: 1.26.4
2024-10-20 16:43:18,413:INFO:              pandas: 2.1.4
2024-10-20 16:43:18,414:INFO:              jinja2: 3.1.4
2024-10-20 16:43:18,414:INFO:               scipy: 1.11.4
2024-10-20 16:43:18,414:INFO:              joblib: 1.3.2
2024-10-20 16:43:18,414:INFO:             sklearn: 1.4.2
2024-10-20 16:43:18,414:INFO:                pyod: 2.0.2
2024-10-20 16:43:18,414:INFO:            imblearn: 0.12.4
2024-10-20 16:43:18,414:INFO:   category_encoders: 2.6.4
2024-10-20 16:43:18,414:INFO:            lightgbm: 4.5.0
2024-10-20 16:43:18,414:INFO:               numba: 0.60.0
2024-10-20 16:43:18,414:INFO:            requests: 2.32.3
2024-10-20 16:43:18,414:INFO:          matplotlib: 3.7.5
2024-10-20 16:43:18,414:INFO:          scikitplot: 0.3.7
2024-10-20 16:43:18,414:INFO:         yellowbrick: 1.5
2024-10-20 16:43:18,414:INFO:              plotly: 5.24.1
2024-10-20 16:43:18,414:INFO:    plotly-resampler: Not installed
2024-10-20 16:43:18,414:INFO:             kaleido: 0.2.1
2024-10-20 16:43:18,414:INFO:           schemdraw: 0.15
2024-10-20 16:43:18,414:INFO:         statsmodels: 0.14.4
2024-10-20 16:43:18,414:INFO:              sktime: 0.26.0
2024-10-20 16:43:18,414:INFO:               tbats: 1.1.3
2024-10-20 16:43:18,414:INFO:            pmdarima: 2.0.4
2024-10-20 16:43:18,414:INFO:              psutil: 6.1.0
2024-10-20 16:43:18,414:INFO:          markupsafe: 3.0.2
2024-10-20 16:43:18,414:INFO:             pickle5: Not installed
2024-10-20 16:43:18,414:INFO:         cloudpickle: 3.1.0
2024-10-20 16:43:18,415:INFO:         deprecation: 2.1.0
2024-10-20 16:43:18,415:INFO:              xxhash: 3.5.0
2024-10-20 16:43:18,415:INFO:           wurlitzer: Not installed
2024-10-20 16:43:18,415:INFO:PyCaret optional dependencies:
2024-10-20 16:43:18,993:INFO:                shap: 0.44.1
2024-10-20 16:43:18,993:INFO:           interpret: 0.6.4
2024-10-20 16:43:18,994:INFO:                umap: 0.5.6
2024-10-20 16:43:18,994:INFO:     ydata_profiling: 4.11.0
2024-10-20 16:43:18,994:INFO:  explainerdashboard: 0.4.7
2024-10-20 16:43:18,994:INFO:             autoviz: Not installed
2024-10-20 16:43:18,994:INFO:           fairlearn: 0.7.0
2024-10-20 16:43:18,994:INFO:          deepchecks: Not installed
2024-10-20 16:43:18,994:INFO:             xgboost: Not installed
2024-10-20 16:43:18,994:INFO:            catboost: Not installed
2024-10-20 16:43:18,994:INFO:              kmodes: Not installed
2024-10-20 16:43:18,995:INFO:             mlxtend: Not installed
2024-10-20 16:43:18,995:INFO:       statsforecast: Not installed
2024-10-20 16:43:18,995:INFO:        tune_sklearn: Not installed
2024-10-20 16:43:18,995:INFO:                 ray: Not installed
2024-10-20 16:43:18,995:INFO:            hyperopt: 0.2.7
2024-10-20 16:43:18,995:INFO:              optuna: 4.0.0
2024-10-20 16:43:18,995:INFO:               skopt: 0.10.2
2024-10-20 16:43:18,995:INFO:              mlflow: 2.17.0
2024-10-20 16:43:18,995:INFO:              gradio: Not installed
2024-10-20 16:43:18,995:INFO:             fastapi: 0.115.2
2024-10-20 16:43:18,995:INFO:             uvicorn: 0.32.0
2024-10-20 16:43:18,996:INFO:              m2cgen: Not installed
2024-10-20 16:43:18,996:INFO:           evidently: Not installed
2024-10-20 16:43:18,996:INFO:               fugue: Not installed
2024-10-20 16:43:18,996:INFO:           streamlit: Not installed
2024-10-20 16:43:18,997:INFO:             prophet: Not installed
2024-10-20 16:43:18,997:INFO:None
2024-10-20 16:43:18,997:INFO:Set up data.
2024-10-20 16:43:19,153:INFO:Set up folding strategy.
2024-10-20 16:43:19,153:INFO:Set up train/test split.
2024-10-20 16:43:19,270:INFO:Set up index.
2024-10-20 16:43:19,279:INFO:Assigning column types.
2024-10-20 16:43:19,327:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-20 16:43:19,398:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 16:43:19,402:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:43:19,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:19,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:19,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 16:43:19,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:43:19,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:19,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:19,549:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-20 16:43:19,610:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:43:19,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:19,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:19,785:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 16:43:19,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:19,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:19,899:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-20 16:43:20,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:20,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:20,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:20,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:20,468:INFO:Preparing preprocessing pipeline...
2024-10-20 16:43:20,487:INFO:Set up simple imputation.
2024-10-20 16:43:20,561:INFO:Set up encoding of ordinal features.
2024-10-20 16:43:20,599:INFO:Set up encoding of categorical features.
2024-10-20 16:43:22,047:INFO:Finished creating preprocessing pipeline.
2024-10-20 16:43:22,074:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 16:43:22,074:INFO:Creating final display dataframe.
2024-10-20 16:43:22,667:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Exited
2                   Target type            Binary
3           Original data shape      (165034, 14)
4        Transformed data shape      (165034, 15)
5   Transformed train set shape      (115523, 15)
6    Transformed test set shape       (49511, 15)
7               Ignore features                 1
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment      MlflowLogger
21              Experiment Name  experiment_final
22                          USI              2cd2
2024-10-20 16:43:22,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:22,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:23,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:23,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 16:43:23,008:INFO:Logging experiment in loggers
2024-10-20 16:43:23,512:INFO:SubProcess save_model() called ==================================
2024-10-20 16:43:23,625:INFO:Initializing save_model()
2024-10-20 16:43:23,626:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\PEDROV~1\AppData\Local\Temp\tmpkn9i8421\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-20 16:43:23,626:INFO:Adding model into prep_pipe
2024-10-20 16:43:23,626:WARNING:Only Model saved as it was a pipeline.
2024-10-20 16:43:23,646:INFO:C:\Users\PEDROV~1\AppData\Local\Temp\tmpkn9i8421\Transformation Pipeline.pkl saved in current working directory
2024-10-20 16:43:23,696:INFO:Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 16:43:23,696:INFO:save_model() successfully completed......................................
2024-10-20 16:43:23,887:INFO:SubProcess save_model() end ==================================
2024-10-20 16:43:24,094:INFO:setup() successfully completed in 4.84s...............
2024-10-20 16:43:40,029:INFO:Initializing compare_models()
2024-10-20 16:43:40,029:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-20 16:43:40,030:INFO:Checking exceptions
2024-10-20 16:43:40,088:INFO:Preparing display monitor
2024-10-20 16:43:40,132:INFO:Initializing Logistic Regression
2024-10-20 16:43:40,132:INFO:Total runtime is 0.0 minutes
2024-10-20 16:43:40,141:INFO:SubProcess create_model() called ==================================
2024-10-20 16:43:40,141:INFO:Initializing create_model()
2024-10-20 16:43:40,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:43:40,142:INFO:Checking exceptions
2024-10-20 16:43:40,143:INFO:Importing libraries
2024-10-20 16:43:40,143:INFO:Copying training dataset
2024-10-20 16:43:40,305:INFO:Defining folds
2024-10-20 16:43:40,305:INFO:Declaring metric variables
2024-10-20 16:43:40,309:INFO:Importing untrained model
2024-10-20 16:43:40,314:INFO:Logistic Regression Imported successfully
2024-10-20 16:43:40,327:INFO:Starting cross validation
2024-10-20 16:43:40,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:44:13,432:INFO:Calculating mean and std
2024-10-20 16:44:13,435:INFO:Creating metrics dataframe
2024-10-20 16:44:13,445:INFO:Uploading results into container
2024-10-20 16:44:13,446:INFO:Uploading model into container now
2024-10-20 16:44:13,448:INFO:_master_model_container: 1
2024-10-20 16:44:13,448:INFO:_display_container: 2
2024-10-20 16:44:13,449:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-20 16:44:13,449:INFO:create_model() successfully completed......................................
2024-10-20 16:44:13,649:INFO:SubProcess create_model() end ==================================
2024-10-20 16:44:13,650:INFO:Creating metrics dataframe
2024-10-20 16:44:13,667:INFO:Initializing K Neighbors Classifier
2024-10-20 16:44:13,668:INFO:Total runtime is 0.5589322368303935 minutes
2024-10-20 16:44:13,680:INFO:SubProcess create_model() called ==================================
2024-10-20 16:44:13,680:INFO:Initializing create_model()
2024-10-20 16:44:13,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:44:13,681:INFO:Checking exceptions
2024-10-20 16:44:13,681:INFO:Importing libraries
2024-10-20 16:44:13,681:INFO:Copying training dataset
2024-10-20 16:44:13,847:INFO:Defining folds
2024-10-20 16:44:13,847:INFO:Declaring metric variables
2024-10-20 16:44:13,857:INFO:Importing untrained model
2024-10-20 16:44:13,864:INFO:K Neighbors Classifier Imported successfully
2024-10-20 16:44:13,880:INFO:Starting cross validation
2024-10-20 16:44:13,883:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:44:33,736:INFO:Calculating mean and std
2024-10-20 16:44:33,739:INFO:Creating metrics dataframe
2024-10-20 16:44:33,745:INFO:Uploading results into container
2024-10-20 16:44:33,747:INFO:Uploading model into container now
2024-10-20 16:44:33,749:INFO:_master_model_container: 2
2024-10-20 16:44:33,749:INFO:_display_container: 2
2024-10-20 16:44:33,749:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-20 16:44:33,749:INFO:create_model() successfully completed......................................
2024-10-20 16:44:33,902:INFO:SubProcess create_model() end ==================================
2024-10-20 16:44:33,903:INFO:Creating metrics dataframe
2024-10-20 16:44:33,912:INFO:Initializing Naive Bayes
2024-10-20 16:44:33,912:INFO:Total runtime is 0.8963255286216736 minutes
2024-10-20 16:44:33,921:INFO:SubProcess create_model() called ==================================
2024-10-20 16:44:33,921:INFO:Initializing create_model()
2024-10-20 16:44:33,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:44:33,922:INFO:Checking exceptions
2024-10-20 16:44:33,922:INFO:Importing libraries
2024-10-20 16:44:33,922:INFO:Copying training dataset
2024-10-20 16:44:34,059:INFO:Defining folds
2024-10-20 16:44:34,059:INFO:Declaring metric variables
2024-10-20 16:44:34,070:INFO:Importing untrained model
2024-10-20 16:44:34,077:INFO:Naive Bayes Imported successfully
2024-10-20 16:44:34,097:INFO:Starting cross validation
2024-10-20 16:44:34,109:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:44:40,225:INFO:Calculating mean and std
2024-10-20 16:44:40,231:INFO:Creating metrics dataframe
2024-10-20 16:44:40,238:INFO:Uploading results into container
2024-10-20 16:44:40,239:INFO:Uploading model into container now
2024-10-20 16:44:40,240:INFO:_master_model_container: 3
2024-10-20 16:44:40,240:INFO:_display_container: 2
2024-10-20 16:44:40,240:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-20 16:44:40,240:INFO:create_model() successfully completed......................................
2024-10-20 16:44:40,397:INFO:SubProcess create_model() end ==================================
2024-10-20 16:44:40,397:INFO:Creating metrics dataframe
2024-10-20 16:44:40,414:INFO:Initializing Decision Tree Classifier
2024-10-20 16:44:40,414:INFO:Total runtime is 1.0046906232833863 minutes
2024-10-20 16:44:40,421:INFO:SubProcess create_model() called ==================================
2024-10-20 16:44:40,422:INFO:Initializing create_model()
2024-10-20 16:44:40,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:44:40,422:INFO:Checking exceptions
2024-10-20 16:44:40,422:INFO:Importing libraries
2024-10-20 16:44:40,422:INFO:Copying training dataset
2024-10-20 16:44:40,556:INFO:Defining folds
2024-10-20 16:44:40,556:INFO:Declaring metric variables
2024-10-20 16:44:40,568:INFO:Importing untrained model
2024-10-20 16:44:40,576:INFO:Decision Tree Classifier Imported successfully
2024-10-20 16:44:40,596:INFO:Starting cross validation
2024-10-20 16:44:40,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:44:55,350:INFO:Calculating mean and std
2024-10-20 16:44:55,356:INFO:Creating metrics dataframe
2024-10-20 16:44:55,377:INFO:Uploading results into container
2024-10-20 16:44:55,385:INFO:Uploading model into container now
2024-10-20 16:44:55,385:INFO:_master_model_container: 4
2024-10-20 16:44:55,385:INFO:_display_container: 2
2024-10-20 16:44:55,386:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-20 16:44:55,386:INFO:create_model() successfully completed......................................
2024-10-20 16:44:55,520:INFO:SubProcess create_model() end ==================================
2024-10-20 16:44:55,520:INFO:Creating metrics dataframe
2024-10-20 16:44:55,535:INFO:Initializing SVM - Linear Kernel
2024-10-20 16:44:55,535:INFO:Total runtime is 1.2567091464996338 minutes
2024-10-20 16:44:55,545:INFO:SubProcess create_model() called ==================================
2024-10-20 16:44:55,547:INFO:Initializing create_model()
2024-10-20 16:44:55,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:44:55,548:INFO:Checking exceptions
2024-10-20 16:44:55,549:INFO:Importing libraries
2024-10-20 16:44:55,549:INFO:Copying training dataset
2024-10-20 16:44:55,699:INFO:Defining folds
2024-10-20 16:44:55,699:INFO:Declaring metric variables
2024-10-20 16:44:55,707:INFO:Importing untrained model
2024-10-20 16:44:55,720:INFO:SVM - Linear Kernel Imported successfully
2024-10-20 16:44:55,739:INFO:Starting cross validation
2024-10-20 16:44:55,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:45:07,956:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:45:08,227:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:45:18,699:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:45:21,023:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:45:21,381:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:45:22,886:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:45:29,006:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:45:31,614:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:45:31,638:INFO:Calculating mean and std
2024-10-20 16:45:31,640:INFO:Creating metrics dataframe
2024-10-20 16:45:31,641:INFO:Uploading results into container
2024-10-20 16:45:31,642:INFO:Uploading model into container now
2024-10-20 16:45:31,644:INFO:_master_model_container: 5
2024-10-20 16:45:31,644:INFO:_display_container: 2
2024-10-20 16:45:31,647:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-20 16:45:31,647:INFO:create_model() successfully completed......................................
2024-10-20 16:45:31,775:INFO:SubProcess create_model() end ==================================
2024-10-20 16:45:31,775:INFO:Creating metrics dataframe
2024-10-20 16:45:31,785:INFO:Initializing Ridge Classifier
2024-10-20 16:45:31,785:INFO:Total runtime is 1.8608863274256389 minutes
2024-10-20 16:45:31,789:INFO:SubProcess create_model() called ==================================
2024-10-20 16:45:31,790:INFO:Initializing create_model()
2024-10-20 16:45:31,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:45:31,791:INFO:Checking exceptions
2024-10-20 16:45:31,791:INFO:Importing libraries
2024-10-20 16:45:31,792:INFO:Copying training dataset
2024-10-20 16:45:31,907:INFO:Defining folds
2024-10-20 16:45:31,907:INFO:Declaring metric variables
2024-10-20 16:45:31,912:INFO:Importing untrained model
2024-10-20 16:45:31,921:INFO:Ridge Classifier Imported successfully
2024-10-20 16:45:31,939:INFO:Starting cross validation
2024-10-20 16:45:31,949:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:45:37,820:INFO:Calculating mean and std
2024-10-20 16:45:37,825:INFO:Creating metrics dataframe
2024-10-20 16:45:37,834:INFO:Uploading results into container
2024-10-20 16:45:37,835:INFO:Uploading model into container now
2024-10-20 16:45:37,836:INFO:_master_model_container: 6
2024-10-20 16:45:37,836:INFO:_display_container: 2
2024-10-20 16:45:37,836:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-20 16:45:37,836:INFO:create_model() successfully completed......................................
2024-10-20 16:45:38,019:INFO:SubProcess create_model() end ==================================
2024-10-20 16:45:38,020:INFO:Creating metrics dataframe
2024-10-20 16:45:38,033:INFO:Initializing Random Forest Classifier
2024-10-20 16:45:38,033:INFO:Total runtime is 1.9650101741154988 minutes
2024-10-20 16:45:38,044:INFO:SubProcess create_model() called ==================================
2024-10-20 16:45:38,044:INFO:Initializing create_model()
2024-10-20 16:45:38,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:45:38,045:INFO:Checking exceptions
2024-10-20 16:45:38,045:INFO:Importing libraries
2024-10-20 16:45:38,045:INFO:Copying training dataset
2024-10-20 16:45:38,211:INFO:Defining folds
2024-10-20 16:45:38,211:INFO:Declaring metric variables
2024-10-20 16:45:38,219:INFO:Importing untrained model
2024-10-20 16:45:38,230:INFO:Random Forest Classifier Imported successfully
2024-10-20 16:45:38,241:INFO:Starting cross validation
2024-10-20 16:45:38,248:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:47:58,614:INFO:Calculating mean and std
2024-10-20 16:47:58,622:INFO:Creating metrics dataframe
2024-10-20 16:47:58,629:INFO:Uploading results into container
2024-10-20 16:47:58,630:INFO:Uploading model into container now
2024-10-20 16:47:58,630:INFO:_master_model_container: 7
2024-10-20 16:47:58,631:INFO:_display_container: 2
2024-10-20 16:47:58,632:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 16:47:58,632:INFO:create_model() successfully completed......................................
2024-10-20 16:47:58,813:INFO:SubProcess create_model() end ==================================
2024-10-20 16:47:58,813:INFO:Creating metrics dataframe
2024-10-20 16:47:58,837:INFO:Initializing Quadratic Discriminant Analysis
2024-10-20 16:47:58,837:INFO:Total runtime is 4.311752688884735 minutes
2024-10-20 16:47:58,845:INFO:SubProcess create_model() called ==================================
2024-10-20 16:47:58,845:INFO:Initializing create_model()
2024-10-20 16:47:58,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:47:58,846:INFO:Checking exceptions
2024-10-20 16:47:58,846:INFO:Importing libraries
2024-10-20 16:47:58,846:INFO:Copying training dataset
2024-10-20 16:47:59,037:INFO:Defining folds
2024-10-20 16:47:59,037:INFO:Declaring metric variables
2024-10-20 16:47:59,047:INFO:Importing untrained model
2024-10-20 16:47:59,057:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-20 16:47:59,075:INFO:Starting cross validation
2024-10-20 16:47:59,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:48:00,846:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:00,955:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:01,011:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:01,050:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:02,887:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:03,107:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:03,134:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:03,151:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:04,744:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:04,865:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-20 16:48:05,138:INFO:Calculating mean and std
2024-10-20 16:48:05,141:INFO:Creating metrics dataframe
2024-10-20 16:48:05,146:INFO:Uploading results into container
2024-10-20 16:48:05,147:INFO:Uploading model into container now
2024-10-20 16:48:05,148:INFO:_master_model_container: 8
2024-10-20 16:48:05,148:INFO:_display_container: 2
2024-10-20 16:48:05,148:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-20 16:48:05,148:INFO:create_model() successfully completed......................................
2024-10-20 16:48:05,329:INFO:SubProcess create_model() end ==================================
2024-10-20 16:48:05,329:INFO:Creating metrics dataframe
2024-10-20 16:48:05,355:INFO:Initializing Ada Boost Classifier
2024-10-20 16:48:05,355:INFO:Total runtime is 4.420378935337067 minutes
2024-10-20 16:48:05,364:INFO:SubProcess create_model() called ==================================
2024-10-20 16:48:05,364:INFO:Initializing create_model()
2024-10-20 16:48:05,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:48:05,365:INFO:Checking exceptions
2024-10-20 16:48:05,365:INFO:Importing libraries
2024-10-20 16:48:05,365:INFO:Copying training dataset
2024-10-20 16:48:05,521:INFO:Defining folds
2024-10-20 16:48:05,521:INFO:Declaring metric variables
2024-10-20 16:48:05,532:INFO:Importing untrained model
2024-10-20 16:48:05,540:INFO:Ada Boost Classifier Imported successfully
2024-10-20 16:48:05,565:INFO:Starting cross validation
2024-10-20 16:48:05,569:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:48:07,069:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:07,189:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:07,197:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:07,211:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:22,757:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:22,949:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:23,019:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:23,133:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:38,134:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:38,151:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-20 16:48:51,843:INFO:Calculating mean and std
2024-10-20 16:48:51,848:INFO:Creating metrics dataframe
2024-10-20 16:48:51,886:INFO:Uploading results into container
2024-10-20 16:48:51,889:INFO:Uploading model into container now
2024-10-20 16:48:51,891:INFO:_master_model_container: 9
2024-10-20 16:48:51,891:INFO:_display_container: 2
2024-10-20 16:48:51,892:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-20 16:48:51,892:INFO:create_model() successfully completed......................................
2024-10-20 16:48:52,134:INFO:SubProcess create_model() end ==================================
2024-10-20 16:48:52,135:INFO:Creating metrics dataframe
2024-10-20 16:48:52,159:INFO:Initializing Gradient Boosting Classifier
2024-10-20 16:48:52,160:INFO:Total runtime is 5.200470872720083 minutes
2024-10-20 16:48:52,171:INFO:SubProcess create_model() called ==================================
2024-10-20 16:48:52,172:INFO:Initializing create_model()
2024-10-20 16:48:52,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:48:52,173:INFO:Checking exceptions
2024-10-20 16:48:52,173:INFO:Importing libraries
2024-10-20 16:48:52,174:INFO:Copying training dataset
2024-10-20 16:48:52,454:INFO:Defining folds
2024-10-20 16:48:52,454:INFO:Declaring metric variables
2024-10-20 16:48:52,462:INFO:Importing untrained model
2024-10-20 16:48:52,472:INFO:Gradient Boosting Classifier Imported successfully
2024-10-20 16:48:52,485:INFO:Starting cross validation
2024-10-20 16:48:52,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:51:23,122:INFO:Calculating mean and std
2024-10-20 16:51:23,124:INFO:Creating metrics dataframe
2024-10-20 16:51:23,129:INFO:Uploading results into container
2024-10-20 16:51:23,131:INFO:Uploading model into container now
2024-10-20 16:51:23,134:INFO:_master_model_container: 10
2024-10-20 16:51:23,134:INFO:_display_container: 2
2024-10-20 16:51:23,136:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-20 16:51:23,136:INFO:create_model() successfully completed......................................
2024-10-20 16:51:23,253:INFO:SubProcess create_model() end ==================================
2024-10-20 16:51:23,253:INFO:Creating metrics dataframe
2024-10-20 16:51:23,263:INFO:Initializing Linear Discriminant Analysis
2024-10-20 16:51:23,264:INFO:Total runtime is 7.718868251641592 minutes
2024-10-20 16:51:23,268:INFO:SubProcess create_model() called ==================================
2024-10-20 16:51:23,269:INFO:Initializing create_model()
2024-10-20 16:51:23,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:51:23,270:INFO:Checking exceptions
2024-10-20 16:51:23,270:INFO:Importing libraries
2024-10-20 16:51:23,270:INFO:Copying training dataset
2024-10-20 16:51:23,369:INFO:Defining folds
2024-10-20 16:51:23,369:INFO:Declaring metric variables
2024-10-20 16:51:23,380:INFO:Importing untrained model
2024-10-20 16:51:23,389:INFO:Linear Discriminant Analysis Imported successfully
2024-10-20 16:51:23,398:INFO:Starting cross validation
2024-10-20 16:51:23,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:51:28,983:INFO:Calculating mean and std
2024-10-20 16:51:28,986:INFO:Creating metrics dataframe
2024-10-20 16:51:28,998:INFO:Uploading results into container
2024-10-20 16:51:28,999:INFO:Uploading model into container now
2024-10-20 16:51:28,999:INFO:_master_model_container: 11
2024-10-20 16:51:28,999:INFO:_display_container: 2
2024-10-20 16:51:29,000:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-20 16:51:29,000:INFO:create_model() successfully completed......................................
2024-10-20 16:51:29,157:INFO:SubProcess create_model() end ==================================
2024-10-20 16:51:29,157:INFO:Creating metrics dataframe
2024-10-20 16:51:29,184:INFO:Initializing Extra Trees Classifier
2024-10-20 16:51:29,184:INFO:Total runtime is 7.817535483837128 minutes
2024-10-20 16:51:29,192:INFO:SubProcess create_model() called ==================================
2024-10-20 16:51:29,195:INFO:Initializing create_model()
2024-10-20 16:51:29,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:51:29,195:INFO:Checking exceptions
2024-10-20 16:51:29,195:INFO:Importing libraries
2024-10-20 16:51:29,195:INFO:Copying training dataset
2024-10-20 16:51:29,326:INFO:Defining folds
2024-10-20 16:51:29,326:INFO:Declaring metric variables
2024-10-20 16:51:29,336:INFO:Importing untrained model
2024-10-20 16:51:29,341:INFO:Extra Trees Classifier Imported successfully
2024-10-20 16:51:29,352:INFO:Starting cross validation
2024-10-20 16:51:29,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:52:57,213:INFO:Calculating mean and std
2024-10-20 16:52:57,216:INFO:Creating metrics dataframe
2024-10-20 16:52:57,220:INFO:Uploading results into container
2024-10-20 16:52:57,222:INFO:Uploading model into container now
2024-10-20 16:52:57,225:INFO:_master_model_container: 12
2024-10-20 16:52:57,225:INFO:_display_container: 2
2024-10-20 16:52:57,227:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-20 16:52:57,228:INFO:create_model() successfully completed......................................
2024-10-20 16:52:57,401:INFO:SubProcess create_model() end ==================================
2024-10-20 16:52:57,401:INFO:Creating metrics dataframe
2024-10-20 16:52:57,414:INFO:Initializing Light Gradient Boosting Machine
2024-10-20 16:52:57,414:INFO:Total runtime is 9.288035360972087 minutes
2024-10-20 16:52:57,421:INFO:SubProcess create_model() called ==================================
2024-10-20 16:52:57,422:INFO:Initializing create_model()
2024-10-20 16:52:57,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:52:57,422:INFO:Checking exceptions
2024-10-20 16:52:57,422:INFO:Importing libraries
2024-10-20 16:52:57,422:INFO:Copying training dataset
2024-10-20 16:52:57,545:INFO:Defining folds
2024-10-20 16:52:57,546:INFO:Declaring metric variables
2024-10-20 16:52:57,553:INFO:Importing untrained model
2024-10-20 16:52:57,564:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-20 16:52:57,579:INFO:Starting cross validation
2024-10-20 16:52:57,582:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:53:14,503:INFO:Calculating mean and std
2024-10-20 16:53:14,506:INFO:Creating metrics dataframe
2024-10-20 16:53:14,514:INFO:Uploading results into container
2024-10-20 16:53:14,516:INFO:Uploading model into container now
2024-10-20 16:53:14,517:INFO:_master_model_container: 13
2024-10-20 16:53:14,518:INFO:_display_container: 2
2024-10-20 16:53:14,518:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-20 16:53:14,519:INFO:create_model() successfully completed......................................
2024-10-20 16:53:14,698:INFO:SubProcess create_model() end ==================================
2024-10-20 16:53:14,698:INFO:Creating metrics dataframe
2024-10-20 16:53:14,718:INFO:Initializing Dummy Classifier
2024-10-20 16:53:14,718:INFO:Total runtime is 9.576429943243662 minutes
2024-10-20 16:53:14,725:INFO:SubProcess create_model() called ==================================
2024-10-20 16:53:14,726:INFO:Initializing create_model()
2024-10-20 16:53:14,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED8CE80D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:53:14,726:INFO:Checking exceptions
2024-10-20 16:53:14,726:INFO:Importing libraries
2024-10-20 16:53:14,726:INFO:Copying training dataset
2024-10-20 16:53:14,857:INFO:Defining folds
2024-10-20 16:53:14,857:INFO:Declaring metric variables
2024-10-20 16:53:14,866:INFO:Importing untrained model
2024-10-20 16:53:14,871:INFO:Dummy Classifier Imported successfully
2024-10-20 16:53:14,888:INFO:Starting cross validation
2024-10-20 16:53:14,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:53:16,581:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:16,651:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:16,797:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:16,803:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:18,219:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:18,379:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:18,467:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:18,472:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:19,423:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:19,507:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-20 16:53:19,537:INFO:Calculating mean and std
2024-10-20 16:53:19,540:INFO:Creating metrics dataframe
2024-10-20 16:53:19,548:INFO:Uploading results into container
2024-10-20 16:53:19,549:INFO:Uploading model into container now
2024-10-20 16:53:19,550:INFO:_master_model_container: 14
2024-10-20 16:53:19,550:INFO:_display_container: 2
2024-10-20 16:53:19,550:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-20 16:53:19,550:INFO:create_model() successfully completed......................................
2024-10-20 16:53:19,708:INFO:SubProcess create_model() end ==================================
2024-10-20 16:53:19,708:INFO:Creating metrics dataframe
2024-10-20 16:53:19,726:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-20 16:53:19,748:INFO:Initializing create_model()
2024-10-20 16:53:19,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:53:19,748:INFO:Checking exceptions
2024-10-20 16:53:19,754:INFO:Importing libraries
2024-10-20 16:53:19,754:INFO:Copying training dataset
2024-10-20 16:53:19,879:INFO:Defining folds
2024-10-20 16:53:19,879:INFO:Declaring metric variables
2024-10-20 16:53:19,879:INFO:Importing untrained model
2024-10-20 16:53:19,879:INFO:Declaring custom model
2024-10-20 16:53:19,880:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-20 16:53:19,882:INFO:Cross validation set to False
2024-10-20 16:53:19,882:INFO:Fitting Model
2024-10-20 16:53:20,623:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-20 16:53:20,636:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.011483 seconds.
2024-10-20 16:53:20,637:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-10-20 16:53:20,637:INFO:[LightGBM] [Info] Total Bins 1368
2024-10-20 16:53:20,638:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 14
2024-10-20 16:53:20,641:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-20 16:53:20,641:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-20 16:53:21,808:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-20 16:53:21,808:INFO:create_model() successfully completed......................................
2024-10-20 16:53:21,981:INFO:Creating Dashboard logs
2024-10-20 16:53:21,990:INFO:Model: Light Gradient Boosting Machine
2024-10-20 16:53:22,270:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-20 16:53:22,680:INFO:Initializing predict_model()
2024-10-20 16:53:22,683:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016EDBCA8180>)
2024-10-20 16:53:22,683:INFO:Checking exceptions
2024-10-20 16:53:22,683:INFO:Preloading libraries
2024-10-20 16:53:25,445:INFO:Creating Dashboard logs
2024-10-20 16:53:25,451:INFO:Model: Gradient Boosting Classifier
2024-10-20 16:53:25,569:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-20 16:53:26,377:INFO:Creating Dashboard logs
2024-10-20 16:53:26,384:INFO:Model: Random Forest Classifier
2024-10-20 16:53:26,506:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 16:53:27,252:INFO:Creating Dashboard logs
2024-10-20 16:53:27,256:INFO:Model: Ada Boost Classifier
2024-10-20 16:53:27,340:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-10-20 16:53:28,098:INFO:Creating Dashboard logs
2024-10-20 16:53:28,106:INFO:Model: Extra Trees Classifier
2024-10-20 16:53:28,241:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 16:53:29,020:INFO:Creating Dashboard logs
2024-10-20 16:53:29,025:INFO:Model: Linear Discriminant Analysis
2024-10-20 16:53:29,135:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-10-20 16:53:29,797:INFO:Creating Dashboard logs
2024-10-20 16:53:29,801:INFO:Model: Ridge Classifier
2024-10-20 16:53:29,880:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-20 16:53:30,685:INFO:Creating Dashboard logs
2024-10-20 16:53:30,689:INFO:Model: Decision Tree Classifier
2024-10-20 16:53:30,799:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-20 16:53:31,410:INFO:Creating Dashboard logs
2024-10-20 16:53:31,417:INFO:Model: Logistic Regression
2024-10-20 16:53:31,538:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-10-20 16:53:32,322:INFO:Creating Dashboard logs
2024-10-20 16:53:32,329:INFO:Model: Naive Bayes
2024-10-20 16:53:32,438:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-10-20 16:53:33,190:INFO:Creating Dashboard logs
2024-10-20 16:53:33,194:INFO:Model: Dummy Classifier
2024-10-20 16:53:33,274:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-10-20 16:53:33,957:INFO:Creating Dashboard logs
2024-10-20 16:53:33,962:INFO:Model: Quadratic Discriminant Analysis
2024-10-20 16:53:34,066:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-10-20 16:53:34,734:INFO:Creating Dashboard logs
2024-10-20 16:53:34,741:INFO:Model: K Neighbors Classifier
2024-10-20 16:53:34,816:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-20 16:53:35,575:INFO:Creating Dashboard logs
2024-10-20 16:53:35,581:INFO:Model: SVM - Linear Kernel
2024-10-20 16:53:35,701:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-20 16:53:36,494:INFO:_master_model_container: 14
2024-10-20 16:53:36,495:INFO:_display_container: 2
2024-10-20 16:53:36,495:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-20 16:53:36,496:INFO:compare_models() successfully completed......................................
2024-10-20 16:53:46,056:INFO:Initializing create_model()
2024-10-20 16:53:46,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 16:53:46,057:INFO:Checking exceptions
2024-10-20 16:53:46,085:INFO:Importing libraries
2024-10-20 16:53:46,085:INFO:Copying training dataset
2024-10-20 16:53:46,222:INFO:Defining folds
2024-10-20 16:53:46,222:INFO:Declaring metric variables
2024-10-20 16:53:46,226:INFO:Importing untrained model
2024-10-20 16:53:46,234:INFO:Random Forest Classifier Imported successfully
2024-10-20 16:53:46,242:INFO:Starting cross validation
2024-10-20 16:53:46,248:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 16:55:46,482:INFO:Calculating mean and std
2024-10-20 16:55:46,485:INFO:Creating metrics dataframe
2024-10-20 16:55:46,504:INFO:Finalizing model
2024-10-20 16:56:02,139:INFO:Creating Dashboard logs
2024-10-20 16:56:02,147:INFO:Model: Random Forest Classifier
2024-10-20 16:56:02,331:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 16:56:02,886:INFO:Initializing predict_model()
2024-10-20 16:56:02,886:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016EDBED0FE0>)
2024-10-20 16:56:02,886:INFO:Checking exceptions
2024-10-20 16:56:02,886:INFO:Preloading libraries
2024-10-20 16:56:08,208:INFO:Uploading results into container
2024-10-20 16:56:08,209:INFO:Uploading model into container now
2024-10-20 16:56:08,244:INFO:_master_model_container: 15
2024-10-20 16:56:08,245:INFO:_display_container: 3
2024-10-20 16:56:08,246:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 16:56:08,246:INFO:create_model() successfully completed......................................
2024-10-20 16:56:14,292:INFO:Initializing tune_model()
2024-10-20 16:56:14,292:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20], 'min_samples_split': [2]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-20 16:56:14,292:INFO:Checking exceptions
2024-10-20 16:56:14,375:INFO:Copying training dataset
2024-10-20 16:56:14,661:INFO:Checking base model
2024-10-20 16:56:14,661:INFO:Base model : Random Forest Classifier
2024-10-20 16:56:14,668:INFO:Declaring metric variables
2024-10-20 16:56:14,675:INFO:Defining Hyperparameters
2024-10-20 16:56:14,839:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20], 'actual_estimator__min_samples_split': [2]}
2024-10-20 16:56:14,839:INFO:Tuning with n_jobs=-1
2024-10-20 16:56:14,839:INFO:Initializing GridSearchCV
2024-10-20 16:59:23,173:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__min_samples_split': 2, 'actual_estimator__n_estimators': 100}
2024-10-20 16:59:23,175:INFO:Hyperparameter search completed
2024-10-20 16:59:23,175:INFO:SubProcess create_model() called ==================================
2024-10-20 16:59:23,177:INFO:Initializing create_model()
2024-10-20 16:59:23,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016ED916D890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2024-10-20 16:59:23,177:INFO:Checking exceptions
2024-10-20 16:59:23,177:INFO:Importing libraries
2024-10-20 16:59:23,178:INFO:Copying training dataset
2024-10-20 16:59:23,299:INFO:Defining folds
2024-10-20 16:59:23,299:INFO:Declaring metric variables
2024-10-20 16:59:23,307:INFO:Importing untrained model
2024-10-20 16:59:23,308:INFO:Declaring custom model
2024-10-20 16:59:23,319:INFO:Random Forest Classifier Imported successfully
2024-10-20 16:59:23,339:INFO:Starting cross validation
2024-10-20 16:59:23,341:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 17:00:37,137:INFO:Calculating mean and std
2024-10-20 17:00:37,140:INFO:Creating metrics dataframe
2024-10-20 17:00:37,154:INFO:Finalizing model
2024-10-20 17:00:46,290:INFO:Uploading results into container
2024-10-20 17:00:46,292:INFO:Uploading model into container now
2024-10-20 17:00:46,293:INFO:_master_model_container: 16
2024-10-20 17:00:46,293:INFO:_display_container: 4
2024-10-20 17:00:46,295:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 17:00:46,295:INFO:create_model() successfully completed......................................
2024-10-20 17:00:46,521:INFO:SubProcess create_model() end ==================================
2024-10-20 17:00:46,521:INFO:choose_better activated
2024-10-20 17:00:46,532:INFO:SubProcess create_model() called ==================================
2024-10-20 17:00:46,534:INFO:Initializing create_model()
2024-10-20 17:00:46,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 17:00:46,534:INFO:Checking exceptions
2024-10-20 17:00:46,538:INFO:Importing libraries
2024-10-20 17:00:46,539:INFO:Copying training dataset
2024-10-20 17:00:46,713:INFO:Defining folds
2024-10-20 17:00:46,713:INFO:Declaring metric variables
2024-10-20 17:00:46,714:INFO:Importing untrained model
2024-10-20 17:00:46,714:INFO:Declaring custom model
2024-10-20 17:00:46,717:INFO:Random Forest Classifier Imported successfully
2024-10-20 17:00:46,717:INFO:Starting cross validation
2024-10-20 17:00:46,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 17:02:47,681:INFO:Calculating mean and std
2024-10-20 17:02:47,683:INFO:Creating metrics dataframe
2024-10-20 17:02:47,686:INFO:Finalizing model
2024-10-20 17:03:03,187:INFO:Uploading results into container
2024-10-20 17:03:03,188:INFO:Uploading model into container now
2024-10-20 17:03:03,188:INFO:_master_model_container: 17
2024-10-20 17:03:03,189:INFO:_display_container: 5
2024-10-20 17:03:03,189:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 17:03:03,190:INFO:create_model() successfully completed......................................
2024-10-20 17:03:03,369:INFO:SubProcess create_model() end ==================================
2024-10-20 17:03:03,371:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8638
2024-10-20 17:03:03,372:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.865
2024-10-20 17:03:03,373:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-10-20 17:03:03,373:INFO:choose_better completed
2024-10-20 17:03:03,373:INFO:Creating Dashboard logs
2024-10-20 17:03:03,380:INFO:Model: Random Forest Classifier
2024-10-20 17:03:03,518:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 10, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 17:03:04,125:INFO:Initializing predict_model()
2024-10-20 17:03:04,125:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016EDBEC2B60>)
2024-10-20 17:03:04,126:INFO:Checking exceptions
2024-10-20 17:03:04,126:INFO:Preloading libraries
2024-10-20 17:03:06,031:INFO:_master_model_container: 17
2024-10-20 17:03:06,031:INFO:_display_container: 4
2024-10-20 17:03:06,032:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 17:03:06,033:INFO:tune_model() successfully completed......................................
2024-10-20 17:04:01,300:INFO:Initializing plot_model()
2024-10-20 17:04:01,301:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-10-20 17:04:01,302:INFO:Checking exceptions
2024-10-20 17:04:01,390:INFO:Preloading libraries
2024-10-20 17:04:01,428:INFO:Copying training dataset
2024-10-20 17:04:01,428:INFO:Plot type: confusion_matrix
2024-10-20 17:04:01,778:INFO:Fitting Model
2024-10-20 17:04:01,789:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-20 17:04:01,793:INFO:Scoring test/hold-out set
2024-10-20 17:04:02,697:INFO:Visual Rendered Successfully
2024-10-20 17:04:02,829:INFO:plot_model() successfully completed......................................
2024-10-20 17:04:12,352:INFO:Initializing evaluate_model()
2024-10-20 17:04:12,352:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-10-20 17:04:12,427:INFO:Initializing plot_model()
2024-10-20 17:04:12,427:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-20 17:04:12,427:INFO:Checking exceptions
2024-10-20 17:04:12,502:INFO:Preloading libraries
2024-10-20 17:04:12,524:INFO:Copying training dataset
2024-10-20 17:04:12,524:INFO:Plot type: pipeline
2024-10-20 17:04:12,772:INFO:Visual Rendered Successfully
2024-10-20 17:04:12,882:INFO:plot_model() successfully completed......................................
2024-10-20 17:04:20,869:INFO:Initializing finalize_model()
2024-10-20 17:04:20,869:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-10-20 17:04:20,871:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-20 17:04:20,917:INFO:Initializing create_model()
2024-10-20 17:04:20,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 17:04:20,917:INFO:Checking exceptions
2024-10-20 17:04:20,919:INFO:Importing libraries
2024-10-20 17:04:20,919:INFO:Copying training dataset
2024-10-20 17:04:20,925:INFO:Defining folds
2024-10-20 17:04:20,926:INFO:Declaring metric variables
2024-10-20 17:04:20,926:INFO:Importing untrained model
2024-10-20 17:04:20,926:INFO:Declaring custom model
2024-10-20 17:04:20,927:INFO:Random Forest Classifier Imported successfully
2024-10-20 17:04:20,928:INFO:Cross validation set to False
2024-10-20 17:04:20,928:INFO:Fitting Model
2024-10-20 17:04:34,812:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-20 17:04:34,812:INFO:create_model() successfully completed......................................
2024-10-20 17:04:34,977:INFO:Creating Dashboard logs
2024-10-20 17:04:34,979:INFO:Model: Random Forest Classifier
2024-10-20 17:04:35,083:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 10, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 17:04:35,977:INFO:_master_model_container: 17
2024-10-20 17:04:35,977:INFO:_display_container: 4
2024-10-20 17:04:35,999:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-20 17:04:35,999:INFO:finalize_model() successfully completed......................................
2024-10-20 17:05:33,705:INFO:Initializing predict_model()
2024-10-20 17:05:33,706:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ED892D410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016E828E31A0>)
2024-10-20 17:05:33,706:INFO:Checking exceptions
2024-10-20 17:05:33,706:INFO:Preloading libraries
2024-10-20 17:05:33,711:INFO:Set up data.
2024-10-20 17:05:34,024:INFO:Set up index.
2024-10-20 17:06:11,055:INFO:Initializing save_model()
2024-10-20 17:06:11,055:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=final_dt_model_customer_churn, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-20 17:06:11,055:INFO:Adding model into prep_pipe
2024-10-20 17:06:11,055:WARNING:Only Model saved as it was a pipeline.
2024-10-20 17:06:11,125:INFO:final_dt_model_customer_churn.pkl saved in current working directory
2024-10-20 17:06:11,149:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-20 17:06:11,150:INFO:save_model() successfully completed......................................
2024-10-20 17:06:11,285:INFO:Initializing load_model()
2024-10-20 17:06:11,286:INFO:load_model(model_name=final_dt_model_customer_churn, platform=None, authentication=None, verbose=True)
2024-10-20 18:02:33,807:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:486: UserWarning: X has feature names, but GradientBoostingClassifier was fitted without feature names
  warnings.warn(

2024-10-20 18:03:07,998:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:486: UserWarning: X has feature names, but GradientBoostingClassifier was fitted without feature names
  warnings.warn(

2024-10-20 18:03:40,125:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:486: UserWarning: X has feature names, but GradientBoostingClassifier was fitted without feature names
  warnings.warn(

2024-10-20 18:13:14,246:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:486: UserWarning: X has feature names, but GradientBoostingClassifier was fitted without feature names
  warnings.warn(

2024-10-20 18:22:52,355:INFO:PyCaret ClassificationExperiment
2024-10-20 18:22:52,355:INFO:Logging name: experiment_final
2024-10-20 18:22:52,355:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-20 18:22:52,356:INFO:version 3.3.2
2024-10-20 18:22:52,356:INFO:Initializing setup()
2024-10-20 18:22:52,356:INFO:self.USI: e7f5
2024-10-20 18:22:52,356:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'gpu_param', 'logging_param', 'exp_name_log', 'X_test', 'fix_imbalance', 'y', 'X', 'html_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y_train', 'data', 'seed', 'X_train', 'y_test', 'fold_groups_param', 'pipeline', 'USI', 'exp_id', 'log_plots_param', 'gpu_n_jobs_param', 'target_param', 'fold_shuffle_param', 'idx', 'memory'}
2024-10-20 18:22:52,356:INFO:Checking environment
2024-10-20 18:22:52,356:INFO:python_version: 3.11.8
2024-10-20 18:22:52,356:INFO:python_build: ('tags/v3.11.8:db85d51', 'Feb  6 2024 22:03:32')
2024-10-20 18:22:52,356:INFO:machine: AMD64
2024-10-20 18:22:52,357:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-20 18:22:52,362:INFO:Memory: svmem(total=17053163520, available=6621483008, percent=61.2, used=10431680512, free=6621483008)
2024-10-20 18:22:52,362:INFO:Physical Core: 2
2024-10-20 18:22:52,362:INFO:Logical Core: 4
2024-10-20 18:22:52,363:INFO:Checking libraries
2024-10-20 18:22:52,363:INFO:System:
2024-10-20 18:22:52,363:INFO:    python: 3.11.8 (tags/v3.11.8:db85d51, Feb  6 2024, 22:03:32) [MSC v.1937 64 bit (AMD64)]
2024-10-20 18:22:52,363:INFO:executable: c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\python.exe
2024-10-20 18:22:52,363:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-20 18:22:52,363:INFO:PyCaret required dependencies:
2024-10-20 18:22:52,365:INFO:                 pip: 24.0
2024-10-20 18:22:52,365:INFO:          setuptools: 65.5.0
2024-10-20 18:22:52,365:INFO:             pycaret: 3.3.2
2024-10-20 18:22:52,365:INFO:             IPython: 8.28.0
2024-10-20 18:22:52,365:INFO:          ipywidgets: 8.1.5
2024-10-20 18:22:52,365:INFO:                tqdm: 4.66.5
2024-10-20 18:22:52,365:INFO:               numpy: 1.26.4
2024-10-20 18:22:52,365:INFO:              pandas: 2.1.4
2024-10-20 18:22:52,366:INFO:              jinja2: 3.1.4
2024-10-20 18:22:52,366:INFO:               scipy: 1.11.4
2024-10-20 18:22:52,366:INFO:              joblib: 1.3.2
2024-10-20 18:22:52,366:INFO:             sklearn: 1.4.2
2024-10-20 18:22:52,366:INFO:                pyod: 2.0.2
2024-10-20 18:22:52,366:INFO:            imblearn: 0.12.4
2024-10-20 18:22:52,366:INFO:   category_encoders: 2.6.4
2024-10-20 18:22:52,366:INFO:            lightgbm: 4.5.0
2024-10-20 18:22:52,366:INFO:               numba: 0.60.0
2024-10-20 18:22:52,366:INFO:            requests: 2.32.3
2024-10-20 18:22:52,366:INFO:          matplotlib: 3.7.5
2024-10-20 18:22:52,366:INFO:          scikitplot: 0.3.7
2024-10-20 18:22:52,366:INFO:         yellowbrick: 1.5
2024-10-20 18:22:52,366:INFO:              plotly: 5.24.1
2024-10-20 18:22:52,366:INFO:    plotly-resampler: Not installed
2024-10-20 18:22:52,366:INFO:             kaleido: 0.2.1
2024-10-20 18:22:52,366:INFO:           schemdraw: 0.15
2024-10-20 18:22:52,366:INFO:         statsmodels: 0.14.4
2024-10-20 18:22:52,366:INFO:              sktime: 0.26.0
2024-10-20 18:22:52,366:INFO:               tbats: 1.1.3
2024-10-20 18:22:52,366:INFO:            pmdarima: 2.0.4
2024-10-20 18:22:52,366:INFO:              psutil: 6.1.0
2024-10-20 18:22:52,366:INFO:          markupsafe: 3.0.2
2024-10-20 18:22:52,366:INFO:             pickle5: Not installed
2024-10-20 18:22:52,367:INFO:         cloudpickle: 3.1.0
2024-10-20 18:22:52,367:INFO:         deprecation: 2.1.0
2024-10-20 18:22:52,367:INFO:              xxhash: 3.5.0
2024-10-20 18:22:52,367:INFO:           wurlitzer: Not installed
2024-10-20 18:22:52,367:INFO:PyCaret optional dependencies:
2024-10-20 18:22:52,367:INFO:                shap: 0.44.1
2024-10-20 18:22:52,367:INFO:           interpret: 0.6.4
2024-10-20 18:22:52,368:INFO:                umap: 0.5.6
2024-10-20 18:22:52,368:INFO:     ydata_profiling: 4.11.0
2024-10-20 18:22:52,368:INFO:  explainerdashboard: 0.4.7
2024-10-20 18:22:52,368:INFO:             autoviz: Not installed
2024-10-20 18:22:52,368:INFO:           fairlearn: 0.7.0
2024-10-20 18:22:52,368:INFO:          deepchecks: Not installed
2024-10-20 18:22:52,368:INFO:             xgboost: Not installed
2024-10-20 18:22:52,368:INFO:            catboost: Not installed
2024-10-20 18:22:52,368:INFO:              kmodes: Not installed
2024-10-20 18:22:52,368:INFO:             mlxtend: Not installed
2024-10-20 18:22:52,368:INFO:       statsforecast: Not installed
2024-10-20 18:22:52,368:INFO:        tune_sklearn: Not installed
2024-10-20 18:22:52,368:INFO:                 ray: Not installed
2024-10-20 18:22:52,368:INFO:            hyperopt: 0.2.7
2024-10-20 18:22:52,368:INFO:              optuna: 4.0.0
2024-10-20 18:22:52,368:INFO:               skopt: 0.10.2
2024-10-20 18:22:52,368:INFO:              mlflow: 2.17.0
2024-10-20 18:22:52,368:INFO:              gradio: Not installed
2024-10-20 18:22:52,368:INFO:             fastapi: 0.115.2
2024-10-20 18:22:52,368:INFO:             uvicorn: 0.32.0
2024-10-20 18:22:52,368:INFO:              m2cgen: Not installed
2024-10-20 18:22:52,368:INFO:           evidently: Not installed
2024-10-20 18:22:52,368:INFO:               fugue: Not installed
2024-10-20 18:22:52,368:INFO:           streamlit: Not installed
2024-10-20 18:22:52,369:INFO:             prophet: Not installed
2024-10-20 18:22:52,369:INFO:None
2024-10-20 18:22:52,369:INFO:Set up data.
2024-10-20 18:22:52,484:INFO:Set up folding strategy.
2024-10-20 18:22:52,485:INFO:Set up train/test split.
2024-10-20 18:22:52,624:INFO:Set up index.
2024-10-20 18:22:52,632:INFO:Assigning column types.
2024-10-20 18:22:52,672:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-20 18:22:52,750:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:22:52,755:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 18:22:52,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:52,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:52,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:22:52,906:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 18:22:52,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:52,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:52,956:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-20 18:22:53,039:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 18:22:53,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:53,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:53,168:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-20 18:22:53,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:53,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:53,219:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-20 18:22:53,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:53,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:53,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:53,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:53,479:INFO:Preparing preprocessing pipeline...
2024-10-20 18:22:53,486:INFO:Set up simple imputation.
2024-10-20 18:22:53,528:INFO:Set up encoding of ordinal features.
2024-10-20 18:22:53,546:INFO:Set up encoding of categorical features.
2024-10-20 18:22:54,576:INFO:Finished creating preprocessing pipeline.
2024-10-20 18:22:54,597:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 18:22:54,598:INFO:Creating final display dataframe.
2024-10-20 18:22:56,060:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Exited
2                   Target type            Binary
3           Original data shape      (165034, 14)
4        Transformed data shape      (165034, 14)
5   Transformed train set shape      (115523, 14)
6    Transformed test set shape       (49511, 14)
7               Ignore features                 2
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment      MlflowLogger
21              Experiment Name  experiment_final
22                          USI              e7f5
2024-10-20 18:22:56,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:56,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:56,364:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:56,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:22:56,368:INFO:Logging experiment in loggers
2024-10-20 18:22:56,663:INFO:SubProcess save_model() called ==================================
2024-10-20 18:22:56,704:INFO:Initializing save_model()
2024-10-20 18:22:56,705:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\PEDROV~1\AppData\Local\Temp\tmpkzcqnq8k\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-20 18:22:56,705:INFO:Adding model into prep_pipe
2024-10-20 18:22:56,705:WARNING:Only Model saved as it was a pipeline.
2024-10-20 18:22:56,713:INFO:C:\Users\PEDROV~1\AppData\Local\Temp\tmpkzcqnq8k\Transformation Pipeline.pkl saved in current working directory
2024-10-20 18:22:56,732:INFO:Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 18:22:56,732:INFO:save_model() successfully completed......................................
2024-10-20 18:22:57,116:INFO:SubProcess save_model() end ==================================
2024-10-20 18:22:57,246:INFO:setup() successfully completed in 4.05s...............
2024-10-20 18:23:04,435:INFO:Initializing compare_models()
2024-10-20 18:23:04,435:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ECB16A450>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016ECB16A450>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-20 18:23:04,435:INFO:Checking exceptions
2024-10-20 18:23:04,498:INFO:Preparing display monitor
2024-10-20 18:23:04,579:INFO:Initializing Logistic Regression
2024-10-20 18:23:04,579:INFO:Total runtime is 1.6689300537109375e-05 minutes
2024-10-20 18:23:04,591:INFO:SubProcess create_model() called ==================================
2024-10-20 18:23:04,591:INFO:Initializing create_model()
2024-10-20 18:23:04,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ECB16A450>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E82996F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:23:04,592:INFO:Checking exceptions
2024-10-20 18:23:04,592:INFO:Importing libraries
2024-10-20 18:23:04,592:INFO:Copying training dataset
2024-10-20 18:23:04,921:INFO:Defining folds
2024-10-20 18:23:04,921:INFO:Declaring metric variables
2024-10-20 18:23:04,928:INFO:Importing untrained model
2024-10-20 18:23:04,936:INFO:Logistic Regression Imported successfully
2024-10-20 18:23:04,951:INFO:Starting cross validation
2024-10-20 18:23:04,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:23:47,469:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:23:47,558:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:23:47,690:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:23:48,195:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:24:19,863:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:24:20,450:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:24:20,949:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:24:23,076:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:24:39,459:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:24:39,792:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-20 18:24:39,924:INFO:Calculating mean and std
2024-10-20 18:24:39,927:INFO:Creating metrics dataframe
2024-10-20 18:24:39,930:INFO:Uploading results into container
2024-10-20 18:24:39,930:INFO:Uploading model into container now
2024-10-20 18:24:39,931:INFO:_master_model_container: 1
2024-10-20 18:24:39,932:INFO:_display_container: 2
2024-10-20 18:24:39,934:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-20 18:24:39,934:INFO:create_model() successfully completed......................................
2024-10-20 18:24:40,052:INFO:SubProcess create_model() end ==================================
2024-10-20 18:24:40,052:INFO:Creating metrics dataframe
2024-10-20 18:24:40,062:INFO:Initializing K Neighbors Classifier
2024-10-20 18:24:40,062:INFO:Total runtime is 1.5913928985595702 minutes
2024-10-20 18:24:40,065:INFO:SubProcess create_model() called ==================================
2024-10-20 18:24:40,066:INFO:Initializing create_model()
2024-10-20 18:24:40,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ECB16A450>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E82996F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:24:40,066:INFO:Checking exceptions
2024-10-20 18:24:40,067:INFO:Importing libraries
2024-10-20 18:24:40,067:INFO:Copying training dataset
2024-10-20 18:24:40,135:INFO:Defining folds
2024-10-20 18:24:40,135:INFO:Declaring metric variables
2024-10-20 18:24:40,141:INFO:Importing untrained model
2024-10-20 18:24:40,149:INFO:K Neighbors Classifier Imported successfully
2024-10-20 18:24:40,160:INFO:Starting cross validation
2024-10-20 18:24:40,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:24:57,633:INFO:Calculating mean and std
2024-10-20 18:24:57,635:INFO:Creating metrics dataframe
2024-10-20 18:24:57,642:INFO:Uploading results into container
2024-10-20 18:24:57,642:INFO:Uploading model into container now
2024-10-20 18:24:57,643:INFO:_master_model_container: 2
2024-10-20 18:24:57,643:INFO:_display_container: 2
2024-10-20 18:24:57,644:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-20 18:24:57,645:INFO:create_model() successfully completed......................................
2024-10-20 18:24:57,823:INFO:SubProcess create_model() end ==================================
2024-10-20 18:24:57,824:INFO:Creating metrics dataframe
2024-10-20 18:24:57,834:INFO:Initializing Naive Bayes
2024-10-20 18:24:57,835:INFO:Total runtime is 1.8876168688138324 minutes
2024-10-20 18:24:57,842:INFO:SubProcess create_model() called ==================================
2024-10-20 18:24:57,842:INFO:Initializing create_model()
2024-10-20 18:24:57,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ECB16A450>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E82996F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:24:57,843:INFO:Checking exceptions
2024-10-20 18:24:57,843:INFO:Importing libraries
2024-10-20 18:24:57,843:INFO:Copying training dataset
2024-10-20 18:24:58,082:INFO:Defining folds
2024-10-20 18:24:58,083:INFO:Declaring metric variables
2024-10-20 18:24:58,094:INFO:Importing untrained model
2024-10-20 18:24:58,103:INFO:Naive Bayes Imported successfully
2024-10-20 18:24:58,121:INFO:Starting cross validation
2024-10-20 18:24:58,126:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:25:03,922:INFO:Calculating mean and std
2024-10-20 18:25:03,928:INFO:Creating metrics dataframe
2024-10-20 18:25:03,944:INFO:Uploading results into container
2024-10-20 18:25:03,946:INFO:Uploading model into container now
2024-10-20 18:25:03,948:INFO:_master_model_container: 3
2024-10-20 18:25:03,949:INFO:_display_container: 2
2024-10-20 18:25:03,950:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-20 18:25:03,950:INFO:create_model() successfully completed......................................
2024-10-20 18:25:04,107:INFO:SubProcess create_model() end ==================================
2024-10-20 18:25:04,107:INFO:Creating metrics dataframe
2024-10-20 18:25:04,121:INFO:Initializing Decision Tree Classifier
2024-10-20 18:25:04,121:INFO:Total runtime is 1.992373740673065 minutes
2024-10-20 18:25:04,127:INFO:SubProcess create_model() called ==================================
2024-10-20 18:25:04,127:INFO:Initializing create_model()
2024-10-20 18:25:04,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016ECB16A450>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E82996F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:25:04,128:INFO:Checking exceptions
2024-10-20 18:25:04,128:INFO:Importing libraries
2024-10-20 18:25:04,128:INFO:Copying training dataset
2024-10-20 18:25:04,296:INFO:Defining folds
2024-10-20 18:25:04,297:INFO:Declaring metric variables
2024-10-20 18:25:04,308:INFO:Importing untrained model
2024-10-20 18:25:04,314:INFO:Decision Tree Classifier Imported successfully
2024-10-20 18:25:04,332:INFO:Starting cross validation
2024-10-20 18:25:04,334:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:25:47,675:INFO:PyCaret RegressionExperiment
2024-10-20 18:25:47,675:INFO:Logging name: experiment_final
2024-10-20 18:25:47,676:INFO:ML Usecase: MLUsecase.REGRESSION
2024-10-20 18:25:47,676:INFO:version 3.3.2
2024-10-20 18:25:47,676:INFO:Initializing setup()
2024-10-20 18:25:47,676:INFO:self.USI: 86c6
2024-10-20 18:25:47,676:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'transform_target_param', 'gpu_param', 'logging_param', 'exp_name_log', 'X_test', 'y', 'X', 'html_param', 'fold_generator', '_ml_usecase', 'y_train', 'data', 'seed', 'X_train', 'y_test', 'fold_groups_param', 'pipeline', 'USI', 'exp_id', 'log_plots_param', 'gpu_n_jobs_param', 'target_param', 'fold_shuffle_param', 'idx', 'memory'}
2024-10-20 18:25:47,676:INFO:Checking environment
2024-10-20 18:25:47,676:INFO:python_version: 3.11.8
2024-10-20 18:25:47,676:INFO:python_build: ('tags/v3.11.8:db85d51', 'Feb  6 2024 22:03:32')
2024-10-20 18:25:47,676:INFO:machine: AMD64
2024-10-20 18:25:47,676:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-20 18:25:47,679:INFO:Memory: svmem(total=17053163520, available=6484008960, percent=62.0, used=10569154560, free=6484008960)
2024-10-20 18:25:47,679:INFO:Physical Core: 2
2024-10-20 18:25:47,680:INFO:Logical Core: 4
2024-10-20 18:25:47,680:INFO:Checking libraries
2024-10-20 18:25:47,680:INFO:System:
2024-10-20 18:25:47,680:INFO:    python: 3.11.8 (tags/v3.11.8:db85d51, Feb  6 2024, 22:03:32) [MSC v.1937 64 bit (AMD64)]
2024-10-20 18:25:47,680:INFO:executable: c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\python.exe
2024-10-20 18:25:47,680:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-20 18:25:47,680:INFO:PyCaret required dependencies:
2024-10-20 18:25:47,680:INFO:                 pip: 24.0
2024-10-20 18:25:47,680:INFO:          setuptools: 65.5.0
2024-10-20 18:25:47,680:INFO:             pycaret: 3.3.2
2024-10-20 18:25:47,680:INFO:             IPython: 8.28.0
2024-10-20 18:25:47,680:INFO:          ipywidgets: 8.1.5
2024-10-20 18:25:47,680:INFO:                tqdm: 4.66.5
2024-10-20 18:25:47,680:INFO:               numpy: 1.26.4
2024-10-20 18:25:47,680:INFO:              pandas: 2.1.4
2024-10-20 18:25:47,681:INFO:              jinja2: 3.1.4
2024-10-20 18:25:47,681:INFO:               scipy: 1.11.4
2024-10-20 18:25:47,681:INFO:              joblib: 1.3.2
2024-10-20 18:25:47,681:INFO:             sklearn: 1.4.2
2024-10-20 18:25:47,681:INFO:                pyod: 2.0.2
2024-10-20 18:25:47,681:INFO:            imblearn: 0.12.4
2024-10-20 18:25:47,681:INFO:   category_encoders: 2.6.4
2024-10-20 18:25:47,681:INFO:            lightgbm: 4.5.0
2024-10-20 18:25:47,681:INFO:               numba: 0.60.0
2024-10-20 18:25:47,681:INFO:            requests: 2.32.3
2024-10-20 18:25:47,681:INFO:          matplotlib: 3.7.5
2024-10-20 18:25:47,681:INFO:          scikitplot: 0.3.7
2024-10-20 18:25:47,681:INFO:         yellowbrick: 1.5
2024-10-20 18:25:47,681:INFO:              plotly: 5.24.1
2024-10-20 18:25:47,682:INFO:    plotly-resampler: Not installed
2024-10-20 18:25:47,682:INFO:             kaleido: 0.2.1
2024-10-20 18:25:47,682:INFO:           schemdraw: 0.15
2024-10-20 18:25:47,682:INFO:         statsmodels: 0.14.4
2024-10-20 18:25:47,682:INFO:              sktime: 0.26.0
2024-10-20 18:25:47,682:INFO:               tbats: 1.1.3
2024-10-20 18:25:47,682:INFO:            pmdarima: 2.0.4
2024-10-20 18:25:47,682:INFO:              psutil: 6.1.0
2024-10-20 18:25:47,682:INFO:          markupsafe: 3.0.2
2024-10-20 18:25:47,682:INFO:             pickle5: Not installed
2024-10-20 18:25:47,682:INFO:         cloudpickle: 3.1.0
2024-10-20 18:25:47,682:INFO:         deprecation: 2.1.0
2024-10-20 18:25:47,682:INFO:              xxhash: 3.5.0
2024-10-20 18:25:47,682:INFO:           wurlitzer: Not installed
2024-10-20 18:25:47,682:INFO:PyCaret optional dependencies:
2024-10-20 18:25:47,682:INFO:                shap: 0.44.1
2024-10-20 18:25:47,682:INFO:           interpret: 0.6.4
2024-10-20 18:25:47,682:INFO:                umap: 0.5.6
2024-10-20 18:25:47,682:INFO:     ydata_profiling: 4.11.0
2024-10-20 18:25:47,682:INFO:  explainerdashboard: 0.4.7
2024-10-20 18:25:47,682:INFO:             autoviz: Not installed
2024-10-20 18:25:47,682:INFO:           fairlearn: 0.7.0
2024-10-20 18:25:47,683:INFO:          deepchecks: Not installed
2024-10-20 18:25:47,683:INFO:             xgboost: Not installed
2024-10-20 18:25:47,683:INFO:            catboost: Not installed
2024-10-20 18:25:47,683:INFO:              kmodes: Not installed
2024-10-20 18:25:47,683:INFO:             mlxtend: Not installed
2024-10-20 18:25:47,683:INFO:       statsforecast: Not installed
2024-10-20 18:25:47,683:INFO:        tune_sklearn: Not installed
2024-10-20 18:25:47,683:INFO:                 ray: Not installed
2024-10-20 18:25:47,683:INFO:            hyperopt: 0.2.7
2024-10-20 18:25:47,683:INFO:              optuna: 4.0.0
2024-10-20 18:25:47,683:INFO:               skopt: 0.10.2
2024-10-20 18:25:47,683:INFO:              mlflow: 2.17.0
2024-10-20 18:25:47,683:INFO:              gradio: Not installed
2024-10-20 18:25:47,683:INFO:             fastapi: 0.115.2
2024-10-20 18:25:47,683:INFO:             uvicorn: 0.32.0
2024-10-20 18:25:47,683:INFO:              m2cgen: Not installed
2024-10-20 18:25:47,683:INFO:           evidently: Not installed
2024-10-20 18:25:47,683:INFO:               fugue: Not installed
2024-10-20 18:25:47,683:INFO:           streamlit: Not installed
2024-10-20 18:25:47,683:INFO:             prophet: Not installed
2024-10-20 18:25:47,683:INFO:None
2024-10-20 18:25:47,683:INFO:Set up data.
2024-10-20 18:25:47,787:INFO:Set up folding strategy.
2024-10-20 18:25:47,787:INFO:Set up train/test split.
2024-10-20 18:25:47,859:INFO:Set up index.
2024-10-20 18:25:47,864:INFO:Assigning column types.
2024-10-20 18:25:47,911:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-20 18:25:47,912:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-20 18:25:47,918:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-20 18:25:47,926:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,061:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,132:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:48,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:48,134:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,146:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,152:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,389:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,530:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:48,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:48,532:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-10-20 18:25:48,541:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,546:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,710:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:48,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:48,813:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,819:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-20 18:25:48,980:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:49,065:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:49,065:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-10-20 18:25:49,078:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,218:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,296:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:49,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:49,312:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,433:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:49,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:49,529:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-10-20 18:25:49,791:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,855:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:25:49,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:49,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:50,004:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:50,061:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-20 18:25:50,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:50,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:50,062:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-20 18:25:50,192:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:50,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:50,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:50,386:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-20 18:25:50,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:50,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:50,447:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-10-20 18:25:50,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:50,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:51,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:51,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:51,061:INFO:Preparing preprocessing pipeline...
2024-10-20 18:25:51,061:INFO:Set up simple imputation.
2024-10-20 18:25:51,099:INFO:Set up encoding of ordinal features.
2024-10-20 18:25:51,116:INFO:Set up encoding of categorical features.
2024-10-20 18:25:52,227:INFO:Finished creating preprocessing pipeline.
2024-10-20 18:25:52,253:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 18:25:52,253:INFO:Creating final display dataframe.
2024-10-20 18:25:53,793:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Exited
2                   Target type        Regression
3           Original data shape      (165034, 14)
4        Transformed data shape      (165034, 14)
5   Transformed train set shape      (115523, 14)
6    Transformed test set shape       (49511, 14)
7               Ignore features                 2
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment      MlflowLogger
21              Experiment Name  experiment_final
22                          USI              86c6
2024-10-20 18:25:54,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:54,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:54,285:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:54,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-20 18:25:54,287:INFO:Logging experiment in loggers
2024-10-20 18:25:54,572:INFO:SubProcess save_model() called ==================================
2024-10-20 18:25:54,619:INFO:Initializing save_model()
2024-10-20 18:25:54,620:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\PEDROV~1\AppData\Local\Temp\tmp9p9vsbvd\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-10-20 18:25:54,620:INFO:Adding model into prep_pipe
2024-10-20 18:25:54,620:WARNING:Only Model saved as it was a pipeline.
2024-10-20 18:25:54,629:INFO:C:\Users\PEDROV~1\AppData\Local\Temp\tmp9p9vsbvd\Transformation Pipeline.pkl saved in current working directory
2024-10-20 18:25:54,652:INFO:Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-20 18:25:54,652:INFO:save_model() successfully completed......................................
2024-10-20 18:25:54,802:INFO:SubProcess save_model() end ==================================
2024-10-20 18:25:54,891:INFO:setup() successfully completed in 6.62s...............
2024-10-20 18:26:02,069:INFO:Initializing compare_models()
2024-10-20 18:26:02,069:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-10-20 18:26:02,069:INFO:Checking exceptions
2024-10-20 18:26:02,116:INFO:Preparing display monitor
2024-10-20 18:26:02,158:INFO:Initializing Linear Regression
2024-10-20 18:26:02,158:INFO:Total runtime is 1.6677379608154298e-05 minutes
2024-10-20 18:26:02,165:INFO:SubProcess create_model() called ==================================
2024-10-20 18:26:02,166:INFO:Initializing create_model()
2024-10-20 18:26:02,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:26:02,166:INFO:Checking exceptions
2024-10-20 18:26:02,166:INFO:Importing libraries
2024-10-20 18:26:02,166:INFO:Copying training dataset
2024-10-20 18:26:02,333:INFO:Defining folds
2024-10-20 18:26:02,333:INFO:Declaring metric variables
2024-10-20 18:26:02,336:INFO:Importing untrained model
2024-10-20 18:26:02,345:INFO:Linear Regression Imported successfully
2024-10-20 18:26:02,361:INFO:Starting cross validation
2024-10-20 18:26:02,365:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:26:20,245:INFO:Calculating mean and std
2024-10-20 18:26:20,246:INFO:Creating metrics dataframe
2024-10-20 18:26:20,248:INFO:Uploading results into container
2024-10-20 18:26:20,248:INFO:Uploading model into container now
2024-10-20 18:26:20,248:INFO:_master_model_container: 1
2024-10-20 18:26:20,248:INFO:_display_container: 2
2024-10-20 18:26:20,249:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2024-10-20 18:26:20,249:INFO:create_model() successfully completed......................................
2024-10-20 18:26:20,393:INFO:SubProcess create_model() end ==================================
2024-10-20 18:26:20,393:INFO:Creating metrics dataframe
2024-10-20 18:26:20,401:INFO:Initializing Lasso Regression
2024-10-20 18:26:20,401:INFO:Total runtime is 0.30406989256540934 minutes
2024-10-20 18:26:20,413:INFO:SubProcess create_model() called ==================================
2024-10-20 18:26:20,413:INFO:Initializing create_model()
2024-10-20 18:26:20,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:26:20,414:INFO:Checking exceptions
2024-10-20 18:26:20,414:INFO:Importing libraries
2024-10-20 18:26:20,414:INFO:Copying training dataset
2024-10-20 18:26:20,492:INFO:Defining folds
2024-10-20 18:26:20,493:INFO:Declaring metric variables
2024-10-20 18:26:20,498:INFO:Importing untrained model
2024-10-20 18:26:20,503:INFO:Lasso Regression Imported successfully
2024-10-20 18:26:20,517:INFO:Starting cross validation
2024-10-20 18:26:20,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:26:25,324:INFO:Calculating mean and std
2024-10-20 18:26:25,331:INFO:Creating metrics dataframe
2024-10-20 18:26:25,354:INFO:Uploading results into container
2024-10-20 18:26:25,356:INFO:Uploading model into container now
2024-10-20 18:26:25,356:INFO:_master_model_container: 2
2024-10-20 18:26:25,356:INFO:_display_container: 2
2024-10-20 18:26:25,357:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2024-10-20 18:26:25,357:INFO:create_model() successfully completed......................................
2024-10-20 18:26:25,502:INFO:SubProcess create_model() end ==================================
2024-10-20 18:26:25,502:INFO:Creating metrics dataframe
2024-10-20 18:26:25,510:INFO:Initializing Ridge Regression
2024-10-20 18:26:25,510:INFO:Total runtime is 0.38921825488408407 minutes
2024-10-20 18:26:25,515:INFO:SubProcess create_model() called ==================================
2024-10-20 18:26:25,516:INFO:Initializing create_model()
2024-10-20 18:26:25,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:26:25,518:INFO:Checking exceptions
2024-10-20 18:26:25,519:INFO:Importing libraries
2024-10-20 18:26:25,519:INFO:Copying training dataset
2024-10-20 18:26:25,593:INFO:Defining folds
2024-10-20 18:26:25,594:INFO:Declaring metric variables
2024-10-20 18:26:25,598:INFO:Importing untrained model
2024-10-20 18:26:25,609:INFO:Ridge Regression Imported successfully
2024-10-20 18:26:25,622:INFO:Starting cross validation
2024-10-20 18:26:25,626:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:26:30,247:INFO:Calculating mean and std
2024-10-20 18:26:30,249:INFO:Creating metrics dataframe
2024-10-20 18:26:30,255:INFO:Uploading results into container
2024-10-20 18:26:30,256:INFO:Uploading model into container now
2024-10-20 18:26:30,257:INFO:_master_model_container: 3
2024-10-20 18:26:30,257:INFO:_display_container: 2
2024-10-20 18:26:30,258:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2024-10-20 18:26:30,258:INFO:create_model() successfully completed......................................
2024-10-20 18:26:30,449:INFO:SubProcess create_model() end ==================================
2024-10-20 18:26:30,449:INFO:Creating metrics dataframe
2024-10-20 18:26:30,467:INFO:Initializing Elastic Net
2024-10-20 18:26:30,468:INFO:Total runtime is 0.47184466520945234 minutes
2024-10-20 18:26:30,475:INFO:SubProcess create_model() called ==================================
2024-10-20 18:26:30,476:INFO:Initializing create_model()
2024-10-20 18:26:30,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:26:30,477:INFO:Checking exceptions
2024-10-20 18:26:30,477:INFO:Importing libraries
2024-10-20 18:26:30,477:INFO:Copying training dataset
2024-10-20 18:26:30,622:INFO:Defining folds
2024-10-20 18:26:30,622:INFO:Declaring metric variables
2024-10-20 18:26:30,632:INFO:Importing untrained model
2024-10-20 18:26:30,643:INFO:Elastic Net Imported successfully
2024-10-20 18:26:30,660:INFO:Starting cross validation
2024-10-20 18:26:30,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:26:35,582:INFO:Calculating mean and std
2024-10-20 18:26:35,585:INFO:Creating metrics dataframe
2024-10-20 18:26:35,593:INFO:Uploading results into container
2024-10-20 18:26:35,595:INFO:Uploading model into container now
2024-10-20 18:26:35,596:INFO:_master_model_container: 4
2024-10-20 18:26:35,596:INFO:_display_container: 2
2024-10-20 18:26:35,597:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2024-10-20 18:26:35,597:INFO:create_model() successfully completed......................................
2024-10-20 18:26:35,763:INFO:SubProcess create_model() end ==================================
2024-10-20 18:26:35,764:INFO:Creating metrics dataframe
2024-10-20 18:26:35,771:INFO:Initializing Least Angle Regression
2024-10-20 18:26:35,771:INFO:Total runtime is 0.5602320909500123 minutes
2024-10-20 18:26:35,779:INFO:SubProcess create_model() called ==================================
2024-10-20 18:26:35,779:INFO:Initializing create_model()
2024-10-20 18:26:35,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:26:35,779:INFO:Checking exceptions
2024-10-20 18:26:35,780:INFO:Importing libraries
2024-10-20 18:26:35,780:INFO:Copying training dataset
2024-10-20 18:26:35,860:INFO:Defining folds
2024-10-20 18:26:35,860:INFO:Declaring metric variables
2024-10-20 18:26:35,866:INFO:Importing untrained model
2024-10-20 18:26:35,872:INFO:Least Angle Regression Imported successfully
2024-10-20 18:26:35,884:INFO:Starting cross validation
2024-10-20 18:26:35,888:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:26:40,605:INFO:Calculating mean and std
2024-10-20 18:26:40,606:INFO:Creating metrics dataframe
2024-10-20 18:26:40,608:INFO:Uploading results into container
2024-10-20 18:26:40,608:INFO:Uploading model into container now
2024-10-20 18:26:40,609:INFO:_master_model_container: 5
2024-10-20 18:26:40,609:INFO:_display_container: 2
2024-10-20 18:26:40,609:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, precompute='auto', random_state=123,
     verbose=False)
2024-10-20 18:26:40,610:INFO:create_model() successfully completed......................................
2024-10-20 18:26:40,772:INFO:SubProcess create_model() end ==================================
2024-10-20 18:26:40,772:INFO:Creating metrics dataframe
2024-10-20 18:26:40,789:INFO:Initializing Lasso Least Angle Regression
2024-10-20 18:26:40,790:INFO:Total runtime is 0.6438788851102194 minutes
2024-10-20 18:26:40,795:INFO:SubProcess create_model() called ==================================
2024-10-20 18:26:40,796:INFO:Initializing create_model()
2024-10-20 18:26:40,796:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:26:40,796:INFO:Checking exceptions
2024-10-20 18:26:40,796:INFO:Importing libraries
2024-10-20 18:26:40,796:INFO:Copying training dataset
2024-10-20 18:26:40,893:INFO:Defining folds
2024-10-20 18:26:40,893:INFO:Declaring metric variables
2024-10-20 18:26:40,900:INFO:Importing untrained model
2024-10-20 18:26:40,912:INFO:Lasso Least Angle Regression Imported successfully
2024-10-20 18:26:40,929:INFO:Starting cross validation
2024-10-20 18:26:40,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:26:45,596:INFO:Calculating mean and std
2024-10-20 18:26:45,600:INFO:Creating metrics dataframe
2024-10-20 18:26:45,606:INFO:Uploading results into container
2024-10-20 18:26:45,608:INFO:Uploading model into container now
2024-10-20 18:26:45,609:INFO:_master_model_container: 6
2024-10-20 18:26:45,609:INFO:_display_container: 2
2024-10-20 18:26:45,610:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, positive=False,
          precompute='auto', random_state=123, verbose=False)
2024-10-20 18:26:45,610:INFO:create_model() successfully completed......................................
2024-10-20 18:26:45,813:INFO:SubProcess create_model() end ==================================
2024-10-20 18:26:45,813:INFO:Creating metrics dataframe
2024-10-20 18:26:45,823:INFO:Initializing Orthogonal Matching Pursuit
2024-10-20 18:26:45,824:INFO:Total runtime is 0.7277649005254111 minutes
2024-10-20 18:26:45,828:INFO:SubProcess create_model() called ==================================
2024-10-20 18:26:45,829:INFO:Initializing create_model()
2024-10-20 18:26:45,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:26:45,829:INFO:Checking exceptions
2024-10-20 18:26:45,829:INFO:Importing libraries
2024-10-20 18:26:45,829:INFO:Copying training dataset
2024-10-20 18:26:45,909:INFO:Defining folds
2024-10-20 18:26:45,909:INFO:Declaring metric variables
2024-10-20 18:26:45,918:INFO:Importing untrained model
2024-10-20 18:26:45,924:INFO:Orthogonal Matching Pursuit Imported successfully
2024-10-20 18:26:45,938:INFO:Starting cross validation
2024-10-20 18:26:45,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:26:50,595:INFO:Calculating mean and std
2024-10-20 18:26:50,597:INFO:Creating metrics dataframe
2024-10-20 18:26:50,606:INFO:Uploading results into container
2024-10-20 18:26:50,607:INFO:Uploading model into container now
2024-10-20 18:26:50,607:INFO:_master_model_container: 7
2024-10-20 18:26:50,607:INFO:_display_container: 2
2024-10-20 18:26:50,608:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          precompute='auto', tol=None)
2024-10-20 18:26:50,608:INFO:create_model() successfully completed......................................
2024-10-20 18:26:50,777:INFO:SubProcess create_model() end ==================================
2024-10-20 18:26:50,778:INFO:Creating metrics dataframe
2024-10-20 18:26:50,791:INFO:Initializing Bayesian Ridge
2024-10-20 18:26:50,792:INFO:Total runtime is 0.8105832537015281 minutes
2024-10-20 18:26:50,799:INFO:SubProcess create_model() called ==================================
2024-10-20 18:26:50,800:INFO:Initializing create_model()
2024-10-20 18:26:50,800:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:26:50,800:INFO:Checking exceptions
2024-10-20 18:26:50,801:INFO:Importing libraries
2024-10-20 18:26:50,801:INFO:Copying training dataset
2024-10-20 18:26:50,898:INFO:Defining folds
2024-10-20 18:26:50,898:INFO:Declaring metric variables
2024-10-20 18:26:50,905:INFO:Importing untrained model
2024-10-20 18:26:50,914:INFO:Bayesian Ridge Imported successfully
2024-10-20 18:26:50,929:INFO:Starting cross validation
2024-10-20 18:26:50,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:26:56,639:INFO:Calculating mean and std
2024-10-20 18:26:56,640:INFO:Creating metrics dataframe
2024-10-20 18:26:56,642:INFO:Uploading results into container
2024-10-20 18:26:56,643:INFO:Uploading model into container now
2024-10-20 18:26:56,644:INFO:_master_model_container: 8
2024-10-20 18:26:56,644:INFO:_display_container: 2
2024-10-20 18:26:56,645:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, max_iter=None,
              n_iter='deprecated', tol=0.001, verbose=False)
2024-10-20 18:26:56,645:INFO:create_model() successfully completed......................................
2024-10-20 18:26:56,800:INFO:SubProcess create_model() end ==================================
2024-10-20 18:26:56,800:INFO:Creating metrics dataframe
2024-10-20 18:26:56,811:INFO:Initializing Passive Aggressive Regressor
2024-10-20 18:26:56,811:INFO:Total runtime is 0.910898530483246 minutes
2024-10-20 18:26:56,815:INFO:SubProcess create_model() called ==================================
2024-10-20 18:26:56,816:INFO:Initializing create_model()
2024-10-20 18:26:56,816:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:26:56,816:INFO:Checking exceptions
2024-10-20 18:26:56,816:INFO:Importing libraries
2024-10-20 18:26:56,816:INFO:Copying training dataset
2024-10-20 18:26:56,897:INFO:Defining folds
2024-10-20 18:26:56,897:INFO:Declaring metric variables
2024-10-20 18:26:56,901:INFO:Importing untrained model
2024-10-20 18:26:56,914:INFO:Passive Aggressive Regressor Imported successfully
2024-10-20 18:26:56,926:INFO:Starting cross validation
2024-10-20 18:26:56,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:27:03,207:INFO:Calculating mean and std
2024-10-20 18:27:03,209:INFO:Creating metrics dataframe
2024-10-20 18:27:03,216:INFO:Uploading results into container
2024-10-20 18:27:03,217:INFO:Uploading model into container now
2024-10-20 18:27:03,217:INFO:_master_model_container: 9
2024-10-20 18:27:03,217:INFO:_display_container: 2
2024-10-20 18:27:03,218:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-20 18:27:03,218:INFO:create_model() successfully completed......................................
2024-10-20 18:27:03,367:INFO:SubProcess create_model() end ==================================
2024-10-20 18:27:03,368:INFO:Creating metrics dataframe
2024-10-20 18:27:03,377:INFO:Initializing Huber Regressor
2024-10-20 18:27:03,377:INFO:Total runtime is 1.0203342000643414 minutes
2024-10-20 18:27:03,382:INFO:SubProcess create_model() called ==================================
2024-10-20 18:27:03,383:INFO:Initializing create_model()
2024-10-20 18:27:03,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:27:03,383:INFO:Checking exceptions
2024-10-20 18:27:03,383:INFO:Importing libraries
2024-10-20 18:27:03,384:INFO:Copying training dataset
2024-10-20 18:27:03,507:INFO:Defining folds
2024-10-20 18:27:03,507:INFO:Declaring metric variables
2024-10-20 18:27:03,516:INFO:Importing untrained model
2024-10-20 18:27:03,525:INFO:Huber Regressor Imported successfully
2024-10-20 18:27:03,540:INFO:Starting cross validation
2024-10-20 18:27:03,544:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:27:13,473:INFO:Calculating mean and std
2024-10-20 18:27:13,480:INFO:Creating metrics dataframe
2024-10-20 18:27:13,499:INFO:Uploading results into container
2024-10-20 18:27:13,501:INFO:Uploading model into container now
2024-10-20 18:27:13,507:INFO:_master_model_container: 10
2024-10-20 18:27:13,507:INFO:_display_container: 2
2024-10-20 18:27:13,508:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2024-10-20 18:27:13,508:INFO:create_model() successfully completed......................................
2024-10-20 18:27:13,654:INFO:SubProcess create_model() end ==================================
2024-10-20 18:27:13,655:INFO:Creating metrics dataframe
2024-10-20 18:27:13,665:INFO:Initializing K Neighbors Regressor
2024-10-20 18:27:13,665:INFO:Total runtime is 1.1917928775151572 minutes
2024-10-20 18:27:13,669:INFO:SubProcess create_model() called ==================================
2024-10-20 18:27:13,671:INFO:Initializing create_model()
2024-10-20 18:27:13,672:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:27:13,672:INFO:Checking exceptions
2024-10-20 18:27:13,672:INFO:Importing libraries
2024-10-20 18:27:13,672:INFO:Copying training dataset
2024-10-20 18:27:13,764:INFO:Defining folds
2024-10-20 18:27:13,764:INFO:Declaring metric variables
2024-10-20 18:27:13,768:INFO:Importing untrained model
2024-10-20 18:27:13,780:INFO:K Neighbors Regressor Imported successfully
2024-10-20 18:27:13,794:INFO:Starting cross validation
2024-10-20 18:27:13,799:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:27:24,031:INFO:Calculating mean and std
2024-10-20 18:27:24,033:INFO:Creating metrics dataframe
2024-10-20 18:27:24,038:INFO:Uploading results into container
2024-10-20 18:27:24,039:INFO:Uploading model into container now
2024-10-20 18:27:24,040:INFO:_master_model_container: 11
2024-10-20 18:27:24,041:INFO:_display_container: 2
2024-10-20 18:27:24,042:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2024-10-20 18:27:24,044:INFO:create_model() successfully completed......................................
2024-10-20 18:27:24,190:INFO:SubProcess create_model() end ==================================
2024-10-20 18:27:24,190:INFO:Creating metrics dataframe
2024-10-20 18:27:24,202:INFO:Initializing Decision Tree Regressor
2024-10-20 18:27:24,202:INFO:Total runtime is 1.3674206654230754 minutes
2024-10-20 18:27:24,209:INFO:SubProcess create_model() called ==================================
2024-10-20 18:27:24,210:INFO:Initializing create_model()
2024-10-20 18:27:24,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:27:24,211:INFO:Checking exceptions
2024-10-20 18:27:24,211:INFO:Importing libraries
2024-10-20 18:27:24,211:INFO:Copying training dataset
2024-10-20 18:27:24,380:INFO:Defining folds
2024-10-20 18:27:24,380:INFO:Declaring metric variables
2024-10-20 18:27:24,388:INFO:Importing untrained model
2024-10-20 18:27:24,399:INFO:Decision Tree Regressor Imported successfully
2024-10-20 18:27:24,415:INFO:Starting cross validation
2024-10-20 18:27:24,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:27:33,775:INFO:Calculating mean and std
2024-10-20 18:27:33,778:INFO:Creating metrics dataframe
2024-10-20 18:27:33,786:INFO:Uploading results into container
2024-10-20 18:27:33,788:INFO:Uploading model into container now
2024-10-20 18:27:33,789:INFO:_master_model_container: 12
2024-10-20 18:27:33,790:INFO:_display_container: 2
2024-10-20 18:27:33,790:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      monotonic_cst=None, random_state=123, splitter='best')
2024-10-20 18:27:33,791:INFO:create_model() successfully completed......................................
2024-10-20 18:27:34,023:INFO:SubProcess create_model() end ==================================
2024-10-20 18:27:34,024:INFO:Creating metrics dataframe
2024-10-20 18:27:34,048:INFO:Initializing Random Forest Regressor
2024-10-20 18:27:34,048:INFO:Total runtime is 1.5315215667088826 minutes
2024-10-20 18:27:34,058:INFO:SubProcess create_model() called ==================================
2024-10-20 18:27:34,059:INFO:Initializing create_model()
2024-10-20 18:27:34,059:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:27:34,059:INFO:Checking exceptions
2024-10-20 18:27:34,059:INFO:Importing libraries
2024-10-20 18:27:34,059:INFO:Copying training dataset
2024-10-20 18:27:34,146:INFO:Defining folds
2024-10-20 18:27:34,146:INFO:Declaring metric variables
2024-10-20 18:27:34,156:INFO:Importing untrained model
2024-10-20 18:27:34,162:INFO:Random Forest Regressor Imported successfully
2024-10-20 18:27:34,171:INFO:Starting cross validation
2024-10-20 18:27:34,177:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:32:48,230:INFO:Calculating mean and std
2024-10-20 18:32:48,233:INFO:Creating metrics dataframe
2024-10-20 18:32:48,238:INFO:Uploading results into container
2024-10-20 18:32:48,239:INFO:Uploading model into container now
2024-10-20 18:32:48,240:INFO:_master_model_container: 13
2024-10-20 18:32:48,241:INFO:_display_container: 2
2024-10-20 18:32:48,245:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2024-10-20 18:32:48,247:INFO:create_model() successfully completed......................................
2024-10-20 18:32:48,438:INFO:SubProcess create_model() end ==================================
2024-10-20 18:32:48,438:INFO:Creating metrics dataframe
2024-10-20 18:32:48,451:INFO:Initializing Extra Trees Regressor
2024-10-20 18:32:48,451:INFO:Total runtime is 6.7715576926867165 minutes
2024-10-20 18:32:48,456:INFO:SubProcess create_model() called ==================================
2024-10-20 18:32:48,457:INFO:Initializing create_model()
2024-10-20 18:32:48,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:32:48,457:INFO:Checking exceptions
2024-10-20 18:32:48,457:INFO:Importing libraries
2024-10-20 18:32:48,457:INFO:Copying training dataset
2024-10-20 18:32:48,563:INFO:Defining folds
2024-10-20 18:32:48,563:INFO:Declaring metric variables
2024-10-20 18:32:48,569:INFO:Importing untrained model
2024-10-20 18:32:48,577:INFO:Extra Trees Regressor Imported successfully
2024-10-20 18:32:48,591:INFO:Starting cross validation
2024-10-20 18:32:48,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:35:43,173:INFO:Calculating mean and std
2024-10-20 18:35:43,175:INFO:Creating metrics dataframe
2024-10-20 18:35:43,180:INFO:Uploading results into container
2024-10-20 18:35:43,181:INFO:Uploading model into container now
2024-10-20 18:35:43,182:INFO:_master_model_container: 14
2024-10-20 18:35:43,182:INFO:_display_container: 2
2024-10-20 18:35:43,183:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, monotonic_cst=None,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2024-10-20 18:35:43,184:INFO:create_model() successfully completed......................................
2024-10-20 18:35:43,400:INFO:SubProcess create_model() end ==================================
2024-10-20 18:35:43,400:INFO:Creating metrics dataframe
2024-10-20 18:35:43,419:INFO:Initializing AdaBoost Regressor
2024-10-20 18:35:43,419:INFO:Total runtime is 9.687698598702749 minutes
2024-10-20 18:35:43,426:INFO:SubProcess create_model() called ==================================
2024-10-20 18:35:43,427:INFO:Initializing create_model()
2024-10-20 18:35:43,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:35:43,427:INFO:Checking exceptions
2024-10-20 18:35:43,427:INFO:Importing libraries
2024-10-20 18:35:43,427:INFO:Copying training dataset
2024-10-20 18:35:43,569:INFO:Defining folds
2024-10-20 18:35:43,569:INFO:Declaring metric variables
2024-10-20 18:35:43,579:INFO:Importing untrained model
2024-10-20 18:35:43,584:INFO:AdaBoost Regressor Imported successfully
2024-10-20 18:35:43,598:INFO:Starting cross validation
2024-10-20 18:35:43,602:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:35:59,080:INFO:Calculating mean and std
2024-10-20 18:35:59,083:INFO:Creating metrics dataframe
2024-10-20 18:35:59,087:INFO:Uploading results into container
2024-10-20 18:35:59,090:INFO:Uploading model into container now
2024-10-20 18:35:59,091:INFO:_master_model_container: 15
2024-10-20 18:35:59,091:INFO:_display_container: 2
2024-10-20 18:35:59,092:INFO:AdaBoostRegressor(estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2024-10-20 18:35:59,092:INFO:create_model() successfully completed......................................
2024-10-20 18:35:59,268:INFO:SubProcess create_model() end ==================================
2024-10-20 18:35:59,268:INFO:Creating metrics dataframe
2024-10-20 18:35:59,280:INFO:Initializing Gradient Boosting Regressor
2024-10-20 18:35:59,280:INFO:Total runtime is 9.952053248882294 minutes
2024-10-20 18:35:59,285:INFO:SubProcess create_model() called ==================================
2024-10-20 18:35:59,286:INFO:Initializing create_model()
2024-10-20 18:35:59,286:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:35:59,286:INFO:Checking exceptions
2024-10-20 18:35:59,286:INFO:Importing libraries
2024-10-20 18:35:59,286:INFO:Copying training dataset
2024-10-20 18:35:59,367:INFO:Defining folds
2024-10-20 18:35:59,368:INFO:Declaring metric variables
2024-10-20 18:35:59,377:INFO:Importing untrained model
2024-10-20 18:35:59,382:INFO:Gradient Boosting Regressor Imported successfully
2024-10-20 18:35:59,397:INFO:Starting cross validation
2024-10-20 18:35:59,399:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:37:52,092:INFO:Calculating mean and std
2024-10-20 18:37:52,097:INFO:Creating metrics dataframe
2024-10-20 18:37:52,103:INFO:Uploading results into container
2024-10-20 18:37:52,104:INFO:Uploading model into container now
2024-10-20 18:37:52,105:INFO:_master_model_container: 16
2024-10-20 18:37:52,105:INFO:_display_container: 2
2024-10-20 18:37:52,106:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-20 18:37:52,107:INFO:create_model() successfully completed......................................
2024-10-20 18:37:52,324:INFO:SubProcess create_model() end ==================================
2024-10-20 18:37:52,324:INFO:Creating metrics dataframe
2024-10-20 18:37:52,346:INFO:Initializing Light Gradient Boosting Machine
2024-10-20 18:37:52,347:INFO:Total runtime is 11.836501296361288 minutes
2024-10-20 18:37:52,356:INFO:SubProcess create_model() called ==================================
2024-10-20 18:37:52,357:INFO:Initializing create_model()
2024-10-20 18:37:52,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:37:52,358:INFO:Checking exceptions
2024-10-20 18:37:52,358:INFO:Importing libraries
2024-10-20 18:37:52,358:INFO:Copying training dataset
2024-10-20 18:37:52,467:INFO:Defining folds
2024-10-20 18:37:52,467:INFO:Declaring metric variables
2024-10-20 18:37:52,473:INFO:Importing untrained model
2024-10-20 18:37:52,483:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-20 18:37:52,494:INFO:Starting cross validation
2024-10-20 18:37:52,502:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:38:04,381:INFO:Calculating mean and std
2024-10-20 18:38:04,385:INFO:Creating metrics dataframe
2024-10-20 18:38:04,391:INFO:Uploading results into container
2024-10-20 18:38:04,392:INFO:Uploading model into container now
2024-10-20 18:38:04,394:INFO:_master_model_container: 17
2024-10-20 18:38:04,395:INFO:_display_container: 2
2024-10-20 18:38:04,396:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2024-10-20 18:38:04,397:INFO:create_model() successfully completed......................................
2024-10-20 18:38:04,593:INFO:SubProcess create_model() end ==================================
2024-10-20 18:38:04,593:INFO:Creating metrics dataframe
2024-10-20 18:38:04,607:INFO:Initializing Dummy Regressor
2024-10-20 18:38:04,607:INFO:Total runtime is 12.040826610724132 minutes
2024-10-20 18:38:04,613:INFO:SubProcess create_model() called ==================================
2024-10-20 18:38:04,614:INFO:Initializing create_model()
2024-10-20 18:38:04,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E8767AE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:38:04,614:INFO:Checking exceptions
2024-10-20 18:38:04,614:INFO:Importing libraries
2024-10-20 18:38:04,614:INFO:Copying training dataset
2024-10-20 18:38:04,703:INFO:Defining folds
2024-10-20 18:38:04,703:INFO:Declaring metric variables
2024-10-20 18:38:04,710:INFO:Importing untrained model
2024-10-20 18:38:04,715:INFO:Dummy Regressor Imported successfully
2024-10-20 18:38:04,726:INFO:Starting cross validation
2024-10-20 18:38:04,730:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:38:09,297:INFO:Calculating mean and std
2024-10-20 18:38:09,299:INFO:Creating metrics dataframe
2024-10-20 18:38:09,305:INFO:Uploading results into container
2024-10-20 18:38:09,308:INFO:Uploading model into container now
2024-10-20 18:38:09,308:INFO:_master_model_container: 18
2024-10-20 18:38:09,309:INFO:_display_container: 2
2024-10-20 18:38:09,309:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2024-10-20 18:38:09,309:INFO:create_model() successfully completed......................................
2024-10-20 18:38:09,509:INFO:SubProcess create_model() end ==================================
2024-10-20 18:38:09,509:INFO:Creating metrics dataframe
2024-10-20 18:38:09,523:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-20 18:38:09,542:INFO:Initializing create_model()
2024-10-20 18:38:09,542:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:38:09,542:INFO:Checking exceptions
2024-10-20 18:38:09,547:INFO:Importing libraries
2024-10-20 18:38:09,547:INFO:Copying training dataset
2024-10-20 18:38:09,630:INFO:Defining folds
2024-10-20 18:38:09,630:INFO:Declaring metric variables
2024-10-20 18:38:09,631:INFO:Importing untrained model
2024-10-20 18:38:09,631:INFO:Declaring custom model
2024-10-20 18:38:09,631:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-20 18:38:09,632:INFO:Cross validation set to False
2024-10-20 18:38:09,633:INFO:Fitting Model
2024-10-20 18:38:10,454:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.038361 seconds.
2024-10-20 18:38:10,454:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-10-20 18:38:10,455:INFO:[LightGBM] [Info] Total Bins 1114
2024-10-20 18:38:10,458:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 13
2024-10-20 18:38:10,464:INFO:[LightGBM] [Info] Start training from score 0.210625
2024-10-20 18:38:11,483:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2024-10-20 18:38:11,483:INFO:create_model() successfully completed......................................
2024-10-20 18:38:11,686:INFO:Creating Dashboard logs
2024-10-20 18:38:11,698:INFO:Model: Light Gradient Boosting Machine
2024-10-20 18:38:11,840:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-20 18:38:12,265:INFO:Initializing predict_model()
2024-10-20 18:38:12,265:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016E8777DDA0>)
2024-10-20 18:38:12,265:INFO:Checking exceptions
2024-10-20 18:38:12,265:INFO:Preloading libraries
2024-10-20 18:38:12,669:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-10-20 18:38:13,382:INFO:Creating Dashboard logs
2024-10-20 18:38:13,386:INFO:Model: Gradient Boosting Regressor
2024-10-20 18:38:13,469:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-20 18:38:14,380:INFO:Creating Dashboard logs
2024-10-20 18:38:14,387:INFO:Model: Random Forest Regressor
2024-10-20 18:38:14,495:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 18:38:15,395:INFO:Creating Dashboard logs
2024-10-20 18:38:15,403:INFO:Model: Extra Trees Regressor
2024-10-20 18:38:15,547:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 18:38:16,617:INFO:Creating Dashboard logs
2024-10-20 18:38:16,620:INFO:Model: AdaBoost Regressor
2024-10-20 18:38:16,699:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 123}
2024-10-20 18:38:17,430:INFO:Creating Dashboard logs
2024-10-20 18:38:17,434:INFO:Model: Ridge Regression
2024-10-20 18:38:17,519:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-20 18:38:18,411:INFO:Creating Dashboard logs
2024-10-20 18:38:18,415:INFO:Model: Bayesian Ridge
2024-10-20 18:38:18,494:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-10-20 18:38:19,398:INFO:Creating Dashboard logs
2024-10-20 18:38:19,404:INFO:Model: Linear Regression
2024-10-20 18:38:19,529:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-10-20 18:38:20,271:INFO:Creating Dashboard logs
2024-10-20 18:38:20,277:INFO:Model: Least Angle Regression
2024-10-20 18:38:20,382:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 123, 'verbose': False}
2024-10-20 18:38:21,255:INFO:Creating Dashboard logs
2024-10-20 18:38:21,262:INFO:Model: Elastic Net
2024-10-20 18:38:21,394:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-20 18:38:22,194:INFO:Creating Dashboard logs
2024-10-20 18:38:22,198:INFO:Model: Huber Regressor
2024-10-20 18:38:22,279:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-10-20 18:38:23,152:INFO:Creating Dashboard logs
2024-10-20 18:38:23,158:INFO:Model: Lasso Regression
2024-10-20 18:38:23,289:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-20 18:38:24,057:INFO:Creating Dashboard logs
2024-10-20 18:38:24,061:INFO:Model: Lasso Least Angle Regression
2024-10-20 18:38:24,137:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 123, 'verbose': False}
2024-10-20 18:38:24,817:INFO:Creating Dashboard logs
2024-10-20 18:38:24,824:INFO:Model: Orthogonal Matching Pursuit
2024-10-20 18:38:24,967:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-10-20 18:38:25,864:INFO:Creating Dashboard logs
2024-10-20 18:38:25,868:INFO:Model: Dummy Regressor
2024-10-20 18:38:25,953:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-10-20 18:38:26,572:INFO:Creating Dashboard logs
2024-10-20 18:38:26,576:INFO:Model: K Neighbors Regressor
2024-10-20 18:38:26,663:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-20 18:38:27,436:INFO:Creating Dashboard logs
2024-10-20 18:38:27,444:INFO:Model: Decision Tree Regressor
2024-10-20 18:38:27,531:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-20 18:38:28,170:INFO:Creating Dashboard logs
2024-10-20 18:38:28,173:INFO:Model: Passive Aggressive Regressor
2024-10-20 18:38:28,269:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-20 18:38:29,202:INFO:_master_model_container: 18
2024-10-20 18:38:29,202:INFO:_display_container: 2
2024-10-20 18:38:29,203:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2024-10-20 18:38:29,203:INFO:compare_models() successfully completed......................................
2024-10-20 18:38:49,586:INFO:Initializing create_model()
2024-10-20 18:38:49,586:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:38:49,586:INFO:Checking exceptions
2024-10-20 18:38:49,614:INFO:Importing libraries
2024-10-20 18:38:49,615:INFO:Copying training dataset
2024-10-20 18:38:49,764:INFO:Defining folds
2024-10-20 18:38:49,764:INFO:Declaring metric variables
2024-10-20 18:38:49,769:INFO:Importing untrained model
2024-10-20 18:38:49,778:INFO:Random Forest Regressor Imported successfully
2024-10-20 18:38:49,789:INFO:Starting cross validation
2024-10-20 18:38:49,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:44:02,273:INFO:Calculating mean and std
2024-10-20 18:44:02,277:INFO:Creating metrics dataframe
2024-10-20 18:44:02,298:INFO:Finalizing model
2024-10-20 18:44:40,656:INFO:Creating Dashboard logs
2024-10-20 18:44:40,665:INFO:Model: Random Forest Regressor
2024-10-20 18:44:40,809:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 18:44:41,269:INFO:Initializing predict_model()
2024-10-20 18:44:41,269:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016E8777D260>)
2024-10-20 18:44:41,269:INFO:Checking exceptions
2024-10-20 18:44:41,269:INFO:Preloading libraries
2024-10-20 18:44:42,365:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-10-20 18:44:45,152:INFO:Uploading results into container
2024-10-20 18:44:45,154:INFO:Uploading model into container now
2024-10-20 18:44:45,186:INFO:_master_model_container: 19
2024-10-20 18:44:45,187:INFO:_display_container: 3
2024-10-20 18:44:45,188:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2024-10-20 18:44:45,188:INFO:create_model() successfully completed......................................
2024-10-20 18:44:53,418:INFO:Initializing tune_model()
2024-10-20 18:44:53,419:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20], 'min_samples_split': [2]}, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-20 18:44:53,419:INFO:Checking exceptions
2024-10-20 18:44:53,501:INFO:Copying training dataset
2024-10-20 18:44:53,750:INFO:Checking base model
2024-10-20 18:44:53,750:INFO:Base model : Random Forest Regressor
2024-10-20 18:44:53,758:INFO:Declaring metric variables
2024-10-20 18:44:53,764:INFO:Defining Hyperparameters
2024-10-20 18:44:53,972:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20], 'actual_estimator__min_samples_split': [2]}
2024-10-20 18:44:53,972:INFO:Tuning with n_jobs=-1
2024-10-20 18:44:53,972:INFO:Initializing GridSearchCV
2024-10-20 18:53:14,680:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__min_samples_split': 2, 'actual_estimator__n_estimators': 100}
2024-10-20 18:53:14,681:INFO:Hyperparameter search completed
2024-10-20 18:53:14,682:INFO:SubProcess create_model() called ==================================
2024-10-20 18:53:14,683:INFO:Initializing create_model()
2024-10-20 18:53:14,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E87679410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2024-10-20 18:53:14,683:INFO:Checking exceptions
2024-10-20 18:53:14,684:INFO:Importing libraries
2024-10-20 18:53:14,684:INFO:Copying training dataset
2024-10-20 18:53:14,828:INFO:Defining folds
2024-10-20 18:53:14,829:INFO:Declaring metric variables
2024-10-20 18:53:14,838:INFO:Importing untrained model
2024-10-20 18:53:14,838:INFO:Declaring custom model
2024-10-20 18:53:14,849:INFO:Random Forest Regressor Imported successfully
2024-10-20 18:53:14,868:INFO:Starting cross validation
2024-10-20 18:53:14,872:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 18:56:29,704:INFO:Calculating mean and std
2024-10-20 18:56:29,706:INFO:Creating metrics dataframe
2024-10-20 18:56:29,721:INFO:Finalizing model
2024-10-20 18:56:53,983:INFO:Uploading results into container
2024-10-20 18:56:53,984:INFO:Uploading model into container now
2024-10-20 18:56:53,985:INFO:_master_model_container: 20
2024-10-20 18:56:53,985:INFO:_display_container: 4
2024-10-20 18:56:53,986:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2024-10-20 18:56:53,986:INFO:create_model() successfully completed......................................
2024-10-20 18:56:54,230:INFO:SubProcess create_model() end ==================================
2024-10-20 18:56:54,231:INFO:choose_better activated
2024-10-20 18:56:54,237:INFO:SubProcess create_model() called ==================================
2024-10-20 18:56:54,239:INFO:Initializing create_model()
2024-10-20 18:56:54,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 18:56:54,239:INFO:Checking exceptions
2024-10-20 18:56:54,243:INFO:Importing libraries
2024-10-20 18:56:54,243:INFO:Copying training dataset
2024-10-20 18:56:54,384:INFO:Defining folds
2024-10-20 18:56:54,384:INFO:Declaring metric variables
2024-10-20 18:56:54,384:INFO:Importing untrained model
2024-10-20 18:56:54,384:INFO:Declaring custom model
2024-10-20 18:56:54,386:INFO:Random Forest Regressor Imported successfully
2024-10-20 18:56:54,387:INFO:Starting cross validation
2024-10-20 18:56:54,391:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-20 19:02:08,617:INFO:Calculating mean and std
2024-10-20 19:02:08,621:INFO:Creating metrics dataframe
2024-10-20 19:02:08,624:INFO:Finalizing model
2024-10-20 19:02:47,605:INFO:Uploading results into container
2024-10-20 19:02:47,606:INFO:Uploading model into container now
2024-10-20 19:02:47,607:INFO:_master_model_container: 21
2024-10-20 19:02:47,607:INFO:_display_container: 5
2024-10-20 19:02:47,608:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2024-10-20 19:02:47,608:INFO:create_model() successfully completed......................................
2024-10-20 19:02:47,854:INFO:SubProcess create_model() end ==================================
2024-10-20 19:02:47,855:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False) result for R2 is 0.3783
2024-10-20 19:02:47,857:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False) result for R2 is 0.4101
2024-10-20 19:02:47,858:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False) is best model
2024-10-20 19:02:47,858:INFO:choose_better completed
2024-10-20 19:02:47,858:INFO:Creating Dashboard logs
2024-10-20 19:02:47,868:INFO:Model: Random Forest Regressor
2024-10-20 19:02:48,018:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': 10, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 19:02:48,551:INFO:Initializing predict_model()
2024-10-20 19:02:48,551:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016E89C87CE0>)
2024-10-20 19:02:48,552:INFO:Checking exceptions
2024-10-20 19:02:48,552:INFO:Preloading libraries
2024-10-20 19:02:49,192:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-10-20 19:02:50,270:INFO:_master_model_container: 21
2024-10-20 19:02:50,270:INFO:_display_container: 4
2024-10-20 19:02:50,271:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2024-10-20 19:02:50,272:INFO:tune_model() successfully completed......................................
2024-10-20 19:02:57,152:INFO:Initializing plot_model()
2024-10-20 19:02:57,152:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-10-20 19:02:57,152:INFO:Checking exceptions
2024-10-20 19:03:25,719:INFO:Initializing evaluate_model()
2024-10-20 19:03:25,720:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-10-20 19:03:25,790:INFO:Initializing plot_model()
2024-10-20 19:03:25,790:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), plot=pipeline, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-20 19:03:25,791:INFO:Checking exceptions
2024-10-20 19:03:25,924:INFO:Preloading libraries
2024-10-20 19:03:25,977:INFO:Copying training dataset
2024-10-20 19:03:25,977:INFO:Plot type: pipeline
2024-10-20 19:03:26,168:INFO:Visual Rendered Successfully
2024-10-20 19:03:26,336:INFO:plot_model() successfully completed......................................
2024-10-20 19:03:37,097:INFO:Initializing plot_model()
2024-10-20 19:03:37,098:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-10-20 19:03:37,098:INFO:Checking exceptions
2024-10-20 19:03:42,257:INFO:Initializing finalize_model()
2024-10-20 19:03:42,257:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-10-20 19:03:42,258:INFO:Finalizing RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2024-10-20 19:03:42,304:INFO:Initializing create_model()
2024-10-20 19:03:42,304:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-10-20 19:03:42,304:INFO:Checking exceptions
2024-10-20 19:03:42,308:INFO:Importing libraries
2024-10-20 19:03:42,308:INFO:Copying training dataset
2024-10-20 19:03:42,317:INFO:Defining folds
2024-10-20 19:03:42,317:INFO:Declaring metric variables
2024-10-20 19:03:42,317:INFO:Importing untrained model
2024-10-20 19:03:42,317:INFO:Declaring custom model
2024-10-20 19:03:42,318:INFO:Random Forest Regressor Imported successfully
2024-10-20 19:03:42,319:INFO:Cross validation set to False
2024-10-20 19:03:42,319:INFO:Fitting Model
2024-10-20 19:04:17,502:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestRegressor(bootstrap=True, ccp_alpha=0.0,
                                       criterion='squared_error', max_depth=10,
                                       max_features=1.0, max_leaf_nodes=None,
                                       max_samples=None,
                                       min_impurity_decrease=0.0,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       monotonic_cst=None, n_estimators=100,
                                       n_jobs=-1, oob_score=False,
                                       random_state=123, verbose=0,
                                       warm_start=False))],
         verbose=False)
2024-10-20 19:04:17,502:INFO:create_model() successfully completed......................................
2024-10-20 19:04:17,738:INFO:Creating Dashboard logs
2024-10-20 19:04:17,739:INFO:Model: Random Forest Regressor
2024-10-20 19:04:17,840:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': 10, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-20 19:04:18,676:INFO:_master_model_container: 21
2024-10-20 19:04:18,677:INFO:_display_container: 4
2024-10-20 19:04:18,700:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestRegressor(bootstrap=True, ccp_alpha=0.0,
                                       criterion='squared_error', max_depth=10,
                                       max_features=1.0, max_leaf_nodes=None,
                                       max_samples=None,
                                       min_impurity_decrease=0.0,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       monotonic_cst=None, n_estimators=100,
                                       n_jobs=-1, oob_score=False,
                                       random_state=123, verbose=0,
                                       warm_start=False))],
         verbose=False)
2024-10-20 19:04:18,700:INFO:finalize_model() successfully completed......................................
2024-10-20 19:04:40,560:INFO:Initializing predict_model()
2024-10-20 19:04:40,561:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016E83352450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestRegressor(bootstrap=True, ccp_alpha=0.0,
                                       criterion='squared_error', max_depth=10,
                                       max_features=1.0, max_leaf_nodes=None,
                                       max_samples=None,
                                       min_impurity_decrease=0.0,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       monotonic_cst=None, n_estimators=100,
                                       n_jobs=-1, oob_score=False,
                                       random_state=123, verbose=0,
                                       warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016EDBED1620>)
2024-10-20 19:04:40,561:INFO:Checking exceptions
2024-10-20 19:04:40,561:INFO:Preloading libraries
2024-10-20 19:04:40,565:INFO:Set up data.
2024-10-20 19:04:40,652:INFO:Set up index.
2024-10-20 19:05:46,032:INFO:Initializing save_model()
2024-10-20 19:05:46,033:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestRegressor(bootstrap=True, ccp_alpha=0.0,
                                       criterion='squared_error', max_depth=10,
                                       max_features=1.0, max_leaf_nodes=None,
                                       max_samples=None,
                                       min_impurity_decrease=0.0,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       monotonic_cst=None, n_estimators=100,
                                       n_jobs=-1, oob_score=False,
                                       random_state=123, verbose=0,
                                       warm_start=False))],
         verbose=False), model_name=final_dt_model_customer_churn, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\PEDROV~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-10-20 19:05:46,033:INFO:Adding model into prep_pipe
2024-10-20 19:05:46,033:WARNING:Only Model saved as it was a pipeline.
2024-10-20 19:05:46,107:INFO:final_dt_model_customer_churn.pkl saved in current working directory
2024-10-20 19:05:46,133:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestRegressor(bootstrap=True, ccp_alpha=0.0,
                                       criterion='squared_error', max_depth=10,
                                       max_features=1.0, max_leaf_nodes=None,
                                       max_samples=None,
                                       min_impurity_decrease=0.0,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       monotonic_cst=None, n_estimators=100,
                                       n_jobs=-1, oob_score=False,
                                       random_state=123, verbose=0,
                                       warm_start=False))],
         verbose=False)
2024-10-20 19:05:46,133:INFO:save_model() successfully completed......................................
2024-10-20 19:05:46,366:INFO:Initializing load_model()
2024-10-20 19:05:46,367:INFO:load_model(model_name=final_dt_model_customer_churn, platform=None, authentication=None, verbose=True)
2024-10-20 19:49:53,841:WARNING:C:\Users\PEDRO VARGAS\AppData\Local\Temp\ipykernel_13976\2033685314.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='experiment_final_model2',version=1,stage='Production')

2024-10-20 19:50:16,925:WARNING:C:\Users\PEDRO VARGAS\AppData\Local\Temp\ipykernel_13976\963143896.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='experiment_final_model',version=1,stage='Production')

2024-10-20 19:51:49,421:WARNING:c:\Users\PEDRO VARGAS\AppData\Local\Programs\Python\Python311\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

